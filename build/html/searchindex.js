Search.setIndex({"docnames": ["README", "deepdrr", "deepdrr.annotations", "deepdrr.device", "deepdrr.geo", "deepdrr.instruments", "deepdrr.projector", "deepdrr.projector.mcgpu_incoherent_scatter_data", "deepdrr.projector.mcgpu_mean_free_path_data", "deepdrr.projector.mcgpu_rita_params", "deepdrr.utils", "deepdrr.vol", "index", "modules"], "filenames": ["README.md", "deepdrr.rst", "deepdrr.annotations.rst", "deepdrr.device.rst", "deepdrr.geo.rst", "deepdrr.instruments.rst", "deepdrr.projector.rst", "deepdrr.projector.mcgpu_incoherent_scatter_data.rst", "deepdrr.projector.mcgpu_mean_free_path_data.rst", "deepdrr.projector.mcgpu_rita_params.rst", "deepdrr.utils.rst", "deepdrr.vol.rst", "index.rst", "modules.rst"], "titles": ["&lt;no title&gt;", "deepdrr package", "deepdrr.annotations package", "deepdrr.device package", "deepdrr.geo package", "deepdrr.instruments package", "deepdrr.projector package", "deepdrr.projector.mcgpu_incoherent_scatter_data package", "deepdrr.projector.mcgpu_mean_free_path_data package", "deepdrr.projector.mcgpu_rita_params package", "deepdrr.utils package", "deepdrr.vol package", "DeepDRR", "deepdrr"], "terms": {"readm": 0, "md": 0, "devic": [1, 6, 10, 12, 13], "carm": [1, 6, 12, 13], "mobile_carm": [1, 12, 13], "simple_devic": [1, 12, 13], "geo": [1, 2, 3, 5, 6, 10, 11, 12, 13], "core": [1, 12, 13], "except": [1, 3, 6, 12, 13], "function": [1, 6, 10, 11, 12, 13], "hyperplan": [1, 12, 13], "random": [1, 12, 13], "rai": [1, 3, 6, 12, 13], "type": [1, 2, 3, 5, 6, 10, 11, 12, 13], "util": [1, 11, 12, 13], "instrument": [1, 12, 13], "base": [1, 2, 3, 4, 6, 10, 11, 12, 13], "projector": [1, 12, 13], "mcgpu_incoherent_scatter_data": [1, 6, 12, 13], "pmma_compton_data": [1, 6, 13], "adipose_compton_data": [1, 6, 13], "air_compton_data": [1, 6, 13], "blood_compton_data": [1, 6, 13], "bone_compton_data": [1, 6, 13], "brain_compton_data": [1, 6, 13], "breast_compton_data": [1, 6, 13], "cartilage_compton_data": [1, 6, 13], "connective_compton_data": [1, 6, 13], "glands_others_compton_data": [1, 6, 13], "liver_compton_data": [1, 6, 13], "lung_compton_data": [1, 6, 13], "muscle_compton_data": [1, 6, 13], "red_marrow_compton_data": [1, 6, 13], "skin_compton_data": [1, 6, 13], "soft_tissue_compton_data": [1, 6, 13], "stomach_intestines_compton_data": [1, 6, 13], "titanium_compton_data": [1, 6, 13], "water_compton_data": [1, 6, 13], "mcgpu_mean_free_path_data": [1, 6, 12, 13], "pmma_mfp": [1, 6, 13], "adipose_mfp": [1, 6, 13], "air_mfp": [1, 6, 13], "blood_mfp": [1, 6, 13], "bone_mfp": [1, 6, 13], "brain_mfp": [1, 6, 13], "breast_mfp": [1, 6, 13], "cartilage_mfp": [1, 6, 13], "connective_mfp": [1, 6, 13], "glands_others_mfp": [1, 6, 13], "liver_mfp": [1, 6, 13], "lung_mfp": [1, 6, 13], "muscle_mfp": [1, 6, 13], "red_marrow_mfp": [1, 6, 13], "skin_mfp": [1, 6, 13], "soft_tissue_mfp": [1, 6, 13], "stomach_intestines_mfp": [1, 6, 13], "titanium_mfp": [1, 6, 13], "water_mfp": [1, 6, 13], "mcgpu_rita_param": [1, 6, 12, 13], "pmma_rita_param": [1, 6, 13], "adipose_rita_param": [1, 6, 13], "air_rita_param": [1, 6, 13], "blood_rita_param": [1, 6, 13], "bone_rita_param": [1, 6, 13], "brain_rita_param": [1, 6, 13], "breast_rita_param": [1, 6, 13], "cartilage_rita_param": [1, 6, 13], "connective_rita_param": [1, 6, 13], "glands_others_rita_param": [1, 6, 13], "liver_rita_param": [1, 6, 13], "lung_rita_param": [1, 6, 13], "muscle_rita_param": [1, 6, 13], "red_marrow_rita_param": [1, 6, 13], "skin_rita_param": [1, 6, 13], "soft_tissue_rita_param": [1, 6, 13], "stomach_intestines_rita_param": [1, 6, 13], "titanium_rita_param": [1, 6, 13], "water_rita_param": [1, 6, 13], "analytic_gener": [1, 12, 13], "conv_to_mcgpu": [1, 12, 13], "cuda_scatter_struct": [1, 12, 13], "mass_attenu": [1, 12, 13], "material_coeffici": [1, 12, 13], "mcgpu_compton_data": [1, 12, 13], "mcgpu_dens": [1, 12, 13], "mcgpu_mfp_data": [1, 12, 13], "mcgpu_rita_sampl": [1, 12, 13], "plane_surfac": [1, 12, 13], "rita": [1, 12, 13], "scatter": [1, 12, 13], "spectral_data": [1, 12, 13], "data_util": [1, 12, 13], "dicom_util": [1, 12, 13], "heatmap_util": [1, 12, 13], "image_util": [1, 12, 13], "mesh_util": [1, 11, 12, 13], "test_util": [1, 12, 13], "vol": [1, 4, 12, 13], "kwire": [1, 10, 12, 13], "volum": [1, 2, 4, 5, 6, 10, 12, 13], "packag": [12, 13], "subpackag": [], "submodul": [12, 13], "downsample_tool": [12, 13], "modul": [12, 13], "load_dicom": [12, 13], "load_dicom_tool": [12, 13], "log": [10, 12, 13], "network_segment": [12, 13], "segment": [2, 6, 10, 11, 12, 13], "vi": [12, 13], "content": 13, "annot": [1, 10, 12, 13], "fiduci": [1, 12, 13], "line_annot": [1, 12, 13], "human": 4, "get_intro": [], "speak": [], "class": [1, 2, 3, 4, 5, 6, 10, 11], "gender": [], "name": [1, 4, 5, 6, 10, 11], "sourc": [1, 2, 3, 4, 5, 6, 10, 11], "foo": [], "get": [1, 2, 3, 4, 5, 6, 10, 11], "man": [], "": [1, 3, 4, 6, 10, 11], "introduct": [1, 11], "return": [1, 2, 3, 4, 5, 6, 10, 11], "self": [1, 4, 6], "string": 4, "word": [], "some": [1, 4], "paramet": [1, 2, 3, 4, 5, 6, 10, 11], "none": [1, 2, 3, 4, 5, 6, 10, 11], "deepdrr_data_dir": [1, 10, 13], "download": [1, 6, 10, 11, 13], "jsonabl": [1, 10, 13], "load_fcsv": [1, 10, 13], "load_json": [1, 10, 13], "save_fcsv": [1, 10, 13], "save_json": [1, 10, 13], "path": [1, 2, 4, 5, 6, 10, 11], "data": [1, 2, 4, 5, 6, 10, 11, 13], "directori": [1, 5, 6, 10, 11], "The": [1, 2, 3, 4, 5, 6, 10, 11], "i": [1, 3, 4, 5, 6, 10, 11], "determin": [4, 5, 6, 10], "environ": 10, "variabl": [4, 10], "exist": [1, 10, 11], "otherwis": [1, 4, 6, 10], "dataset": 10, "If": [1, 3, 4, 5, 6, 10, 11], "doe": [1, 4, 6, 10, 11], "creat": [1, 4, 5, 6, 10, 11], "url": [1, 10, 13], "str": [1, 2, 3, 4, 5, 6, 10, 11], "filenam": [1, 6, 10, 13], "root": [4, 10], "md5": 10, "extract_nam": 10, "file": [1, 2, 4, 5, 6, 10, 11], "place": [1, 3, 5, 10, 11, 13], "link": [10, 11], "option": [1, 2, 3, 4, 5, 6, 10, 11], "save": [1, 2, 4, 6, 10, 11, 13], "under": [1, 4, 10, 11], "us": [1, 3, 4, 5, 6, 10, 11], "from": [1, 2, 3, 4, 6, 10, 11], "default": [1, 2, 3, 4, 5, 6, 10, 11], "can": [1, 2, 3, 4, 6, 10, 11], "overriden": [4, 10], "set": [3, 4, 10], "deepdrr_data": [5, 10], "checksum": 10, "extract": [4, 10], "obj": 10, "ani": [1, 3, 4, 6, 10, 11], "convert": [1, 3, 4, 10, 11], "json": [1, 2, 3, 4, 10], "readi": 10, "contain": [1, 4, 5, 10, 11], "object": [1, 2, 3, 4, 6, 10, 11], "param": [1, 6, 10, 11], "tupl": [1, 3, 4, 5, 6, 10, 11], "ndarrai": [1, 2, 3, 4, 5, 6, 10, 11], "load": [1, 2, 4, 10, 11, 13], "fcsv": [2, 10], "point": [1, 2, 3, 4, 5, 6, 10, 11, 13], "shape": [1, 4, 10, 11, 13], "n": [1, 4, 6, 10], "3": [1, 4, 6, 10, 11], "np": [1, 2, 3, 4, 6, 10, 11], "list": [1, 2, 4, 5, 6, 10, 11], "coordinate_system": [1, 10, 11], "lp": [1, 2, 4, 10, 11], "cameraintrinsictransform": [1, 3, 4, 6, 13], "aspect_ratio": [1, 4], "cx": [1, 4], "cy": [1, 4], "dim": [1, 4, 10], "focal_length": [1, 4], "from_paramet": [1, 4, 11, 13], "from_siz": [1, 4], "fx": [1, 4], "fy": [1, 4], "get_config": [1, 4, 11, 13], "input_dim": [1, 4], "optical_cent": [1, 4], "sensor_height": [1, 3, 4], "sensor_s": [1, 4, 6], "sensor_width": [1, 3, 4], "cameraproject": [1, 3, 4, 6, 13], "k": [1, 4, 6, 11], "r": [1, 4, 10], "camera3d_from_index": [1, 3, 4], "camera3d_from_world": [1, 3, 4, 13], "center_in_world": [1, 4, 5, 11, 13], "extrins": [1, 3, 4], "from_krt": [1, 4], "from_rtk": [1, 4], "get_center_in_volum": [1, 4], "get_center_in_world": [1, 4], "get_ray_transform": [1, 4], "index_from_camera2d": [1, 4], "index_from_camera3d": [1, 3, 4], "index_from_world": [1, 3, 4], "intrins": [1, 3, 4, 6], "principle_ray_in_world": [1, 3, 4], "t": [1, 3, 4, 5, 6, 10, 11], "world_from_camera3d": [1, 3, 4], "world_from_index": [1, 3, 4], "world_from_index_on_image_plan": [1, 4], "f": [1, 4, 6, 11, 13], "frametransform": [1, 2, 3, 4, 5, 10, 11, 13], "as_quatpo": [1, 4], "from_line_seg": [1, 4], "from_origin": [1, 4], "from_pd": [1, 4], "from_point_correspond": [1, 4], "from_pointdir": [1, 4], "from_point": [1, 4], "from_quatpo": [1, 4], "from_rot": [1, 4], "from_rt": [1, 4], "from_scal": [1, 4], "from_transl": [1, 4], "get_point": [1, 4], "ident": [1, 4, 11], "inv": [1, 4], "j": [1, 4], "load_txt": [1, 4], "o": [1, 4], "save_txt": [1, 4], "toarrai": [1, 4], "tostr": [1, 4], "transform_point": [1, 4], "hasdirect": [1, 4, 13], "angl": [1, 3, 4, 5, 6, 10, 11], "cosine_dist": [1, 4], "get_direct": [1, 2, 4], "rotfrom": [1, 4], "hasloc": [1, 4, 13], "haslocationanddirect": [1, 4, 13], "from_point_direct": [1, 4], "hasproject": [1, 4, 13], "projection_typ": [1, 4], "homogeneousobject": [1, 4, 13], "copi": [1, 4, 10, 11], "dtype": [1, 4, 6], "from_arrai": [1, 4], "get_data": [1, 4, 13], "tolist": [1, 4], "joinabl": [1, 4, 13], "join": [1, 4], "meetabl": [1, 4, 13], "intersect": [1, 4, 6], "meet": [1, 4], "as_vector": [1, 4], "from_ani": [1, 4], "lerp": [1, 4], "point2d": [1, 4, 13], "backproject": [1, 4], "point3d": [1, 2, 3, 4, 5, 6, 11, 13], "pointorvector": [1, 4, 13], "norm": [1, 4], "normsqr": [1, 4], "w": [1, 4, 6, 10], "x": [1, 3, 4, 6, 10, 11], "y": [1, 3, 4, 6, 10, 11], "z": [1, 3, 4, 6, 10, 11], "primit": [1, 4, 13], "transform": [1, 3, 4, 6, 10, 11, 13], "get_cent": [1, 4], "invers": [1, 4, 6], "vector": [1, 3, 4, 6, 10, 11, 13], "as_point": [1, 4], "cross": [1, 4, 6], "dot": [1, 4], "hat": [1, 4], "normal": [1, 4, 6, 13], "vector2d": [1, 4, 13], "perpendicular": [1, 4], "vector3d": [1, 2, 3, 4, 5, 6, 11, 13], "as_plan": [1, 4], "rotat": [1, 3, 4, 5, 6, 11, 13], "rotvec_to": [1, 4], "frame_transform": [1, 4, 13], "p": [1, 4, 6, 13], "v": [1, 4, 6, 13], "joinerror": [1, 4, 13], "meeterror": [1, 4, 13], "b": [1, 4], "c": [1, 3, 4, 6, 10], "d": [1, 4, 10], "distanc": [1, 3, 4, 5, 6, 11], "evalu": [1, 4], "get_norm": [1, 4], "project": [1, 3, 4, 6, 13], "signed_dist": [1, 4], "line": [1, 2, 4, 5, 10, 13], "line2d": [1, 4, 10, 13], "line3d": [1, 4, 5, 11, 13], "l": [1, 4, 13], "dual": [1, 4], "from_dual": [1, 4], "from_prim": [1, 4], "primal": [1, 4], "q": [1, 4, 6], "u": [1, 4, 6], "plane": [1, 3, 4, 6, 13], "from_point_norm": [1, 4], "pl": [1, 4, 13], "spherical_uniform": [1, 4, 13], "uniform": [1, 4, 10, 13], "from_pn": [1, 4], "from_pq": [1, 4], "ray2d": [1, 4, 13], "ray3d": [1, 3, 4, 5, 11, 13], "length": [1, 4, 10], "midpoint": [1, 3, 4], "segment2d": [1, 4, 10, 13], "segment3d": [1, 4, 13], "singl": [1, 4, 6, 10], "__len__": [1, 4], "from_quat": [1, 4], "from_matrix": [1, 4], "from_rotvec": [1, 4, 11], "from_mrp": [1, 4], "from_eul": [1, 4], "as_quat": [1, 4], "as_matrix": [1, 4], "as_rotvec": [1, 4], "as_mrp": [1, 4], "as_eul": [1, 4], "concaten": [1, 4], "appli": [1, 4, 10], "__mul__": [1, 4], "magnitud": [1, 4], "mean": [1, 4, 6], "reduc": [1, 4], "create_group": [1, 4], "__getitem__": [1, 4], "align_vector": [1, 4], "find_dicom": [1, 10, 13], "get_tim": [1, 10, 13], "read_imag": [1, 10, 13], "get_threshold": [1, 10, 13], "as_float32": [1, 10, 13], "as_uint8": [1, 10, 13], "blend_heatmap": [1, 10, 13], "draw_circl": [1, 10, 13], "draw_lin": [1, 10, 13], "draw_mask": [1, 10, 13], "draw_seg": [1, 10, 13], "ensure_cdim": [1, 10, 13], "image_sav": [1, 10, 13], "download_sampledata": [1, 10, 13], "get_output_dir": [1, 10, 13], "generate_uniform_angl": [1, 10, 13], "listifi": [1, 10, 13], "mappabl": [1, 10, 13], "neglog": [1, 6, 10, 13], "one_hot": [1, 10, 13], "param_sav": [1, 10, 13], "radian": [1, 3, 4, 10, 13], "try_import_pyvista": [1, 10, 13], "try_import_vtk": [1, 10, 13], "tuplifi": [1, 10, 13], "visual": [1, 10], "pyvista": [1, 3, 5, 10, 11], "3d": [1, 2, 4, 6], "thi": [1, 3, 4, 5, 6, 10, 11], "debug": [1, 5, 11], "verif": 1, "purpos": [1, 4], "meant": 1, "replac": 1, "built": [1, 11], "render": [1, 5, 11], "To": [1, 3, 4], "view": [1, 3, 4], "scene": 1, "detail": [1, 3, 4, 6], "mesh": [1, 2, 3, 5, 10, 11], "disk": [1, 11], "open": [1, 2, 10], "them": [1, 4, 10], "suitabl": 1, "viewer": 1, "slicer": [1, 2, 11], "note": [1, 4, 6, 11], "have": [1, 3, 4, 5, 6], "same": [1, 4, 5, 6, 10, 11], "limit": 1, "thei": [1, 4, 10], "mai": [1, 3, 4, 6, 10], "properli": 1, "jupyt": 1, "notebook": 1, "get_mesh_in_world": [1, 2, 3, 5, 11, 13], "method": [1, 3, 4, 6, 10, 11], "often": [1, 4], "an": [1, 4, 5, 6, 10, 11], "ssh": 1, "window": 1, "fix": 1, "try": 1, "follow": [1, 3, 4], "bash": 1, "bin": 1, "sudo": 1, "apt": 1, "instal": 1, "xvfb": 1, "export": 1, "displai": 1, "99": 1, "0": [1, 2, 3, 4, 5, 6, 10, 11], "pyvista_off_screen": 1, "true": [1, 2, 3, 4, 5, 6, 10, 11], "pyvista_use_ipyvtk": 1, "mesa_gl_version_overrid": 1, "2": [1, 4, 6, 10, 11], "mesa_glsl_version_overrid": 1, "150": 1, "screen": 1, "1024x768x24": 1, "dev": 1, "null": 1, "1": [1, 2, 3, 4, 5, 6, 10, 11], "sleep": 1, "get_frustum_mesh": [1, 12, 13], "camera_project": [1, 6], "pixel_s": [1, 3, 4], "float": [1, 2, 3, 4, 5, 6, 10, 11], "image_path": 1, "image_plane_dist": 1, "full_frustum": 1, "bool": [1, 2, 3, 4, 5, 6, 10, 11], "polydata": [1, 2, 5, 10, 11], "realli": [1, 2, 3, 10], "simpl": [1, 3], "camera": [1, 3, 4, 6, 10], "pixel": [1, 3, 4, 6, 10], "size": [1, 3, 6, 10], "mm": [1, 3, 4], "imag": [1, 3, 4, 6, 10], "which": [1, 2, 3, 4, 5, 6, 11], "whether": [1, 3, 4, 5, 6, 10, 11], "show": [1, 12, 13], "full": [1, 2, 3, 4, 5, 11], "frustum": 1, "just": [1, 3, 4, 5, 10, 11], "principl": [1, 3, 4], "repres": [1, 3, 4, 5, 6], "arm": [1, 3, 6], "pv": [1, 5, 10, 11], "item": 1, "fals": [1, 2, 3, 4, 5, 6, 10, 11], "color": [1, 2, 10], "tan": [1, 4], "cyan": 1, "green": 1, "red": 1, "background": 1, "white": 1, "use_cach": [1, 2, 3, 5, 10, 11], "offscreen": 1, "mesh_color": 1, "black": 1, "given": [1, 3, 4, 5, 6, 10, 11], "descript": [1, 4, 10, 11], "homogen": 4, "geometri": [1, 4, 11], "librari": 4, "copyright": [1, 4], "2022": 4, "benjamin": 4, "killeen": [3, 4], "mit": 4, "licens": 4, "known": 4, "issu": 4, "when": [4, 5, 6, 11], "multipli": 4, "scalar": [4, 10], "safer": 4, "put": 4, "left": [1, 3, 4, 6, 11], "becaus": 4, "your": 4, "int": [1, 2, 3, 4, 6, 10, 11], "actual": [1, 3, 4, 10], "numpi": [4, 10], "case": 4, "greedili": 4, "ha": [4, 6], "__array__": 4, "arrai": [1, 2, 4, 6, 10, 11], "so": [1, 3, 4, 10, 11], "multipl": [1, 4, 5, 6, 10], "It": [1, 3, 4, 6], "still": 4, "correct": 4, "result": [4, 6], "wrong": 4, "longer": 4, "properti": [1, 2, 3, 4, 5, 6, 11], "aspect": 4, "ratio": 4, "focal": 4, "matrix": [1, 3, 4, 6], "unit": [1, 3, 4, 6, 11], "classmethod": [1, 2, 4, 6, 11], "shear": 4, "fundament": 4, "2d": [4, 6, 10], "index": 4, "space": [1, 3, 4, 5, 6, 10, 11, 13], "map": [1, 4, 6, 10, 11], "sensor": [3, 4, 6], "center": [1, 3, 4, 5, 6, 10, 11], "ar": [1, 3, 4, 5, 6, 10, 11], "usual": 4, "measur": 4, "world": [1, 2, 3, 4, 5, 6, 11], "e": [4, 6], "g": [4, 6], "millimet": [1, 4, 6, 11], "handl": 4, "convers": 4, "refer": [4, 6], "includ": [1, 4, 6, 10, 11], "szeliski": 4, "comput": [1, 4, 6, 11], "vision": 4, "http": [1, 4, 6, 11], "ksimek": 4, "github": 4, "io": 4, "2013": 4, "08": 4, "13": 4, "where": [1, 3, 4, 6, 10, 11], "isocent": [1, 3, 4, 6, 13], "pinhol": 4, "union": [1, 4, 10, 11], "tubpl": 4, "f_x": 4, "f_y": 4, "both": 4, "modifi": 4, "one": [1, 4, 6, 10], "provid": [1, 3, 4, 5, 6, 10, 11], "source_to_detector_dist": [1, 3, 4, 6, 13], "gener": [4, 6, 10], "readabl": 4, "recommend": [1, 4, 11], "wai": [1, 4], "although": [1, 4], "source_to_detector": 4, "inform": [4, 6], "about": [1, 3, 4, 6, 11], "mere": 4, "width": [3, 4, 6], "height": [3, 4, 6], "valu": [1, 3, 4, 6, 10, 11], "detector": [1, 3, 4, 6], "config": [1, 4, 11], "dict": [1, 3, 4, 5, 6, 10, 11], "should": [1, 3, 4], "scale": [1, 3, 4, 10, 11], "assum": [1, 4, 6, 10, 11], "optic": 4, "convent": [1, 4, 11], "origin": [1, 3, 4, 6, 10, 11, 13], "top": [4, 6, 10], "right": [1, 3, 4, 6, 10, 11], "down": [1, 4, 5, 6, 11], "sens": 4, "translat": [1, 3, 4, 11, 13], "ijk": [1, 4, 6, 11], "In": [4, 5], "source_point": 4, "get_canonical_proj_matrix": 4, "anyvolum": 4, "camera3d": [1, 3, 4], "frame": [1, 3, 4, 11], "coordin": [1, 2, 3, 4, 6, 10, 11], "That": 4, "compar": 4, "get_camera_cent": 4, "configur": [1, 4, 11], "ijk_from_index": [4, 6], "goe": 4, "take": [1, 4, 6, 10], "direct": [1, 3, 4, 5, 6, 11], "between": [4, 5, 10, 11], "transfrom": 4, "through": [3, 4], "indic": [4, 6, 10], "input": [1, 4, 6, 10], "alia": [4, 6], "quaternion": 4, "posit": [1, 3, 4, 6, 10, 11], "A": [1, 3, 4, 5, 6, 10, 11], "7": [4, 6, 11], "element": [1, 4, 11], "first": [3, 4, 6, 10, 11], "4": [4, 6], "being": [3, 4, 6], "last": [4, 10], "output": [1, 2, 4, 6, 10], "dimens": [4, 10], "x_b": 4, "y_b": 4, "x_a": 4, "y_a": 4, "b_from_a": 4, "align": [1, 4, 5, 6, 11], "endpoint": [1, 2, 4, 5, 11], "perfectli": 4, "two": [4, 6, 11], "possibli": 4, "second": [4, 6, 10, 11], "uniqu": 4, "due": 4, "axi": [1, 3, 4, 6, 10, 11], "make": [1, 3, 4, 10, 11], "know": 4, "suppos": 4, "its": [1, 3, 4, 6, 11], "negat": 4, "counterintuit": 4, "target": 4, "pose": [1, 2, 3, 4, 6, 11], "points_b": 4, "points_a": 4, "rigid": [1, 3, 4], "correspond": [1, 3, 4, 5, 6, 11], "minim": 4, "squar": 4, "match": 4, "arg": [2, 4, 11], "kwarg": [1, 2, 4, 10, 11], "max_iter": 4, "1000": [3, 4], "icp": 4, "cloud": 4, "m": 4, "quatpo": 4, "wrapper": 4, "around": 4, "rx": 4, "must": [1, 3, 4, 6, 11], "uniformli": [4, 6], "cl": 4, "subclass": [1, 3, 4], "well": [4, 6], "defin": [1, 4], "rais": [1, 3, 4, 6, 11], "notimplementederror": [1, 4, 11], "_inv": 4, "text": 4, "a_from_b": 4, "3x4": 4, "differ": [1, 3, 4, 10, 11], "call": [1, 2, 3, 4, 5, 6], "4x4": 4, "nonhomogen": 4, "other": [1, 4, 10, 11], "cosin": [4, 6], "co": [4, 6], "abstract": [3, 4], "associ": [4, 5, 6, 10], "test": [4, 10], "locat": [1, 3, 4, 5, 6, 10, 11], "abc": [3, 4, 5], "reli": 4, "all": [1, 4, 6, 10, 11], "wrap": 4, "live": 4, "For": [4, 5, 6], "float32": [4, 6, 10], "non": 4, "homog": 4, "represent": 4, "togeth": 4, "exampl": [4, 5, 6, 11], "connect": 4, "check": [4, 6], "cannot": 4, "numer": [4, 6], "alpha": [1, 3, 4, 10, 13], "5": [1, 3, 4, 6, 10, 11], "linearli": 4, "interpol": [1, 4, 6, 11, 13], "anoth": [1, 4, 11], "fraction": [3, 4, 5, 10], "travel": [4, 6], "pass": [1, 3, 4, 10, 11], "argument": [1, 3, 4, 6, 10, 11], "linalg": 4, "order": [4, 10], "geometr": [4, 6], "like": [1, 4, 6, 11], "etc": [1, 4, 6], "would": [4, 11], "instanti": 4, "directli": [3, 4], "valueerror": [1, 4, 6], "find": 4, "arbitrari": 4, "draw": [4, 10], "2pi": 4, "doesn": [1, 3, 4], "theta": [1, 3, 4, 6, 10], "ignor": [1, 3, 4, 6], "rotvec": 4, "conveni": [1, 4, 11], "depend": [1, 4, 6], "how": [1, 4, 6, 10, 11], "ft": 4, "a00": 4, "a10": 4, "a20": 4, "a01": 4, "a11": 4, "a21": 4, "a02": 4, "a12": 4, "a22": 4, "a03": 4, "a13": 4, "a23": 4, "mayb": 4, "9": [4, 6], "column": 4, "major": [4, 6], "a31": 4, "a32": 4, "a33": 4, "12": 4, "whitespac": 4, "separ": 4, "prefer": 4, "There": 4, "three": 4, "instanc": [1, 4, 10, 11], "shoud": 4, "NOT": [1, 4, 6], "constructor": 4, "pars": [4, 10], "veector": 4, "error": 4, "lower": [1, 4, 6, 11], "dimension": 4, "coeffici": [4, 6], "third": 4, "constant": 4, "term": 4, "sign": 4, "tell": 4, "you": [4, 5], "side": [1, 4, 11], "closest": [4, 10], "parent": [1, 3, 4, 11], "acut": 4, "sought": 4, "construct": 4, "consist": 4, "mathbf": 4, "ax": [4, 6, 10], "altern": 4, "onto": [3, 4], "6": [4, 6], "dl": [1, 4], "acm": 4, "org": [1, 4, 11], "doi": 4, "pdf": [4, 6], "10": [4, 6], "1145": 4, "965141": 4, "563900": 4, "form": [1, 4, 6, 10, 11], "lk": 4, "fourth": 4, "fifth": 4, "sixth": 4, "initi": [1, 3, 4, 6, 13], "1x": 4, "2y": 4, "THE": [1, 4], "WITH": 4, "op": [4, 10], "3z": 4, "abov": [1, 4], "radiu": [1, 4, 5, 10, 11], "sampl": [1, 4, 6, 10, 11], "clip": [1, 3, 4], "distribut": [1, 4, 6], "standard": 4, "deviat": 4, "number": [1, 4, 6, 10, 11], "d_phi": 4, "surfac": [1, 4, 5, 6, 10, 11], "sphere": [4, 6], "within": [1, 4, 6], "bound": [1, 4, 6, 10, 11], "preserv": [1, 4, 11], "respect": 4, "more": [3, 4, 6], "flexibl": 4, "poind": 4, "todo": [1, 3, 4, 5, 10], "part": [3, 4], "2020": 4, "free": [1, 4, 6, 13], "softwar": [1, 4], "redistribut": [1, 4], "gnu": 4, "public": [4, 10], "publish": 4, "foundat": 4, "either": [1, 3, 4, 10, 11], "version": [1, 4, 11], "later": 4, "hope": 4, "without": [1, 4, 6], "warranti": [1, 4], "even": [1, 4], "impli": [1, 4], "merchant": [1, 4], "fit": [1, 4], "FOR": [1, 4], "particular": [1, 3, 4], "see": [1, 4, 6], "receiv": 4, "along": [1, 3, 4, 5, 6, 10, 11], "www": [1, 4, 11], "interfac": [3, 4], "matric": 4, "rodrigu": 4, "euler": 4, "oper": 4, "support": [1, 4, 11], "applic": [4, 6], "composit": 4, "sinc": [1, 4], "store": 4, "from_": 4, "below": [4, 6], "slerp": 4, "scipi": [1, 4, 11], "spatial": 4, "import": [4, 6], "format": 4, "underli": 4, "independ": 4, "consid": 4, "counter": 4, "clockwis": [4, 5, 11], "90": 4, "degre": [1, 3, 4, 5, 6, 10, 11], "sin": 4, "pi": 4, "express": [1, 4], "22044605e": 4, "16": 4, "00000000e": 4, "00": 4, "57079633": 4, "zyx": 4, "70710678": 4, "quit": 4, "rang": [1, 4, 6, 10], "here": [1, 4, 11], "we": [4, 6], "again": 4, "also": [1, 3, 4, 10, 11], "possibl": [1, 4], "stack": 4, "45": 4, "60": 4, "30": [4, 10], "now": 4, "38268343": 4, "92387953": 4, "39190384": 4, "36042341": 4, "43967974": 4, "72331741": 4, "82842712": 4, "41421356": 4, "24452282": 4, "78093109": 4, "89002836": 4, "slice": 4, "were": 4, "1d": 4, "fact": 4, "r_arrai": 4, "asarrai": 4, "compos": 4, "r1": 4, "r2": 4, "r3": 4, "final": [4, 6], "invert": 4, "These": 4, "serv": [4, 6], "overview": 4, "highlight": 4, "thorough": 4, "consult": 4, "individu": 4, "weight": 4, "return_sensit": 4, "estim": 4, "optim": 4, "best": 4, "observ": 4, "loss": [1, 4], "solv": 4, "frac": 4, "sum_": 4, "w_i": 4, "lvert": 4, "_i": 4, "rvert": 4, "each": [4, 5, 6, 10], "kabsch": 4, "algorithm": 4, "_": 4, "array_lik": 4, "compon": [4, 5], "row": 4, "denot": [4, 6], "describ": 4, "rel": 4, "sensit": 4, "estimated_rot": 4, "rssd": 4, "sum": 4, "after": [1, 3, 4, 6, 10], "equal": 4, "sqrt": 4, "minimum_loss": 4, "found": [1, 4, 11], "sensitivity_matrix": 4, "explain": 4, "onli": [1, 3, 4, 11], "small": 4, "perturb": 4, "specif": [1, 4], "proport": 4, "covari": 4, "wa": 4, "significantli": 4, "less": [1, 4, 11], "than": 4, "harmon": 4, "varianc": [4, 6], "accuraci": 4, "01": [1, 4, 6, 10, 11], "rigor": 4, "discuss": 4, "en": 4, "wikipedia": 4, "wiki": [1, 4, 11], "kabsch_algorithm": 4, "landi": 4, "marklei": 4, "attitud": 4, "fast": 4, "journal": 4, "astronaut": 4, "scienc": 4, "41": 4, "No": 4, "1993": 4, "pp": 4, "261": [4, 6], "280": 4, "harmonic_mean": 4, "seen": 4, "As": 4, "physic": 4, "glu": 4, "befor": [4, 10], "matrici": 4, "specifi": [1, 3, 4, 6], "broadcast": 4, "rule": 4, "uniti": 4, "boolean": 4, "rotated_vector": 4, "oppos": 4, "12132034": 4, "07106781e": 4, "zxy": 4, "09026039": 4, "11237244": 4, "86860844": 4, "09533535": 4, "8365163": 4, "3169873": 4, "seq": 4, "orient": [1, 3, 4, 5, 11], "elementari": 4, "onc": [4, 6], "sequenc": 4, "been": 4, "chosen": 4, "calcul": [4, 6], "suffer": 4, "problem": [3, 4], "gimbal": 4, "lock": [3, 4], "lose": 4, "freedom": 4, "warn": 4, "zero": 4, "howev": [1, 4], "charact": 4, "belong": 4, "adjac": 4, "mix": 4, "flag": 4, "els": [4, 6], "180": 4, "inclus": 4, "xyz": 4, "zxz": 4, "euler_angl": 4, "definition_by_intrinsic_rot": 4, "malcolm": 4, "shuster": 4, "formula": 4, "guidanc": 4, "control": 4, "dynam": 4, "29": 4, "215": 4, "221": 4, "2006": [4, 6], "gimbal_lock": 4, "in_applied_mathemat": 4, "real": 4, "orthogon": [1, 4, 6], "rotation_matrix": 4, "in_three_dimens": 4, "as_dcm": 4, "new": [1, 3, 4, 6, 11], "mrp": 4, "whose": [4, 6], "singuar": 4, "360": 4, "avoid": 4, "ensur": 4, "exce": 4, "switch": 4, "past": 4, "alwai": [3, 4], "surveri": 4, "475": 4, "476": 4, "simpli": 4, "revers": 4, "quat": 4, "quaternions_and_spatial_rot": 4, "give": [4, 10], "e2": 4, "80": [4, 6], "93angle_represent": 4, "rotation_vector": 4, "yx": 4, "69": 4, "2820323": 4, "120": 4, "00000000000001": 4, "35102172": 4, "8": [1, 4, 6], "group": 4, "dn": 4, "cn": 4, "integ": [4, 6, 10], "icosahedr": 4, "octahedr": 4, "tetrahedr": 4, "dicycl": 4, "cyclic": 4, "lowercas": 4, "pointgroup": 4, "reflect": 4, "theori": [1, 4], "span": 4, "euclidean": 4, "enough": 4, "practic": 4, "basi": [4, 6], "global": 4, "bodi": 4, "centr": 4, "attach": 4, "move": [1, 3, 4, 5, 6, 11], "up": [1, 3, 4, 11], "wide": 4, "35": 4, "proper": 4, "approxim": [4, 6], "th": 4, "31": 4, "440": 4, "442": 4, "2008": 4, "special": [1, 4], "det": 4, "12500000000000003": 4, "38461538": 4, "92307692": 4, "0000000000000002": 4, "from_dcm": 4, "ith": 4, "rot_vec": 4, "rotaton": 4, "num": 4, "effect": 4, "current": [1, 3, 4, 11], "04719755": 4, "78539816": 4, "ey": 4, "14159265": 4, "141592653589793": 4, "chordal": 4, "l2": 4, "induc": 4, "arithmet": 4, "24945696": 4, "25054542": 4, "random_st": 4, "randomst": 4, "seed": [4, 6, 10], "singleton": 4, "alreadi": [4, 10], "random_rot": 4, "effici": [4, 10], "higher": [4, 10], "stat": 4, "special_ortho_group": 4, "110": [1, 3, 4], "5976185": 4, "55": 4, "32758512": 4, "76": 4, "3289269": 4, "91": 4, "59132005": 4, "14": 4, "3629884": 4, "93": 4, "91933182": 4, "25": [1, 4, 10, 11], "23835501": 4, "02035145": 4, "121": 4, "67867086": 4, "51": 4, "51414184": 4, "15": 4, "29022692": 4, "172": 4, "46870023": 4, "81": 4, "63376847": 4, "27": 4, "39521579": 4, "60408416": 4, "return_indic": 4, "reduct": [4, 6], "smallest": 4, "symmetri": 4, "left_best": 4, "right_best": 4, "deal": 10, "dicom": [1, 10, 11], "image_dir": 10, "device_tim": 10, "datetim": 10, "max_differ": 10, "acquisit": 10, "time": [1, 6, 10], "parallel": 10, "work": 10, "subtre": 10, "search": 10, "sure": 10, "larg": 10, "maximum": 10, "timestamp": 10, "h": 10, "threshold": [1, 10, 11], "heatmap": 10, "keep": 10, "fewer": 10, "uint8": 10, "palett": 10, "spectral": 10, "num_heatmap": 10, "circl": 10, "255": 10, "thick": 10, "mask": 10, "contour": 10, "num_mask": 10, "prefix": 10, "tiff": 10, "code": [1, 6, 10], "mkdir": 10, "pil": 10, "write": 10, "former": [1, 10], "transpos": 10, "autom": 10, "ct": [1, 10, 11], "chest": 10, "nrrd": [1, 10, 11], "torso": 10, "ctpelvic1k": 10, "scan": 10, "pelvi": 10, "superior": [1, 10, 11], "pubic": 10, "ramu": 10, "fractur": 10, "select": 10, "ctpelvik1k": 10, "trajectori": [5, 10, 11], "unzip": 10, "kei": 10, "domain": 10, "phi_rang": [1, 6, 10], "theta_rang": [1, 6, 10], "over": [1, 6, 10], "phi": [1, 3, 6, 10], "min": 10, "max": 10, "step": [1, 6, 10], "ndim": 10, "everi": [1, 10], "decor": 10, "func": [6, 10], "across": [6, 10], "allow": 10, "unless": 10, "keyword": 10, "cours": 10, "unchang": [3, 10], "expect": 10, "epsilon": 10, "neg": [6, 10], "intens": [6, 10], "offset": [1, 3, 10], "logarithm": 10, "num_class": 10, "One": 10, "hot": 10, "encod": 10, "label": [1, 6, 10, 11], "insert": 10, "proj_mat": 10, "photon": [6, 10], "spectrum": [1, 6, 10], "save_path": 10, "paramat": 10, "deprec": 10, "legaci": 1, "from_dicom": [1, 11, 13], "conv_hu_to_dens": [1, 12, 13], "hu_valu": [1, 11], "smoothair": 1, "conv_hu_to_materi": [1, 12, 13], "conv_hu_to_materials_threshold": [1, 12, 13], "source_path": 1, "fixed_slice_thinck": 1, "new_resolut": 1, "truncat": 1, "smooth_air": 1, "use_thresholding_segment": 1, "file_extens": 1, "dcm": 1, "upsampl": [1, 12, 13], "newresolut": 1, "voxels": 1, "matthew": 1, "maci": 1, "2017": 1, "reserv": 1, "binari": [1, 11], "modif": 1, "permit": 1, "condit": 1, "met": 1, "retain": 1, "notic": 1, "disclaim": 1, "reproduc": 1, "document": 1, "materi": [1, 5, 6, 11, 13], "neither": 1, "holder": 1, "nor": 1, "contributor": 1, "endors": 1, "promot": 1, "product": 1, "deriv": 1, "prior": 1, "written": 1, "permiss": 1, "BY": 1, "AND": 1, "AS": 1, "OR": 1, "BUT": 1, "TO": 1, "OF": 1, "IN": 1, "NO": 1, "event": [1, 6], "shall": 1, "BE": [1, 6], "liabl": 1, "indirect": 1, "incident": 1, "exemplari": 1, "consequenti": 1, "damag": 1, "procur": 1, "substitut": 1, "good": 1, "servic": 1, "profit": 1, "busi": 1, "interrupt": 1, "caus": 1, "ON": 1, "liabil": 1, "contract": 1, "strict": 1, "tort": 1, "neglig": 1, "aris": 1, "out": [1, 6], "IF": 1, "advis": 1, "SUCH": 1, "contbatchnorm3d": [1, 12, 13], "num_featur": [1, 13], "ep": [1, 13], "1e": 1, "05": [1, 6], "momentum": [1, 13], "affin": [1, 13], "track_running_stat": [1, 13], "_batchnorm": 1, "forward": [1, 5, 11, 13], "perform": [1, 3, 6, 11], "overridden": [1, 3], "recip": 1, "need": [1, 11], "afterward": 1, "instead": [1, 3], "care": 1, "run": [1, 10], "regist": 1, "hook": 1, "while": 1, "latter": 1, "silent": 1, "downtransit": [1, 12, 13], "inchan": 1, "nconv": 1, "elu": 1, "dropout": 1, "train": [1, 13], "elucon": [1, 12, 13], "nchan": 1, "inputtransit": [1, 12, 13], "outchan": 1, "luconv": [1, 12, 13], "outputtransit": [1, 12, 13], "nll": 1, "uptransit": [1, 12, 13], "skipx": 1, "vnet": [1, 12, 13], "passthrough": [1, 12, 13], "segmentationnet": [1, 12, 13], "model_segment": 1, "pth": 1, "tar": 1, "input_volum": 1, "show_result": 1, "dropbox": 1, "com": [1, 6], "pn4aw4z2i01eoo4": 1, "from_fcsv": [1, 2], "from_json": [1, 2], "fiduciallist": [1, 2, 13], "to_lp": [1, 2], "to_ra": [1, 2], "lineannot": [1, 2, 13], "startpoint": [1, 2, 5, 11], "anatomical_coordinate_system": [1, 2, 5, 11, 13], "anatomical_from_world": [1, 2, 11, 13], "direction_in_world": [1, 2], "endpoint_in_world": [1, 2, 11], "from_markup": [1, 2], "get_mesh": [1, 2], "midpoint_in_world": [1, 2], "startpoint_in_world": [1, 2, 11], "trajectory_in_world": [1, 2, 5, 11], "world_from_anatom": [1, 2, 5, 11, 13], "get_camera3d_from_world": [1, 3, 13], "move_bi": [1, 3, 13], "move_to": [1, 3, 13], "make_detector_rot": [1, 3, 13], "camera3d_from_devic": [1, 3, 13], "camera_intrins": [1, 3, 6, 13], "detector_height": [1, 3, 13], "detector_width": [1, 3], "device_from_camera3d": [1, 3, 13], "device_from_world": [1, 3], "get_camera_project": [1, 3, 13], "principle_rai": [1, 3, 13], "source_in_world": [1, 3], "world_from_devic": [1, 3, 11, 13], "mobilecarm": [1, 3, 12, 13], "arm_from_devic": [1, 3, 13], "arm_width": [1, 3, 13], "beta": [1, 3, 13], "device_from_arm": [1, 3, 13], "isocenter_in_world": [1, 3, 13], "jitter": [1, 3, 13], "max_isocent": [1, 3, 13], "min_isocent": [1, 3, 13], "reposit": [1, 3, 13], "source_height": [1, 3, 13], "source_in_arm": [1, 3, 13], "source_in_devic": [1, 3, 13], "source_radiu": [1, 3, 13], "to_config": [1, 3, 13], "viewpoint": [1, 3, 13], "viewpoint_in_world": [1, 3, 13], "pose_vector_angl": [1, 3, 13], "simpledevic": [1, 3, 13], "set_view": [1, 3], "num_point": [1, 5], "advanc": [1, 5, 11], "base_in_world": [1, 5, 11], "centerline_in_world": [1, 5, 11], "get_cache_dir": [1, 5], "get_model_path": [1, 5], "length_in_world": [1, 5, 11], "tip": [1, 5, 11], "tip_in_world": [1, 5, 11], "twist": [1, 5, 11], "anatomical_from_ijk": [1, 5, 11, 13], "add_nois": [1, 6, 13], "get_mat_filenam": [1, 6, 13], "make_mcgpu_input": [1, 6, 13], "cudacomptonstruct": [1, 6, 13], "memsiz": [1, 6], "cudamatmfpstruct": [1, 6, 13], "cudaplanesurfacestruct": [1, 6, 13], "cudarayleighstruct": [1, 6, 13], "cudawoodcockstruct": [1, 6, 13], "calculate_attenuation_gpu": [1, 6, 13], "calculate_intensity_from_spectrum": [1, 6, 13], "get_absorption_coef": [1, 6, 13], "log_interp": [1, 6, 13], "sanity_check_compton_data": [1, 6, 13], "sanity_check_mfp": [1, 6, 13], "sanity_check_saved_rita_param": [1, 6, 13], "planesurfac": [1, 6, 13], "basis_1": [1, 6], "basis_2": [1, 6], "check_ray_intersect": [1, 6], "get_lin_comb_coef": [1, 6], "plane_vector": [1, 6], "point_on_surfac": [1, 6], "point_on_surface_check": [1, 6], "surface_origin": [1, 6], "initialize_output_arrai": [1, 6, 13], "output_s": [1, 6, 13], "project_over_carm_rang": [1, 6, 13], "import_pycuda": [1, 6, 13], "from_pdf": [1, 6], "from_saved_param": [1, 6], "sample_rita": [1, 6], "numerically_integr": [1, 6, 13], "get_detector_plan": [1, 6, 13], "get_mfp_data": [1, 6, 13], "get_scattered_dir": [1, 6, 13], "get_woodcock_mfp": [1, 6, 13], "make_woodcock_mfp": [1, 6, 13], "move_photon_to_volum": [1, 6, 13], "sample_compton_theta_e_prim": [1, 6, 13], "sample_rayleigh_theta": [1, 6, 13], "sample_u01": [1, 6, 13], "sample_initial_direct": [1, 6, 13], "sample_initial_energi": [1, 6, 13], "simulate_scatter_no_vr": [1, 6, 13], "track_single_photon_no_vr": [1, 6, 13], "isosurfac": [1, 10, 11, 13], "voxel": [1, 5, 10, 11, 13], "voxelize_dir": [1, 10, 13], "voxelize_fil": [1, 10, 13], "base_in_ijk": [1, 11], "base_in_anatom": [1, 11], "diamet": [1, 11], "from_exampl": [1, 11], "tip_in_ijk": [1, 11], "tip_in_anatom": [1, 11], "metalvolum": [1, 11, 13], "ijk_from_lp": [1, 11, 13], "ijk_from_ra": [1, 11, 13], "ijk_from_anatom": [1, 11, 13], "ijk_from_world": [1, 11, 13], "lps_from_ijk": [1, 11, 13], "ras_from_ijk": [1, 11, 13], "cache_dir": [1, 5, 11, 13], "copy_pos": [1, 11, 13], "crop": [1, 11, 13], "facedown": [1, 11, 13], "faceup": [1, 11, 13], "from_hu": [1, 11, 13], "from_nifti": [1, 11, 13], "from_nrrd": [1, 11, 13], "get_bbox_ijk": [1, 11, 13], "get_bounding_box_in_world": [1, 11, 13], "get_surfac": [1, 11, 13], "orient_pati": [1, 11, 13], "origin_in_anatom": [1, 11, 13], "origin_in_world": [1, 11, 13], "place_cent": [1, 11, 13], "prone": [1, 11, 13], "segment_materi": [1, 11, 13], "shrink": [1, 11, 13], "supin": [1, 11, 13], "translate_center_to": [1, 11, 13], "world_from_ijk": [1, 10, 11, 13], "ori_ct_volum": 1, "ct_volum": 1, "ct_voxel_s": 1, "tool_volum": 1, "tool_voxel_s": 1, "ct_materi": 1, "tool_materi": 1, "tool_origin": 1, "tool": [1, 5, 11], "load_dicom_ct": [1, 12, 13], "load_dicom_met": [1, 12, 13], "sortbi": 1, "sliceloc": 1, "fixed_slice_think": 1, "flip": 1, "replace_materi": [1, 12, 13], "metal_volume_m_ori": 1, "setup_log": [1, 12, 13], "isocenter_dist": [1, 3], "rho": [1, 3], "suggest": [1, 3, 11], "intern": [1, 3, 6], "state": [1, 3], "cran": [1, 3], "caud": [1, 3], "arc": [1, 3], "lect": [1, 3], "angul": [1, 3], "main": [1, 3], "add": [1, 3], "delta_isocent": [1, 3], "delta_phi": [1, 3], "delta_theta": [1, 3], "delta_rho": [1, 3], "min_phi": [1, 3], "max_phi": [1, 3], "min_theta": [1, 3], "max_theta": [1, 3], "delta": [1, 3], "gamma": [1, 3], "horizontal_mov": [1, 3], "200": [1, 3, 11], "vertical_travel": [1, 3], "430": [1, 3], "min_alpha": [1, 3], "40": [1, 3], "max_alpha": [1, 3], "min_beta": [1, 3], "225": [1, 3], "max_beta": [1, 3], "1020": [1, 3], "source_to_isocenter_vertical_dist": [1, 3], "530": [1, 3], "source_to_isocenter_horizontal_offset": [1, 3], "immersion_depth": [1, 3], "730": [1, 3], "free_spac": [1, 3], "820": [1, 3], "1536": [1, 3], "194": [1, 3], "rotate_camera_left": [1, 3], "enforce_isocenter_bound": [1, 3], "orbit": [1, 3], "movement": [1, 3], "siemen": [1, 3, 11], "cio": [1, 3], "spin": [1, 3], "100": [1, 3], "camera3d_transform": [1, 3], "runtimeerror": [1, 3], "avail": [1, 3, 6, 11], "delta_alpha": [1, 3], "delta_beta": [1, 3], "delta_gamma": [1, 3], "chang": [1, 3, 6, 11], "matter": [1, 3], "interest_point_in_world": [1, 3], "desir": [1, 3], "overrid": [1, 3, 5, 11], "secondari": [1, 3], "interest_point": [1, 3], "maintain": [1, 3], "device_in_world": [1, 3], "reset": [1, 3], "adjust": [1, 3], "elimin": [1, 3], "safe": [1, 3], "dictionari": [1, 3, 6, 11], "interest": [1, 3], "ideal": [1, 3], "prioriti": [1, 6], "mode": [1, 6], "linear": [1, 6, 11], "90kv_al40": [1, 6], "add_scatt": [1, 6], "scatter_num": [1, 6], "photon_count": [1, 6], "10000": [1, 6], "thread": [1, 6], "max_block_index": [1, 6], "1024": [1, 6], "collected_energi": [1, 6], "intensity_upper_bound": [1, 6], "attenuate_outside_volum": [1, 6], "alloc": [1, 6], "gpu": [1, 6, 11], "memori": [1, 6], "transfer": [1, 6], "previous": [1, 6], "obtain": [1, 6], "drr": [1, 6], "mass": [1, 6], "attenu": [1, 6], "coorind": [1, 5, 11], "crop_box": [1, 11], "box": [1, 11], "turn": [1, 11], "face": [1, 11], "patient": [1, 11], "posterior": [1, 11], "toward": [1, 3, 5, 11], "inferior": [1, 11], "anatom": [1, 2, 11], "system": [1, 6, 11], "ra": [1, 2, 6, 11], "anterior": [1, 11], "use_threshold": [1, 11], "metadata": [1, 11], "multi": [1, 11], "faster": [1, 11], "accur": [1, 11], "cach": [1, 5, 11], "dir": [1, 5, 6, 11], "save_cach": [1, 11], "density_kwarg": [1, 11], "nifti": [1, 11], "nii": [1, 11], "gz": [1, 11], "high": [1, 11], "densiti": [1, 5, 6, 10, 11], "bone": [1, 5, 11], "treat": [1, 11], "solid": [1, 11], "nonzero": [1, 11], "addit": [1, 11], "convert_hounsfield_to_dens": [1, 11], "cartesian": [1, 11], "help": [1, 11], "empti": [1, 11], "corner": [1, 11], "enclos": [1, 11], "cell": [1, 11], "upper": [1, 6, 11], "volumetr": [1, 11], "info": [1, 11], "outlin": [1, 5, 11], "wirefram": [1, 5, 11], "don": [1, 5, 11], "re": [1, 5, 11], "expens": [1, 5, 11], "slow": [1, 11], "hood": [1, 11], "cubic": [1, 11], "spline": [1, 11], "accept": [1, 11], "nearest": [1, 11], "outsid": [1, 11], "nan": [1, 11], "node_cent": [1, 10, 11], "smooth": [1, 10, 11], "decim": [1, 10, 11], "decimation_point": [1, 11], "smooth_it": [1, 10, 11], "relaxation_factor": [1, 10, 11], "convert_to_lp": [1, 11], "anatomical_coordin": [1, 11], "node": [1, 10, 11], "factor": [1, 6, 11], "mani": [1, 11], "remov": [1, 11], "iter": [1, 10, 11], "relax": [1, 11], "popul": [1, 11], "head_first": [1, 11], "loop": [1, 11], "head": [1, 11], "stomach": [1, 11], "point_in_anatom": [1, 11], "desired_point_in_world": [1, 11], "x_in_anatom": [1, 11], "x_in_world": [1, 11], "output_dir": [1, 10, 11], "cache_nam": [1, 11], "potenti": [1, 11], "hounsfield": [1, 11], "use_threthold": [1, 11], "dnn": [1, 11], "look": [1, 5, 11], "liter": 2, "slicer3d": 2, "5000076295109483": 2, "mrk": 2, "implement": 3, "sub": 3, "attribut": 3, "local": 3, "world_transform": 3, "want": [3, 5], "By": 3, "corrspond": 3, "rid": 3, "gimbl": 3, "300": 3, "necessarili": [3, 6], "understand": 3, "basic": 3, "concept": 3, "source_to_point_dist": 3, "source_to_point_fract": 3, "do": 3, "world_coordin": 3, "model": [5, 10], "stl": 5, "insid": 5, "mytool": 5, "steel": 5, "plastic": 5, "toolclassnam": 5, "material_1": 5, "material_2": 5, "material_3": 5, "toolclassname2": 5, "4000": 5, "progress": [5, 11], "start": [5, 11], "end": [5, 11], "input_imag": 6, "photon_prob": 6, "photon_numb": 6, "deepdrr_mat_nam": 6, "those": 6, "py": 6, "geom": 6, "target_dir": 6, "histori": 6, "threads_per_block": 6, "histories_per_thread": 6, "source_xyz_cm": 6, "source_direct": 6, "detector_pixel": 6, "detector_size_cm": 6, "source_to_detector_distance_cm": 6, "source_to_isocenter_distance_cm": 6, "compton_arr": 6, "struct_gpu_ptr": 6, "364": 6, "mfp_arr": 6, "400084": 6, "psurf": 6, "rita_obj": 6, "mat_nam": 6, "104120": 6, "200044": 6, "projections_gpu": 6, "energi": 6, "pool": 6, "blocksiz": 6, "50": 6, "energy_kev": 6, "absorpt": 6, "level": 6, "kev": 6, "cm": 6, "xinterp": 6, "po": 6, "hit": 6, "imper": 6, "uncheck": 6, "pycuda": 6, "context": 6, "autoinit": 6, "x_arr": 6, "y_arr": 6, "a_arr": 6, "b_arr": 6, "float64": 6, "x_min": 6, "x_max": 6, "pdf_func": 6, "callabl": 6, "n_grid_point": 6, "int32": 6, "128": 6, "interv": 6, "gridpoint": 6, "analyt": 6, "grid": 6, "finish": 6, "least": 6, "saved_rita_param": 6, "x_i": 6, "y_i": 6, "greek": 6, "xi": 6, "a_i": 6, "b_i": 6, "randomli": 6, "integr": 6, "20": 6, "gauss": 6, "page": 6, "penelop": 6, "rt_kinv": 6, "sdd": 6, "source_world": 6, "n_x": 6, "n_y": 6, "n_z": 6, "bottom": 6, "3x3": 6, "canon": 6, "tabl": 6, "access": 6, "isn": 6, "exactli": 6, "entri": 6, "rayleigh": 6, "compton": 6, "total": 6, "cos_theta": 6, "incom": 6, "polar": 6, "dir_prim": 6, "azimuth": 6, "outgo": 6, "woodcock": 6, "explan": 6, "what": 6, "section": 6, "centimet": 6, "mfp": 6, "woodock": 6, "volume_min_bound": 6, "volume_max_bound": 6, "transport": 6, "rectangular": 6, "prism": 6, "veri": 6, "minimum": 6, "photon_energi": 6, "mat_nshel": 6, "mat_compton_data": 6, "interact": 6, "electron": 6, "shell": 6, "e_prim": 6, "rayleigh_sampl": 6, "49": 6, "paper": 6, "mont": 6, "carlo": 6, "simul": 6, "mc": 6, "gpu_v1": 6, "googl": 6, "archiv": 6, "mcgpu": 6, "accordingli": 6, "unnorm": 6, "p_": 6, "sampler": 6, "dx": 6, "dy": 6, "dz": 6, "ev": 6, "emit": 6, "source_ijk": 6, "index_from_ijk": 6, "mfp_woodcock": 6, "50000e": 6, "04": 6, "04178e": 6, "55000e": 6, "39995e": 6, "60000e": 6, "05336e": 6, "65000e": 6, "64766e": 6, "70000e": 6, "74507e": 6, "02": 6, "75000e": 6, "91945e": 6, "80000e": 6, "66386e": 6, "85000e": 6, "11402e": 6, "90000e": 6, "03605e": 6, "03": 6, "95000e": 6, "46023e": 6, "00000e": 6, "98617e": 6, "05000e": 6, "61021e": 6, "10000e": 6, "38544e": 6, "15000e": 6, "24095e": 6, "20000e": 6, "24354e": 6, "25000e": 6, "32791e": 6, "30000e": 6, "54120e": 6, "35000e": 6, "77681e": 6, "40000e": 6, "01946e": 6, "45000e": 6, "15664e": 6, "29585e": 6, "44935e": 6, "60105e": 6, "74699e": 6, "90277e": 6, "04829e": 6, "20221e": 6, "33956e": 6, "48280e": 6, "60390e": 6, "72837e": 6, "85632e": 6, "95578e": 6, "06992e": 6, "16468e": 6, "25768e": 6, "34075e": 6, "41587e": 6, "48395e": 6, "54891e": 6, "60055e": 6, "65150e": 6, "69445e": 6, "72769e": 6, "76006e": 6, "78407e": 6, "80723e": 6, "82196e": 6, "83128e": 6, "83984e": 6, "84307e": 6, "84100e": 6, "83524e": 6, "82432e": 6, "81287e": 6, "80096e": 6, "78105e": 6, "76531e": 6, "74023e": 6, "71790e": 6, "68942e": 6, "66373e": 6, "63352e": 6, "59890e": 6, "57000e": 6, "53536e": 6, "49795e": 6, "46479e": 6, "42752e": 6, "38628e": 6, "34899e": 6, "30836e": 6, "26791e": 6, "22751e": 6, "18398e": 6, "14410e": 6, "10103e": 6, "05821e": 6, "01563e": 6, "97005e": 6, "92796e": 6, "88296e": 6, "83824e": 6, "79381e": 6, "74965e": 6, "70575e": 6, "96222e": 6, "61584e": 6, "57269e": 6, "01222e": 6, "48164e": 6, "43656e": 6, "39174e": 6, "34718e": 6, "30288e": 6, "25881e": 6, "21258e": 6, "16900e": 6, "12564e": 6, "08023e": 6, "03509e": 6, "99230e": 6, "94765e": 6, "90326e": 6, "47529e": 6, "81519e": 6, "77151e": 6, "72804e": 6, "37937e": 6, "61531e": 6, "44526e": 6, "41230e": 6, "37761e": 6, "34418e": 6, "31051e": 6, "27522e": 6, "24112e": 6, "20550e": 6, "17100e": 6, "13507e": 6, "10021e": 6, "06401e": 6, "02771e": 6, "92380e": 6, "55851e": 6, "19241e": 6, "83513e": 6, "46727e": 6, "09884e": 6, "72989e": 6, "36053e": 6, "99082e": 6, "62085e": 6, "25067e": 6, "88674e": 6, "51600e": 6, "14530e": 6, "77470e": 6, "39953e": 6, "02977e": 6, "66033e": 6, "29129e": 6, "92273e": 6, "55471e": 6, "18731e": 6, "82062e": 6, "45468e": 6, "08841e": 6, "24621e": 6, "61821e": 6, "01387e": 6, "e_ab": 6, "5000": 6, "produc": 6, "grayscal": 6, "dure": 6, "vr": 6, "techniqu": 6, "make_woodock_mfp": 6, "absorb": 6, "deposit": 6, "initial_po": 6, "initial_dir": 6, "initial_": 6, "labeled_seg": 6, "volume_shap": 6, "detector_plan": 6, "material_id": 6, "enter": 6, "initital_": 6, "density_vol": 6, "id": 6, "coord": 6, "experienc": 6, "march": 10, "cube": 10, "style": 10, "much": 10, "misnam": 10, "input_dir": 10, "output_path": 10, "li": 11, "start_point_in_world": 11, "end_point_in_world": 11, "wire": 11, "metal": 11, "pointi": 11}, "objects": {"": [[1, 0, 0, "-", "deepdrr"]], "deepdrr": [[1, 1, 1, "", "CArm"], [1, 1, 1, "", "MobileCArm"], [1, 1, 1, "", "Projector"], [1, 1, 1, "", "Volume"], [2, 0, 0, "-", "annotations"], [3, 0, 0, "-", "device"], [1, 0, 0, "-", "downsample_tool"], [4, 0, 0, "-", "geo"], [5, 0, 0, "-", "instruments"], [1, 0, 0, "-", "load_dicom"], [1, 0, 0, "-", "load_dicom_tool"], [1, 0, 0, "-", "logging"], [1, 0, 0, "-", "network_segmentation"], [6, 0, 0, "-", "projector"], [1, 0, 0, "-", "segmentation"], [1, 5, 1, "", "setup_log"], [10, 0, 0, "-", "utils"], [1, 0, 0, "-", "vis"], [11, 0, 0, "-", "vol"]], "deepdrr.CArm": [[1, 2, 1, "", "camera3d_from_world"], [1, 3, 1, "", "get_camera3d_from_world"], [1, 3, 1, "", "move_by"], [1, 3, 1, "", "move_to"]], "deepdrr.MobileCArm": [[1, 4, 1, "", "alpha"], [1, 2, 1, "", "arm_from_device"], [1, 4, 1, "", "arm_width"], [1, 4, 1, "", "beta"], [1, 2, 1, "", "camera3d_from_device"], [1, 2, 1, "", "camera3d_from_world"], [1, 4, 1, "", "detector_height"], [1, 2, 1, "", "device_from_arm"], [1, 2, 1, "", "device_from_camera3d"], [1, 3, 1, "", "get_camera3d_from_world"], [1, 3, 1, "", "get_camera_projection"], [1, 3, 1, "", "get_mesh_in_world"], [1, 4, 1, "", "isocenter"], [1, 2, 1, "", "isocenter_in_world"], [1, 3, 1, "", "jitter"], [1, 2, 1, "", "max_isocenter"], [1, 2, 1, "", "min_isocenter"], [1, 3, 1, "", "move_by"], [1, 3, 1, "", "move_to"], [1, 2, 1, "", "principle_ray"], [1, 3, 1, "", "reposition"], [1, 4, 1, "", "source_height"], [1, 2, 1, "", "source_in_arm"], [1, 2, 1, "", "source_in_device"], [1, 4, 1, "", "source_radius"], [1, 3, 1, "", "to_config"], [1, 2, 1, "", "viewpoint"], [1, 2, 1, "", "viewpoint_in_world"], [1, 4, 1, "", "world_from_device"]], "deepdrr.Projector": [[1, 2, 1, "", "camera_intrinsics"], [1, 3, 1, "", "free"], [1, 3, 1, "", "initialize"], [1, 3, 1, "", "initialize_output_arrays"], [1, 2, 1, "", "output_size"], [1, 3, 1, "", "project"], [1, 3, 1, "", "project_over_carm_range"], [1, 2, 1, "", "source_to_detector_distance"], [1, 2, 1, "", "volume"], [1, 4, 1, "", "volumes"]], "deepdrr.Volume": [[1, 2, 1, "", "IJK_from_LPS"], [1, 2, 1, "", "IJK_from_RAS"], [1, 2, 1, "", "IJK_from_anatomical"], [1, 2, 1, "", "IJK_from_world"], [1, 2, 1, "", "LPS_from_IJK"], [1, 2, 1, "", "RAS_from_IJK"], [1, 4, 1, "", "anatomical_coordinate_system"], [1, 4, 1, "", "anatomical_from_IJK"], [1, 2, 1, "", "anatomical_from_ijk"], [1, 2, 1, "", "anatomical_from_world"], [1, 4, 1, "", "cache_dir"], [1, 2, 1, "", "center_in_world"], [1, 3, 1, "", "copy_pose"], [1, 3, 1, "", "crop"], [1, 4, 1, "", "data"], [1, 3, 1, "", "facedown"], [1, 3, 1, "", "faceup"], [1, 3, 1, "", "from_dicom"], [1, 3, 1, "", "from_hu"], [1, 3, 1, "", "from_nifti"], [1, 3, 1, "", "from_nrrd"], [1, 3, 1, "", "from_parameters"], [1, 3, 1, "", "get_bbox_IJK"], [1, 3, 1, "", "get_bounding_box_in_world"], [1, 3, 1, "", "get_config"], [1, 3, 1, "", "get_mesh_in_world"], [1, 3, 1, "", "get_surface"], [1, 2, 1, "", "ijk_from_anatomical"], [1, 2, 1, "", "ijk_from_world"], [1, 3, 1, "", "interpolate"], [1, 3, 1, "", "isosurface"], [1, 3, 1, "", "load"], [1, 4, 1, "", "materials"], [1, 3, 1, "", "orient_patient"], [1, 2, 1, "", "origin"], [1, 2, 1, "", "origin_in_anatomical"], [1, 2, 1, "", "origin_in_world"], [1, 3, 1, "", "place"], [1, 3, 1, "", "place_center"], [1, 3, 1, "", "prone"], [1, 3, 1, "", "rotate"], [1, 3, 1, "", "save"], [1, 3, 1, "", "segment_materials"], [1, 2, 1, "", "shape"], [1, 3, 1, "", "shrink"], [1, 2, 1, "", "spacing"], [1, 3, 1, "", "supine"], [1, 3, 1, "", "translate"], [1, 3, 1, "", "translate_center_to"], [1, 2, 1, "", "world_from_IJK"], [1, 4, 1, "", "world_from_anatomical"], [1, 2, 1, "", "world_from_ijk"]], "deepdrr.annotations": [[2, 1, 1, "", "Fiducial"], [2, 1, 1, "", "FiducialList"], [2, 1, 1, "", "LineAnnotation"], [2, 0, 0, "-", "fiducials"], [2, 0, 0, "-", "line_annotation"]], "deepdrr.annotations.Fiducial": [[2, 4, 1, "", "data"], [2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "save"]], "deepdrr.annotations.FiducialList": [[2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "save"], [2, 3, 1, "", "to_LPS"], [2, 3, 1, "", "to_RAS"]], "deepdrr.annotations.LineAnnotation": [[2, 2, 1, "", "anatomical_coordinate_system"], [2, 2, 1, "", "anatomical_from_world"], [2, 2, 1, "", "direction_in_world"], [2, 4, 1, "", "endpoint"], [2, 2, 1, "", "endpoint_in_world"], [2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "from_markup"], [2, 3, 1, "", "get_direction"], [2, 3, 1, "", "get_mesh"], [2, 3, 1, "", "get_mesh_in_world"], [2, 2, 1, "", "midpoint_in_world"], [2, 3, 1, "", "save"], [2, 4, 1, "", "startpoint"], [2, 2, 1, "", "startpoint_in_world"], [2, 2, 1, "", "trajectory_in_world"], [2, 2, 1, "", "world_from_anatomical"]], "deepdrr.annotations.fiducials": [[2, 1, 1, "", "Fiducial"], [2, 1, 1, "", "FiducialList"]], "deepdrr.annotations.fiducials.Fiducial": [[2, 4, 1, "", "data"], [2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "save"]], "deepdrr.annotations.fiducials.FiducialList": [[2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "save"], [2, 3, 1, "", "to_LPS"], [2, 3, 1, "", "to_RAS"]], "deepdrr.annotations.line_annotation": [[2, 1, 1, "", "LineAnnotation"]], "deepdrr.annotations.line_annotation.LineAnnotation": [[2, 2, 1, "", "anatomical_coordinate_system"], [2, 2, 1, "", "anatomical_from_world"], [2, 2, 1, "", "direction_in_world"], [2, 4, 1, "", "endpoint"], [2, 2, 1, "", "endpoint_in_world"], [2, 3, 1, "", "from_fcsv"], [2, 3, 1, "", "from_json"], [2, 3, 1, "", "from_markup"], [2, 3, 1, "", "get_direction"], [2, 3, 1, "", "get_mesh"], [2, 3, 1, "", "get_mesh_in_world"], [2, 2, 1, "", "midpoint_in_world"], [2, 3, 1, "", "save"], [2, 4, 1, "", "startpoint"], [2, 2, 1, "", "startpoint_in_world"], [2, 2, 1, "", "trajectory_in_world"], [2, 2, 1, "", "world_from_anatomical"]], "deepdrr.device": [[3, 1, 1, "", "CArm"], [3, 1, 1, "", "Device"], [3, 1, 1, "", "MobileCArm"], [3, 1, 1, "", "SimpleDevice"], [3, 0, 0, "-", "carm"], [3, 0, 0, "-", "device"], [3, 0, 0, "-", "mobile_carm"], [3, 0, 0, "-", "simple_device"]], "deepdrr.device.CArm": [[3, 2, 1, "", "camera3d_from_world"], [3, 3, 1, "", "get_camera3d_from_world"], [3, 3, 1, "", "move_by"], [3, 3, 1, "", "move_to"]], "deepdrr.device.Device": [[3, 2, 1, "", "camera3d_from_device"], [3, 2, 1, "", "camera3d_from_index"], [3, 2, 1, "", "camera3d_from_world"], [3, 4, 1, "", "camera_intrinsics"], [3, 2, 1, "", "detector_height"], [3, 2, 1, "", "detector_width"], [3, 2, 1, "", "device_from_camera3d"], [3, 2, 1, "", "device_from_world"], [3, 3, 1, "", "get_camera_projection"], [3, 3, 1, "", "get_mesh_in_world"], [3, 2, 1, "", "index_from_camera3d"], [3, 2, 1, "", "index_from_world"], [3, 4, 1, "id8", "pixel_size"], [3, 2, 1, "", "principle_ray"], [3, 2, 1, "", "principle_ray_in_world"], [3, 4, 1, "id9", "sensor_height"], [3, 4, 1, "id10", "sensor_width"], [3, 2, 1, "", "source_in_world"], [3, 4, 1, "", "source_to_detector_distance"], [3, 2, 1, "", "world_from_camera3d"], [3, 4, 1, "", "world_from_device"], [3, 2, 1, "", "world_from_index"]], "deepdrr.device.MobileCArm": [[3, 4, 1, "", "alpha"], [3, 2, 1, "", "arm_from_device"], [3, 4, 1, "", "arm_width"], [3, 4, 1, "", "beta"], [3, 2, 1, "", "camera3d_from_device"], [3, 2, 1, "", "camera3d_from_world"], [3, 4, 1, "", "camera_intrinsics"], [3, 4, 1, "", "detector_height"], [3, 2, 1, "", "device_from_arm"], [3, 2, 1, "", "device_from_camera3d"], [3, 3, 1, "", "get_camera3d_from_world"], [3, 3, 1, "", "get_camera_projection"], [3, 3, 1, "", "get_mesh_in_world"], [3, 4, 1, "", "isocenter"], [3, 2, 1, "", "isocenter_in_world"], [3, 3, 1, "", "jitter"], [3, 2, 1, "", "max_isocenter"], [3, 2, 1, "", "min_isocenter"], [3, 3, 1, "", "move_by"], [3, 3, 1, "", "move_to"], [3, 4, 1, "", "pixel_size"], [3, 2, 1, "", "principle_ray"], [3, 3, 1, "", "reposition"], [3, 4, 1, "", "sensor_height"], [3, 4, 1, "", "sensor_width"], [3, 4, 1, "", "source_height"], [3, 2, 1, "", "source_in_arm"], [3, 2, 1, "", "source_in_device"], [3, 4, 1, "", "source_radius"], [3, 4, 1, "", "source_to_detector_distance"], [3, 3, 1, "", "to_config"], [3, 2, 1, "", "viewpoint"], [3, 2, 1, "", "viewpoint_in_world"], [3, 4, 1, "", "world_from_device"]], "deepdrr.device.SimpleDevice": [[3, 2, 1, "", "camera_intrinsics"], [3, 2, 1, "", "device_from_camera3d"], [3, 4, 1, "id11", "pixel_size"], [3, 4, 1, "id12", "sensor_height"], [3, 4, 1, "id13", "sensor_width"], [3, 3, 1, "", "set_view"], [3, 4, 1, "id14", "source_to_detector_distance"], [3, 4, 1, "id15", "world_from_device"]], "deepdrr.device.carm": [[3, 1, 1, "", "CArm"], [3, 5, 1, "", "make_detector_rotation"]], "deepdrr.device.carm.CArm": [[3, 2, 1, "", "camera3d_from_world"], [3, 3, 1, "", "get_camera3d_from_world"], [3, 3, 1, "", "move_by"], [3, 3, 1, "", "move_to"]], "deepdrr.device.device": [[3, 1, 1, "", "Device"]], "deepdrr.device.device.Device": [[3, 2, 1, "", "camera3d_from_device"], [3, 2, 1, "", "camera3d_from_index"], [3, 2, 1, "", "camera3d_from_world"], [3, 4, 1, "", "camera_intrinsics"], [3, 2, 1, "", "detector_height"], [3, 2, 1, "", "detector_width"], [3, 2, 1, "", "device_from_camera3d"], [3, 2, 1, "", "device_from_world"], [3, 3, 1, "", "get_camera_projection"], [3, 3, 1, "", "get_mesh_in_world"], [3, 2, 1, "", "index_from_camera3d"], [3, 2, 1, "", "index_from_world"], [3, 4, 1, "id0", "pixel_size"], [3, 2, 1, "", "principle_ray"], [3, 2, 1, "", "principle_ray_in_world"], [3, 4, 1, "id1", "sensor_height"], [3, 4, 1, "id2", "sensor_width"], [3, 2, 1, "", "source_in_world"], [3, 4, 1, "", "source_to_detector_distance"], [3, 2, 1, "", "world_from_camera3d"], [3, 4, 1, "", "world_from_device"], [3, 2, 1, "", "world_from_index"]], "deepdrr.device.mobile_carm": [[3, 1, 1, "", "MobileCArm"], [3, 5, 1, "", "pose_vector_angles"]], "deepdrr.device.mobile_carm.MobileCArm": [[3, 4, 1, "", "alpha"], [3, 2, 1, "", "arm_from_device"], [3, 4, 1, "", "arm_width"], [3, 4, 1, "", "beta"], [3, 2, 1, "", "camera3d_from_device"], [3, 2, 1, "", "camera3d_from_world"], [3, 4, 1, "", "camera_intrinsics"], [3, 4, 1, "", "detector_height"], [3, 2, 1, "", "device_from_arm"], [3, 2, 1, "", "device_from_camera3d"], [3, 3, 1, "", "get_camera3d_from_world"], [3, 3, 1, "", "get_camera_projection"], [3, 3, 1, "", "get_mesh_in_world"], [3, 4, 1, "", "isocenter"], [3, 2, 1, "", "isocenter_in_world"], [3, 3, 1, "", "jitter"], [3, 2, 1, "", "max_isocenter"], [3, 2, 1, "", "min_isocenter"], [3, 3, 1, "", "move_by"], [3, 3, 1, "", "move_to"], [3, 4, 1, "", "pixel_size"], [3, 2, 1, "", "principle_ray"], [3, 3, 1, "", "reposition"], [3, 4, 1, "", "sensor_height"], [3, 4, 1, "", "sensor_width"], [3, 4, 1, "", "source_height"], [3, 2, 1, "", "source_in_arm"], [3, 2, 1, "", "source_in_device"], [3, 4, 1, "", "source_radius"], [3, 4, 1, "", "source_to_detector_distance"], [3, 3, 1, "", "to_config"], [3, 2, 1, "", "viewpoint"], [3, 2, 1, "", "viewpoint_in_world"], [3, 4, 1, "", "world_from_device"]], "deepdrr.device.simple_device": [[3, 1, 1, "", "SimpleDevice"]], "deepdrr.device.simple_device.SimpleDevice": [[3, 2, 1, "", "camera_intrinsics"], [3, 2, 1, "", "device_from_camera3d"], [3, 4, 1, "id3", "pixel_size"], [3, 4, 1, "id4", "sensor_height"], [3, 4, 1, "id5", "sensor_width"], [3, 3, 1, "", "set_view"], [3, 4, 1, "id6", "source_to_detector_distance"], [3, 4, 1, "id7", "world_from_device"]], "deepdrr.downsample_tool": [[1, 5, 1, "", "downsample_tool"]], "deepdrr.geo": [[4, 1, 1, "", "CameraIntrinsicTransform"], [4, 1, 1, "", "CameraProjection"], [4, 1, 1, "", "F"], [4, 1, 1, "", "FrameTransform"], [4, 1, 1, "", "HomogeneousObject"], [4, 1, 1, "", "HyperPlane"], [4, 6, 1, "", "JoinError"], [4, 1, 1, "", "Line"], [4, 1, 1, "", "Line2D"], [4, 1, 1, "", "Line3D"], [4, 6, 1, "", "MeetError"], [4, 1, 1, "", "Plane"], [4, 1, 1, "", "Point"], [4, 1, 1, "", "Point2D"], [4, 1, 1, "", "Point3D"], [4, 1, 1, "", "PointOrVector"], [4, 1, 1, "", "Ray"], [4, 1, 1, "", "Ray3D"], [4, 1, 1, "", "Rotation"], [4, 1, 1, "", "Segment"], [4, 1, 1, "", "Segment2D"], [4, 1, 1, "", "Segment3D"], [4, 1, 1, "", "Transform"], [4, 1, 1, "", "Vector"], [4, 1, 1, "", "Vector2D"], [4, 1, 1, "", "Vector3D"], [4, 0, 0, "-", "core"], [4, 0, 0, "-", "exceptions"], [4, 5, 1, "", "f"], [4, 5, 1, "", "frame_transform"], [4, 5, 1, "", "get_data"], [4, 0, 0, "-", "hyperplane"], [4, 5, 1, "", "l"], [4, 5, 1, "", "line"], [4, 5, 1, "", "p"], [4, 5, 1, "", "pl"], [4, 5, 1, "", "plane"], [4, 5, 1, "", "point"], [4, 0, 0, "-", "random"], [4, 5, 1, "", "ray"], [4, 0, 0, "-", "ray"], [4, 5, 1, "", "segment"], [4, 0, 0, "-", "segment"], [4, 5, 1, "", "spherical_uniform"], [4, 0, 0, "-", "typing"], [4, 0, 0, "-", "utils"], [4, 5, 1, "", "v"], [4, 5, 1, "", "vector"]], "deepdrr.geo.CameraIntrinsicTransform": [[4, 2, 1, "", "aspect_ratio"], [4, 2, 1, "", "cx"], [4, 2, 1, "", "cy"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 2, 1, "", "focal_length"], [4, 3, 1, "", "from_parameters"], [4, 3, 1, "", "from_sizes"], [4, 2, 1, "", "fx"], [4, 2, 1, "", "fy"], [4, 3, 1, "", "get_config"], [4, 4, 1, "", "input_dim"], [4, 2, 1, "", "optical_center"], [4, 2, 1, "", "sensor_height"], [4, 2, 1, "", "sensor_size"], [4, 2, 1, "", "sensor_width"]], "deepdrr.geo.CameraProjection": [[4, 2, 1, "", "K"], [4, 2, 1, "", "R"], [4, 2, 1, "", "camera3d_from_index"], [4, 4, 1, "", "camera3d_from_world"], [4, 2, 1, "", "center_in_world"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 2, 1, "", "extrinsic"], [4, 3, 1, "", "from_krt"], [4, 3, 1, "", "from_rtk"], [4, 3, 1, "", "get_center_in_volume"], [4, 3, 1, "", "get_center_in_world"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_ray_transform"], [4, 4, 1, "", "index_from_camera2d"], [4, 2, 1, "", "index_from_camera3d"], [4, 2, 1, "", "index_from_world"], [4, 2, 1, "", "intrinsic"], [4, 2, 1, "", "principle_ray_in_world"], [4, 2, 1, "", "sensor_height"], [4, 2, 1, "", "sensor_width"], [4, 2, 1, "", "t"], [4, 2, 1, "", "world_from_camera3d"], [4, 2, 1, "", "world_from_index"], [4, 2, 1, "", "world_from_index_on_image_plane"]], "deepdrr.geo.F": [[4, 4, 1, "", "data"]], "deepdrr.geo.FrameTransform": [[4, 2, 1, "", "R"], [4, 3, 1, "", "as_quatpos"], [4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 3, 1, "", "from_line_segments"], [4, 3, 1, "", "from_origin"], [4, 3, 1, "", "from_pd"], [4, 3, 1, "", "from_point_correspondence"], [4, 3, 1, "", "from_pointdir"], [4, 3, 1, "", "from_points"], [4, 3, 1, "", "from_quatpos"], [4, 3, 1, "", "from_rotation"], [4, 3, 1, "", "from_rt"], [4, 3, 1, "", "from_scaling"], [4, 3, 1, "", "from_translation"], [4, 3, 1, "", "get_point"], [4, 2, 1, "", "i"], [4, 3, 1, "", "identity"], [4, 2, 1, "", "inv"], [4, 2, 1, "", "j"], [4, 2, 1, "", "k"], [4, 3, 1, "", "load"], [4, 3, 1, "", "load_txt"], [4, 2, 1, "", "o"], [4, 3, 1, "", "save"], [4, 3, 1, "", "save_txt"], [4, 2, 1, "", "t"], [4, 3, 1, "", "toarray"], [4, 3, 1, "", "tostring"], [4, 3, 1, "", "transform_points"]], "deepdrr.geo.HomogeneousObject": [[4, 3, 1, "", "copy"], [4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 4, 1, "", "dtype"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_data"], [4, 2, 1, "", "shape"], [4, 3, 1, "", "tolist"]], "deepdrr.geo.HyperPlane": [[4, 2, 1, "", "a"], [4, 2, 1, "", "b"], [4, 2, 1, "", "c"], [4, 2, 1, "", "d"], [4, 4, 1, "", "data"], [4, 3, 1, "", "distance"], [4, 3, 1, "", "evaluate"], [4, 3, 1, "", "get_normal"], [4, 2, 1, "", "n"], [4, 3, 1, "", "normal"], [4, 3, 1, "", "project"], [4, 3, 1, "", "signed_distance"]], "deepdrr.geo.Line": [[4, 3, 1, "", "angle"], [4, 3, 1, "", "as_points"], [4, 4, 1, "", "data"], [4, 3, 1, "", "distance"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "project"]], "deepdrr.geo.Line2D": [[4, 3, 1, "", "backproject"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "meet"]], "deepdrr.geo.Line3D": [[4, 2, 1, "", "K"], [4, 2, 1, "", "L"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "dual"], [4, 3, 1, "", "from_dual"], [4, 3, 1, "", "from_primal"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 2, 1, "", "p"], [4, 3, 1, "", "primal"], [4, 3, 1, "", "projection_type"], [4, 2, 1, "", "q"], [4, 2, 1, "", "r"], [4, 2, 1, "", "s"], [4, 2, 1, "", "t"], [4, 2, 1, "", "u"]], "deepdrr.geo.Plane": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_point_normal"], [4, 3, 1, "", "from_points"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "meet"]], "deepdrr.geo.Point": [[4, 3, 1, "", "as_vector"], [4, 4, 1, "", "data"], [4, 3, 1, "", "from_any"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "lerp"]], "deepdrr.geo.Point2D": [[4, 3, 1, "", "backproject"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"]], "deepdrr.geo.Point3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "projection_type"]], "deepdrr.geo.PointOrVector": [[4, 4, 1, "", "data"], [4, 3, 1, "", "norm"], [4, 3, 1, "", "normsqr"], [4, 2, 1, "", "w"], [4, 2, 1, "", "x"], [4, 2, 1, "", "y"], [4, 2, 1, "", "z"]], "deepdrr.geo.Ray": [[4, 4, 1, "", "data"], [4, 3, 1, "", "from_pn"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_pq"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 2, 1, "", "n"], [4, 2, 1, "", "p"]], "deepdrr.geo.Ray3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 3, 1, "", "projection_type"]], "deepdrr.geo.Rotation": [[4, 3, 1, "", "__getitem__"], [4, 3, 1, "", "__len__"], [4, 3, 1, "", "__mul__"], [4, 3, 1, "id0", "align_vectors"], [4, 3, 1, "id7", "apply"], [4, 3, 1, "id8", "as_euler"], [4, 3, 1, "id16", "as_matrix"], [4, 3, 1, "id19", "as_mrp"], [4, 3, 1, "id22", "as_quat"], [4, 3, 1, "id25", "as_rotvec"], [4, 3, 1, "id28", "concatenate"], [4, 3, 1, "id29", "create_group"], [4, 3, 1, "id31", "from_euler"], [4, 3, 1, "id34", "from_matrix"], [4, 3, 1, "id39", "from_mrp"], [4, 3, 1, "id42", "from_quat"], [4, 3, 1, "id45", "from_rotvec"], [4, 3, 1, "id48", "identity"], [4, 3, 1, "id49", "inv"], [4, 3, 1, "id50", "magnitude"], [4, 3, 1, "id51", "mean"], [4, 3, 1, "id52", "random"], [4, 3, 1, "id53", "reduce"], [4, 4, 1, "id54", "single"]], "deepdrr.geo.Segment": [[4, 4, 1, "", "data"], [4, 3, 1, "", "from_pn"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_pq"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "length"], [4, 3, 1, "", "line"], [4, 3, 1, "", "midpoint"], [4, 2, 1, "", "p"], [4, 2, 1, "", "q"]], "deepdrr.geo.Segment2D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "meet"]], "deepdrr.geo.Segment3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 3, 1, "", "projection_type"]], "deepdrr.geo.Transform": [[4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_center"], [4, 2, 1, "", "input_dim"], [4, 2, 1, "", "inv"], [4, 3, 1, "", "inverse"]], "deepdrr.geo.Vector": [[4, 3, 1, "", "as_point"], [4, 3, 1, "", "cross"], [4, 4, 1, "", "data"], [4, 3, 1, "", "dot"], [4, 3, 1, "", "from_any"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "hat"], [4, 3, 1, "", "normalized"]], "deepdrr.geo.Vector2D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "perpendicular"]], "deepdrr.geo.Vector3D": [[4, 3, 1, "", "as_plane"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "perpendicular"], [4, 3, 1, "", "rotate"], [4, 3, 1, "", "rotvec_to"]], "deepdrr.geo.core": [[4, 1, 1, "", "CameraIntrinsicTransform"], [4, 1, 1, "", "CameraProjection"], [4, 1, 1, "", "F"], [4, 1, 1, "", "FrameTransform"], [4, 1, 1, "", "HasDirection"], [4, 1, 1, "", "HasLocation"], [4, 1, 1, "", "HasLocationAndDirection"], [4, 1, 1, "", "HasProjection"], [4, 1, 1, "", "HomogeneousObject"], [4, 1, 1, "", "Joinable"], [4, 1, 1, "", "Meetable"], [4, 1, 1, "", "Point"], [4, 1, 1, "", "Point2D"], [4, 1, 1, "", "Point3D"], [4, 1, 1, "", "PointOrVector"], [4, 1, 1, "", "Primitive"], [4, 1, 1, "", "Transform"], [4, 1, 1, "", "Vector"], [4, 1, 1, "", "Vector2D"], [4, 1, 1, "", "Vector3D"], [4, 5, 1, "", "f"], [4, 5, 1, "", "frame_transform"], [4, 5, 1, "", "get_data"], [4, 5, 1, "", "p"], [4, 5, 1, "", "point"], [4, 5, 1, "", "v"], [4, 5, 1, "", "vector"]], "deepdrr.geo.core.CameraIntrinsicTransform": [[4, 2, 1, "", "aspect_ratio"], [4, 2, 1, "", "cx"], [4, 2, 1, "", "cy"], [4, 4, 1, "", "dim"], [4, 2, 1, "", "focal_length"], [4, 3, 1, "", "from_parameters"], [4, 3, 1, "", "from_sizes"], [4, 2, 1, "", "fx"], [4, 2, 1, "", "fy"], [4, 3, 1, "", "get_config"], [4, 4, 1, "", "input_dim"], [4, 2, 1, "", "optical_center"], [4, 2, 1, "", "sensor_height"], [4, 2, 1, "", "sensor_size"], [4, 2, 1, "", "sensor_width"]], "deepdrr.geo.core.CameraProjection": [[4, 2, 1, "", "K"], [4, 2, 1, "", "R"], [4, 2, 1, "", "camera3d_from_index"], [4, 4, 1, "", "camera3d_from_world"], [4, 2, 1, "", "center_in_world"], [4, 4, 1, "", "dim"], [4, 2, 1, "", "extrinsic"], [4, 3, 1, "", "from_krt"], [4, 3, 1, "", "from_rtk"], [4, 3, 1, "", "get_center_in_volume"], [4, 3, 1, "", "get_center_in_world"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_ray_transform"], [4, 4, 1, "", "index_from_camera2d"], [4, 2, 1, "", "index_from_camera3d"], [4, 2, 1, "", "index_from_world"], [4, 2, 1, "", "intrinsic"], [4, 2, 1, "", "principle_ray_in_world"], [4, 2, 1, "", "sensor_height"], [4, 2, 1, "", "sensor_width"], [4, 2, 1, "", "t"], [4, 2, 1, "", "world_from_camera3d"], [4, 2, 1, "", "world_from_index"], [4, 2, 1, "", "world_from_index_on_image_plane"]], "deepdrr.geo.core.F": [[4, 4, 1, "", "data"]], "deepdrr.geo.core.FrameTransform": [[4, 2, 1, "", "R"], [4, 3, 1, "", "as_quatpos"], [4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 3, 1, "", "from_line_segments"], [4, 3, 1, "", "from_origin"], [4, 3, 1, "", "from_pd"], [4, 3, 1, "", "from_point_correspondence"], [4, 3, 1, "", "from_pointdir"], [4, 3, 1, "", "from_points"], [4, 3, 1, "", "from_quatpos"], [4, 3, 1, "", "from_rotation"], [4, 3, 1, "", "from_rt"], [4, 3, 1, "", "from_scaling"], [4, 3, 1, "", "from_translation"], [4, 3, 1, "", "get_point"], [4, 2, 1, "", "i"], [4, 3, 1, "", "identity"], [4, 2, 1, "", "inv"], [4, 2, 1, "", "j"], [4, 2, 1, "", "k"], [4, 3, 1, "", "load"], [4, 3, 1, "", "load_txt"], [4, 2, 1, "", "o"], [4, 3, 1, "", "save"], [4, 3, 1, "", "save_txt"], [4, 2, 1, "", "t"], [4, 3, 1, "", "toarray"], [4, 3, 1, "", "tostring"], [4, 3, 1, "", "transform_points"]], "deepdrr.geo.core.HasDirection": [[4, 3, 1, "", "angle"], [4, 3, 1, "", "cosine_distance"], [4, 4, 1, "", "data"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "rotfrom"]], "deepdrr.geo.core.HasLocation": [[4, 4, 1, "", "data"], [4, 3, 1, "", "get_point"]], "deepdrr.geo.core.HasLocationAndDirection": [[4, 4, 1, "", "data"], [4, 3, 1, "", "from_point_direction"]], "deepdrr.geo.core.HasProjection": [[4, 3, 1, "", "projection_type"]], "deepdrr.geo.core.HomogeneousObject": [[4, 3, 1, "", "copy"], [4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 4, 1, "", "dtype"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_config"], [4, 3, 1, "", "get_data"], [4, 2, 1, "", "shape"], [4, 3, 1, "", "tolist"]], "deepdrr.geo.core.Joinable": [[4, 3, 1, "", "join"]], "deepdrr.geo.core.Meetable": [[4, 3, 1, "", "intersects"], [4, 3, 1, "", "meet"]], "deepdrr.geo.core.Point": [[4, 3, 1, "", "as_vector"], [4, 4, 1, "", "data"], [4, 3, 1, "", "from_any"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "lerp"]], "deepdrr.geo.core.Point2D": [[4, 3, 1, "", "backproject"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"]], "deepdrr.geo.core.Point3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "projection_type"]], "deepdrr.geo.core.PointOrVector": [[4, 4, 1, "", "data"], [4, 3, 1, "", "norm"], [4, 3, 1, "", "normsqr"], [4, 2, 1, "", "w"], [4, 2, 1, "", "x"], [4, 2, 1, "", "y"], [4, 2, 1, "", "z"]], "deepdrr.geo.core.Primitive": [[4, 4, 1, "", "data"]], "deepdrr.geo.core.Transform": [[4, 4, 1, "", "data"], [4, 2, 1, "", "dim"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_center"], [4, 2, 1, "", "input_dim"], [4, 2, 1, "", "inv"], [4, 3, 1, "", "inverse"]], "deepdrr.geo.core.Vector": [[4, 3, 1, "", "as_point"], [4, 3, 1, "", "cross"], [4, 4, 1, "", "data"], [4, 3, 1, "", "dot"], [4, 3, 1, "", "from_any"], [4, 3, 1, "", "from_array"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "hat"], [4, 3, 1, "", "normalized"]], "deepdrr.geo.core.Vector2D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "perpendicular"]], "deepdrr.geo.core.Vector3D": [[4, 3, 1, "", "as_plane"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "perpendicular"], [4, 3, 1, "", "rotate"], [4, 3, 1, "", "rotvec_to"]], "deepdrr.geo.exceptions": [[4, 6, 1, "", "JoinError"], [4, 6, 1, "", "MeetError"]], "deepdrr.geo.hyperplane": [[4, 1, 1, "", "HyperPlane"], [4, 1, 1, "", "Line"], [4, 1, 1, "", "Line2D"], [4, 1, 1, "", "Line3D"], [4, 1, 1, "", "Plane"], [4, 5, 1, "", "l"], [4, 5, 1, "", "line"], [4, 5, 1, "", "pl"], [4, 5, 1, "", "plane"]], "deepdrr.geo.hyperplane.HyperPlane": [[4, 2, 1, "", "a"], [4, 2, 1, "", "b"], [4, 2, 1, "", "c"], [4, 2, 1, "", "d"], [4, 4, 1, "", "data"], [4, 3, 1, "", "distance"], [4, 3, 1, "", "evaluate"], [4, 3, 1, "", "get_normal"], [4, 2, 1, "", "n"], [4, 3, 1, "", "normal"], [4, 3, 1, "", "project"], [4, 3, 1, "", "signed_distance"]], "deepdrr.geo.hyperplane.Line": [[4, 3, 1, "", "angle"], [4, 3, 1, "", "as_points"], [4, 4, 1, "", "data"], [4, 3, 1, "", "distance"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "project"]], "deepdrr.geo.hyperplane.Line2D": [[4, 3, 1, "", "backproject"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "meet"]], "deepdrr.geo.hyperplane.Line3D": [[4, 2, 1, "", "K"], [4, 2, 1, "", "L"], [4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "dual"], [4, 3, 1, "", "from_dual"], [4, 3, 1, "", "from_primal"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 2, 1, "", "p"], [4, 3, 1, "", "primal"], [4, 3, 1, "", "projection_type"], [4, 2, 1, "", "q"], [4, 2, 1, "", "r"], [4, 2, 1, "", "s"], [4, 2, 1, "", "t"], [4, 2, 1, "", "u"]], "deepdrr.geo.hyperplane.Plane": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_point_normal"], [4, 3, 1, "", "from_points"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "meet"]], "deepdrr.geo.random": [[4, 5, 1, "", "normal"], [4, 5, 1, "", "spherical_uniform"], [4, 5, 1, "", "uniform"]], "deepdrr.geo.ray": [[4, 1, 1, "", "Ray"], [4, 1, 1, "", "Ray2D"], [4, 1, 1, "", "Ray3D"], [4, 5, 1, "", "ray"]], "deepdrr.geo.ray.Ray": [[4, 4, 1, "", "data"], [4, 3, 1, "", "from_pn"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_pq"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 2, 1, "", "n"], [4, 2, 1, "", "p"]], "deepdrr.geo.ray.Ray2D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "meet"]], "deepdrr.geo.ray.Ray3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 3, 1, "", "projection_type"]], "deepdrr.geo.segment": [[4, 1, 1, "", "Segment"], [4, 1, 1, "", "Segment2D"], [4, 1, 1, "", "Segment3D"], [4, 5, 1, "", "segment"]], "deepdrr.geo.segment.Segment": [[4, 4, 1, "", "data"], [4, 3, 1, "", "from_pn"], [4, 3, 1, "", "from_point_direction"], [4, 3, 1, "", "from_pq"], [4, 3, 1, "", "get_direction"], [4, 3, 1, "", "get_point"], [4, 3, 1, "", "length"], [4, 3, 1, "", "line"], [4, 3, 1, "", "midpoint"], [4, 2, 1, "", "p"], [4, 2, 1, "", "q"]], "deepdrr.geo.segment.Segment2D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "meet"]], "deepdrr.geo.segment.Segment3D": [[4, 4, 1, "", "data"], [4, 4, 1, "", "dim"], [4, 3, 1, "", "join"], [4, 3, 1, "", "meet"], [4, 3, 1, "", "projection_type"]], "deepdrr.instruments": [[5, 1, 1, "", "Instrument"], [5, 0, 0, "-", "base"]], "deepdrr.instruments.Instrument": [[5, 4, 1, "", "NUM_POINTS"], [5, 3, 1, "", "advance"], [5, 3, 1, "", "align"], [5, 4, 1, "", "anatomical_coordinate_system"], [5, 4, 1, "", "anatomical_from_IJK"], [5, 4, 1, "", "base"], [5, 2, 1, "", "base_in_world"], [5, 2, 1, "", "center"], [5, 2, 1, "", "center_in_world"], [5, 2, 1, "", "centerline_in_world"], [5, 4, 1, "", "data"], [5, 3, 1, "", "get_cache_dir"], [5, 3, 1, "", "get_mesh_in_world"], [5, 3, 1, "", "get_model_paths"], [5, 2, 1, "", "length_in_world"], [5, 4, 1, "", "materials"], [5, 3, 1, "", "orient"], [5, 4, 1, "", "radius"], [5, 4, 1, "", "tip"], [5, 2, 1, "", "tip_in_world"], [5, 2, 1, "", "trajectory_in_world"], [5, 3, 1, "", "twist"], [5, 4, 1, "", "world_from_anatomical"]], "deepdrr.instruments.base": [[5, 1, 1, "", "Instrument"]], "deepdrr.instruments.base.Instrument": [[5, 4, 1, "", "NUM_POINTS"], [5, 3, 1, "", "advance"], [5, 3, 1, "", "align"], [5, 4, 1, "", "base"], [5, 2, 1, "", "base_in_world"], [5, 2, 1, "", "center"], [5, 2, 1, "", "center_in_world"], [5, 2, 1, "", "centerline_in_world"], [5, 3, 1, "", "get_cache_dir"], [5, 3, 1, "", "get_mesh_in_world"], [5, 3, 1, "", "get_model_paths"], [5, 2, 1, "", "length_in_world"], [5, 3, 1, "", "orient"], [5, 4, 1, "", "radius"], [5, 4, 1, "", "tip"], [5, 2, 1, "", "tip_in_world"], [5, 2, 1, "", "trajectory_in_world"], [5, 3, 1, "", "twist"]], "deepdrr.load_dicom": [[1, 5, 1, "", "conv_hu_to_density"], [1, 5, 1, "", "conv_hu_to_materials"], [1, 5, 1, "", "conv_hu_to_materials_thresholding"], [1, 5, 1, "", "load_dicom"], [1, 5, 1, "", "upsample"]], "deepdrr.load_dicom_tool": [[1, 5, 1, "", "conv_hu_to_density"], [1, 5, 1, "", "conv_hu_to_materials"], [1, 5, 1, "", "conv_hu_to_materials_thresholding"], [1, 5, 1, "", "load_dicom_CT"], [1, 5, 1, "", "load_dicom_metal"], [1, 5, 1, "", "replace_material"], [1, 5, 1, "", "upsample"]], "deepdrr.logging": [[1, 5, 1, "", "setup_log"]], "deepdrr.network_segmentation": [[1, 1, 1, "", "ContBatchNorm3d"], [1, 1, 1, "", "DownTransition"], [1, 5, 1, "", "ELUCons"], [1, 1, 1, "", "InputTransition"], [1, 1, 1, "", "LUConv"], [1, 1, 1, "", "OutputTransition"], [1, 1, 1, "", "UpTransition"], [1, 1, 1, "", "VNet"], [1, 5, 1, "", "passthrough"]], "deepdrr.network_segmentation.ContBatchNorm3d": [[1, 4, 1, "", "affine"], [1, 4, 1, "", "eps"], [1, 3, 1, "", "forward"], [1, 4, 1, "", "momentum"], [1, 4, 1, "", "num_features"], [1, 4, 1, "", "track_running_stats"]], "deepdrr.network_segmentation.DownTransition": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.network_segmentation.InputTransition": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.network_segmentation.LUConv": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.network_segmentation.OutputTransition": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.network_segmentation.UpTransition": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.network_segmentation.VNet": [[1, 3, 1, "", "forward"], [1, 4, 1, "", "training"]], "deepdrr.projector": [[6, 1, 1, "", "Projector"], [6, 0, 0, "-", "analytic_generators"], [6, 0, 0, "-", "conv_to_mcgpu"], [6, 0, 0, "-", "cuda_scatter_structs"], [6, 0, 0, "-", "mass_attenuation"], [6, 0, 0, "-", "material_coefficients"], [6, 0, 0, "-", "mcgpu_compton_data"], [6, 0, 0, "-", "mcgpu_density"], [7, 0, 0, "-", "mcgpu_incoherent_scatter_data"], [8, 0, 0, "-", "mcgpu_mean_free_path_data"], [6, 0, 0, "-", "mcgpu_mfp_data"], [9, 0, 0, "-", "mcgpu_rita_params"], [6, 0, 0, "-", "mcgpu_rita_samplers"], [6, 0, 0, "-", "plane_surface"], [6, 0, 0, "-", "projector"], [6, 0, 0, "-", "rita"], [6, 0, 0, "-", "scatter"], [6, 0, 0, "-", "spectral_data"]], "deepdrr.projector.Projector": [[6, 2, 1, "", "camera_intrinsics"], [6, 3, 1, "", "free"], [6, 3, 1, "", "initialize"], [6, 3, 1, "", "initialize_output_arrays"], [6, 2, 1, "", "output_size"], [6, 3, 1, "", "project"], [6, 3, 1, "", "project_over_carm_range"], [6, 2, 1, "", "source_to_detector_distance"], [6, 2, 1, "", "volume"], [6, 4, 1, "", "volumes"]], "deepdrr.projector.analytic_generators": [[6, 5, 1, "", "add_noise"]], "deepdrr.projector.conv_to_mcgpu": [[6, 5, 1, "", "get_mat_filename"], [6, 5, 1, "", "make_mcgpu_inputs"]], "deepdrr.projector.cuda_scatter_structs": [[6, 1, 1, "", "CudaComptonStruct"], [6, 1, 1, "", "CudaMatMfpStruct"], [6, 1, 1, "", "CudaPlaneSurfaceStruct"], [6, 1, 1, "", "CudaRayleighStruct"], [6, 1, 1, "", "CudaWoodcockStruct"]], "deepdrr.projector.cuda_scatter_structs.CudaComptonStruct": [[6, 4, 1, "", "MEMSIZE"]], "deepdrr.projector.cuda_scatter_structs.CudaMatMfpStruct": [[6, 4, 1, "", "MEMSIZE"]], "deepdrr.projector.cuda_scatter_structs.CudaPlaneSurfaceStruct": [[6, 4, 1, "", "MEMSIZE"]], "deepdrr.projector.cuda_scatter_structs.CudaRayleighStruct": [[6, 4, 1, "", "MEMSIZE"]], "deepdrr.projector.cuda_scatter_structs.CudaWoodcockStruct": [[6, 4, 1, "", "MEMSIZE"]], "deepdrr.projector.mass_attenuation": [[6, 5, 1, "", "calculate_attenuation_gpu"], [6, 5, 1, "", "calculate_intensity_from_spectrum"], [6, 5, 1, "", "get_absorption_coefs"], [6, 5, 1, "", "log_interp"]], "deepdrr.projector.mcgpu_compton_data": [[6, 5, 1, "", "sanity_check_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data": [[7, 0, 0, "-", "PMMA_compton_data"], [7, 0, 0, "-", "adipose_compton_data"], [7, 0, 0, "-", "air_compton_data"], [7, 0, 0, "-", "blood_compton_data"], [7, 0, 0, "-", "bone_compton_data"], [7, 0, 0, "-", "brain_compton_data"], [7, 0, 0, "-", "breast_compton_data"], [7, 0, 0, "-", "cartilage_compton_data"], [7, 0, 0, "-", "connective_compton_data"], [7, 0, 0, "-", "glands_others_compton_data"], [7, 0, 0, "-", "liver_compton_data"], [7, 0, 0, "-", "lung_compton_data"], [7, 0, 0, "-", "muscle_compton_data"], [7, 0, 0, "-", "red_marrow_compton_data"], [7, 0, 0, "-", "skin_compton_data"], [7, 0, 0, "-", "soft_tissue_compton_data"], [7, 0, 0, "-", "stomach_intestines_compton_data"], [7, 0, 0, "-", "titanium_compton_data"], [7, 0, 0, "-", "water_compton_data"]], "deepdrr.projector.mcgpu_mean_free_path_data": [[8, 0, 0, "-", "PMMA_mfp"], [8, 0, 0, "-", "adipose_mfp"], [8, 0, 0, "-", "air_mfp"], [8, 0, 0, "-", "blood_mfp"], [8, 0, 0, "-", "bone_mfp"], [8, 0, 0, "-", "brain_mfp"], [8, 0, 0, "-", "breast_mfp"], [8, 0, 0, "-", "cartilage_mfp"], [8, 0, 0, "-", "connective_mfp"], [8, 0, 0, "-", "glands_others_mfp"], [8, 0, 0, "-", "liver_mfp"], [8, 0, 0, "-", "lung_mfp"], [8, 0, 0, "-", "muscle_mfp"], [8, 0, 0, "-", "red_marrow_mfp"], [8, 0, 0, "-", "skin_mfp"], [8, 0, 0, "-", "soft_tissue_mfp"], [8, 0, 0, "-", "stomach_intestines_mfp"], [8, 0, 0, "-", "titanium_mfp"], [8, 0, 0, "-", "water_mfp"]], "deepdrr.projector.mcgpu_mfp_data": [[6, 5, 1, "", "sanity_check_mfps"]], "deepdrr.projector.mcgpu_rita_params": [[9, 0, 0, "-", "PMMA_rita_params"], [9, 0, 0, "-", "adipose_rita_params"], [9, 0, 0, "-", "air_rita_params"], [9, 0, 0, "-", "blood_rita_params"], [9, 0, 0, "-", "bone_rita_params"], [9, 0, 0, "-", "brain_rita_params"], [9, 0, 0, "-", "breast_rita_params"], [9, 0, 0, "-", "cartilage_rita_params"], [9, 0, 0, "-", "connective_rita_params"], [9, 0, 0, "-", "glands_others_rita_params"], [9, 0, 0, "-", "liver_rita_params"], [9, 0, 0, "-", "lung_rita_params"], [9, 0, 0, "-", "muscle_rita_params"], [9, 0, 0, "-", "red_marrow_rita_params"], [9, 0, 0, "-", "skin_rita_params"], [9, 0, 0, "-", "soft_tissue_rita_params"], [9, 0, 0, "-", "stomach_intestines_rita_params"], [9, 0, 0, "-", "titanium_rita_params"], [9, 0, 0, "-", "water_rita_params"]], "deepdrr.projector.mcgpu_rita_samplers": [[6, 5, 1, "", "sanity_check_saved_rita_params"]], "deepdrr.projector.plane_surface": [[6, 1, 1, "", "PlaneSurface"]], "deepdrr.projector.plane_surface.PlaneSurface": [[6, 4, 1, "", "basis_1"], [6, 4, 1, "", "basis_2"], [6, 4, 1, "", "bounds"], [6, 3, 1, "", "check_ray_intersection"], [6, 3, 1, "", "get_lin_comb_coefs"], [6, 4, 1, "", "orthogonal"], [6, 4, 1, "", "plane_vector"], [6, 3, 1, "", "point_on_surface"], [6, 3, 1, "", "point_on_surface_checking"], [6, 4, 1, "", "surface_origin"]], "deepdrr.projector.projector": [[6, 1, 1, "", "Projector"], [6, 5, 1, "", "import_pycuda"]], "deepdrr.projector.projector.Projector": [[6, 2, 1, "", "camera_intrinsics"], [6, 3, 1, "", "free"], [6, 3, 1, "", "initialize"], [6, 3, 1, "", "initialize_output_arrays"], [6, 2, 1, "", "output_size"], [6, 3, 1, "", "project"], [6, 3, 1, "", "project_over_carm_range"], [6, 2, 1, "", "source_to_detector_distance"], [6, 2, 1, "", "volume"], [6, 4, 1, "", "volumes"]], "deepdrr.projector.rita": [[6, 1, 1, "", "RITA"], [6, 5, 1, "", "numerically_integrate"]], "deepdrr.projector.rita.RITA": [[6, 4, 1, "", "dtype"], [6, 3, 1, "", "from_pdf"], [6, 3, 1, "", "from_saved_params"], [6, 3, 1, "", "sample_rita"]], "deepdrr.projector.scatter": [[6, 5, 1, "", "get_detector_plane"], [6, 5, 1, "", "get_mfp_data"], [6, 5, 1, "", "get_scattered_dir"], [6, 5, 1, "", "get_woodcock_mfp"], [6, 5, 1, "", "make_woodcock_mfp"], [6, 5, 1, "", "move_photon_to_volume"], [6, 5, 1, "", "sample_Compton_theta_E_prime"], [6, 5, 1, "", "sample_Rayleigh_theta"], [6, 5, 1, "", "sample_U01"], [6, 5, 1, "", "sample_initial_direction"], [6, 5, 1, "", "sample_initial_energy"], [6, 5, 1, "", "simulate_scatter_no_vr"], [6, 5, 1, "", "track_single_photon_no_vr"]], "deepdrr.segmentation": [[1, 1, 1, "", "SegmentationNet"]], "deepdrr.segmentation.SegmentationNet": [[1, 3, 1, "", "download"], [1, 4, 1, "", "filename"], [1, 3, 1, "", "segment"], [1, 4, 1, "", "url"]], "deepdrr.utils": [[10, 0, 0, "-", "data_utils"], [10, 0, 0, "-", "dicom_utils"], [10, 5, 1, "", "generate_uniform_angles"], [10, 0, 0, "-", "heatmap_utils"], [10, 0, 0, "-", "image_utils"], [10, 5, 1, "", "jsonable"], [10, 5, 1, "", "listify"], [10, 5, 1, "", "mappable"], [10, 0, 0, "-", "mesh_utils"], [10, 5, 1, "", "neglog"], [10, 5, 1, "", "one_hot"], [10, 5, 1, "", "param_saver"], [10, 5, 1, "", "radians"], [10, 0, 0, "-", "test_utils"], [10, 5, 1, "", "try_import_pyvista"], [10, 5, 1, "", "try_import_vtk"], [10, 5, 1, "", "tuplify"]], "deepdrr.utils.data_utils": [[10, 5, 1, "", "deepdrr_data_dir"], [10, 5, 1, "", "download"], [10, 5, 1, "", "jsonable"], [10, 5, 1, "", "load_fcsv"], [10, 5, 1, "", "load_json"], [10, 5, 1, "", "save_fcsv"], [10, 5, 1, "", "save_json"]], "deepdrr.utils.dicom_utils": [[10, 5, 1, "", "find_dicom"], [10, 5, 1, "", "get_time"], [10, 5, 1, "", "read_image"]], "deepdrr.utils.heatmap_utils": [[10, 5, 1, "", "get_threshold"]], "deepdrr.utils.image_utils": [[10, 5, 1, "", "as_float32"], [10, 5, 1, "", "as_uint8"], [10, 5, 1, "", "blend_heatmaps"], [10, 5, 1, "", "draw_circles"], [10, 5, 1, "", "draw_line"], [10, 5, 1, "", "draw_masks"], [10, 5, 1, "", "draw_segment"], [10, 5, 1, "", "ensure_cdim"], [10, 5, 1, "", "image_saver"], [10, 5, 1, "", "save"]], "deepdrr.utils.mesh_utils": [[10, 5, 1, "", "isosurface"], [10, 5, 1, "", "voxelize"], [10, 5, 1, "", "voxelize_dir"], [10, 5, 1, "", "voxelize_file"]], "deepdrr.utils.test_utils": [[10, 5, 1, "", "download_sampledata"], [10, 5, 1, "", "get_output_dir"]], "deepdrr.vis": [[1, 5, 1, "", "get_frustum_mesh"], [1, 5, 1, "", "show"]], "deepdrr.vol": [[11, 1, 1, "", "KWire"], [11, 1, 1, "", "MetalVolume"], [11, 1, 1, "", "Volume"], [11, 0, 0, "-", "kwire"], [11, 0, 0, "-", "volume"]], "deepdrr.vol.KWire": [[11, 3, 1, "", "advance"], [11, 3, 1, "", "align"], [11, 4, 1, "", "anatomical_coordinate_system"], [11, 4, 1, "", "anatomical_from_IJK"], [11, 2, 1, "", "base"], [11, 4, 1, "", "base_in_IJK"], [11, 2, 1, "", "base_in_anatomical"], [11, 2, 1, "", "base_in_ijk"], [11, 2, 1, "", "base_in_world"], [11, 2, 1, "", "centerline_in_world"], [11, 4, 1, "", "data"], [11, 4, 1, "", "diameter"], [11, 3, 1, "", "from_example"], [11, 2, 1, "", "length_in_world"], [11, 4, 1, "", "materials"], [11, 3, 1, "", "orient"], [11, 2, 1, "", "radius"], [11, 3, 1, "", "scale"], [11, 2, 1, "", "tip"], [11, 4, 1, "", "tip_in_IJK"], [11, 2, 1, "", "tip_in_anatomical"], [11, 2, 1, "", "tip_in_ijk"], [11, 2, 1, "", "tip_in_world"], [11, 2, 1, "", "trajectory_in_world"], [11, 3, 1, "", "twist"], [11, 4, 1, "", "world_from_anatomical"]], "deepdrr.vol.MetalVolume": [[11, 4, 1, "", "anatomical_coordinate_system"], [11, 4, 1, "", "anatomical_from_IJK"], [11, 4, 1, "", "data"], [11, 4, 1, "", "materials"], [11, 4, 1, "", "world_from_anatomical"]], "deepdrr.vol.Volume": [[11, 2, 1, "", "IJK_from_LPS"], [11, 2, 1, "", "IJK_from_RAS"], [11, 2, 1, "", "IJK_from_anatomical"], [11, 2, 1, "", "IJK_from_world"], [11, 2, 1, "", "LPS_from_IJK"], [11, 2, 1, "", "RAS_from_IJK"], [11, 4, 1, "", "anatomical_coordinate_system"], [11, 4, 1, "", "anatomical_from_IJK"], [11, 2, 1, "", "anatomical_from_ijk"], [11, 2, 1, "", "anatomical_from_world"], [11, 4, 1, "", "cache_dir"], [11, 2, 1, "", "center_in_world"], [11, 3, 1, "", "copy_pose"], [11, 3, 1, "", "crop"], [11, 4, 1, "", "data"], [11, 3, 1, "", "facedown"], [11, 3, 1, "", "faceup"], [11, 3, 1, "", "from_dicom"], [11, 3, 1, "", "from_hu"], [11, 3, 1, "", "from_nifti"], [11, 3, 1, "", "from_nrrd"], [11, 3, 1, "", "from_parameters"], [11, 3, 1, "", "get_bbox_IJK"], [11, 3, 1, "", "get_bounding_box_in_world"], [11, 3, 1, "", "get_config"], [11, 3, 1, "", "get_mesh_in_world"], [11, 3, 1, "", "get_surface"], [11, 2, 1, "", "ijk_from_anatomical"], [11, 2, 1, "", "ijk_from_world"], [11, 3, 1, "", "interpolate"], [11, 3, 1, "", "isosurface"], [11, 3, 1, "", "load"], [11, 4, 1, "", "materials"], [11, 3, 1, "", "orient_patient"], [11, 2, 1, "", "origin"], [11, 2, 1, "", "origin_in_anatomical"], [11, 2, 1, "", "origin_in_world"], [11, 3, 1, "", "place"], [11, 3, 1, "", "place_center"], [11, 3, 1, "", "prone"], [11, 3, 1, "", "rotate"], [11, 3, 1, "", "save"], [11, 3, 1, "", "segment_materials"], [11, 2, 1, "", "shape"], [11, 3, 1, "", "shrink"], [11, 2, 1, "", "spacing"], [11, 3, 1, "", "supine"], [11, 3, 1, "", "translate"], [11, 3, 1, "", "translate_center_to"], [11, 2, 1, "", "world_from_IJK"], [11, 4, 1, "", "world_from_anatomical"], [11, 2, 1, "", "world_from_ijk"]], "deepdrr.vol.kwire": [[11, 1, 1, "", "KWire"]], "deepdrr.vol.kwire.KWire": [[11, 3, 1, "", "advance"], [11, 3, 1, "", "align"], [11, 2, 1, "", "base"], [11, 4, 1, "", "base_in_IJK"], [11, 2, 1, "", "base_in_anatomical"], [11, 2, 1, "", "base_in_ijk"], [11, 2, 1, "", "base_in_world"], [11, 2, 1, "", "centerline_in_world"], [11, 4, 1, "", "diameter"], [11, 3, 1, "", "from_example"], [11, 2, 1, "", "length_in_world"], [11, 3, 1, "", "orient"], [11, 2, 1, "", "radius"], [11, 3, 1, "", "scale"], [11, 2, 1, "", "tip"], [11, 4, 1, "", "tip_in_IJK"], [11, 2, 1, "", "tip_in_anatomical"], [11, 2, 1, "", "tip_in_ijk"], [11, 2, 1, "", "tip_in_world"], [11, 2, 1, "", "trajectory_in_world"], [11, 3, 1, "", "twist"]], "deepdrr.vol.volume": [[11, 1, 1, "", "MetalVolume"], [11, 1, 1, "", "Volume"]], "deepdrr.vol.volume.MetalVolume": [[11, 4, 1, "", "anatomical_coordinate_system"], [11, 4, 1, "", "anatomical_from_IJK"], [11, 4, 1, "", "data"], [11, 4, 1, "", "materials"], [11, 4, 1, "", "world_from_anatomical"]], "deepdrr.vol.volume.Volume": [[11, 2, 1, "", "IJK_from_LPS"], [11, 2, 1, "", "IJK_from_RAS"], [11, 2, 1, "", "IJK_from_anatomical"], [11, 2, 1, "", "IJK_from_world"], [11, 2, 1, "", "LPS_from_IJK"], [11, 2, 1, "", "RAS_from_IJK"], [11, 4, 1, "", "anatomical_coordinate_system"], [11, 4, 1, "", "anatomical_from_IJK"], [11, 2, 1, "", "anatomical_from_ijk"], [11, 2, 1, "", "anatomical_from_world"], [11, 4, 1, "", "cache_dir"], [11, 2, 1, "", "center_in_world"], [11, 3, 1, "", "copy_pose"], [11, 3, 1, "", "crop"], [11, 4, 1, "", "data"], [11, 3, 1, "", "facedown"], [11, 3, 1, "", "faceup"], [11, 3, 1, "", "from_dicom"], [11, 3, 1, "", "from_hu"], [11, 3, 1, "", "from_nifti"], [11, 3, 1, "", "from_nrrd"], [11, 3, 1, "", "from_parameters"], [11, 3, 1, "", "get_bbox_IJK"], [11, 3, 1, "", "get_bounding_box_in_world"], [11, 3, 1, "", "get_config"], [11, 3, 1, "", "get_mesh_in_world"], [11, 3, 1, "", "get_surface"], [11, 2, 1, "", "ijk_from_anatomical"], [11, 2, 1, "", "ijk_from_world"], [11, 3, 1, "", "interpolate"], [11, 3, 1, "", "isosurface"], [11, 3, 1, "", "load"], [11, 4, 1, "", "materials"], [11, 3, 1, "", "orient_patient"], [11, 2, 1, "", "origin"], [11, 2, 1, "", "origin_in_anatomical"], [11, 2, 1, "", "origin_in_world"], [11, 3, 1, "", "place"], [11, 3, 1, "", "place_center"], [11, 3, 1, "", "prone"], [11, 3, 1, "", "rotate"], [11, 3, 1, "", "save"], [11, 3, 1, "", "segment_materials"], [11, 2, 1, "", "shape"], [11, 3, 1, "", "shrink"], [11, 2, 1, "", "spacing"], [11, 3, 1, "", "supine"], [11, 3, 1, "", "translate"], [11, 3, 1, "", "translate_center_to"], [11, 2, 1, "", "world_from_IJK"], [11, 4, 1, "", "world_from_anatomical"], [11, 2, 1, "", "world_from_ijk"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"deepdrr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": [], "submodul": [1, 6], "downsample_tool": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "load_dicom": 1, "load_dicom_tool": 1, "log": 1, "network_segment": 1, "segment": [1, 4], "vi": 1, "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "devic": 3, "carm": 3, "mobile_carm": 3, "simple_devic": 3, "geo": 4, "core": 4, "except": 4, "function": 4, "hyperplan": 4, "random": 4, "rai": 4, "type": 4, "util": [4, 10], "instrument": 5, "base": 5, "projector": [6, 7, 8, 9], "analytic_gener": 6, "conv_to_mcgpu": 6, "cuda_scatter_struct": 6, "mass_attenu": 6, "material_coeffici": 6, "mcgpu_compton_data": 6, "mcgpu_dens": 6, "mcgpu_mfp_data": 6, "mcgpu_rita_sampl": 6, "plane_surfac": 6, "rita": 6, "scatter": 6, "spectral_data": 6, "mcgpu_incoherent_scatter_data": 7, "pmma_compton_data": 7, "adipose_compton_data": 7, "air_compton_data": 7, "blood_compton_data": 7, "bone_compton_data": 7, "brain_compton_data": 7, "breast_compton_data": 7, "cartilage_compton_data": 7, "connective_compton_data": 7, "glands_others_compton_data": 7, "liver_compton_data": 7, "lung_compton_data": 7, "muscle_compton_data": 7, "red_marrow_compton_data": 7, "skin_compton_data": 7, "soft_tissue_compton_data": 7, "stomach_intestines_compton_data": 7, "titanium_compton_data": 7, "water_compton_data": 7, "mcgpu_mean_free_path_data": 8, "pmma_mfp": 8, "adipose_mfp": 8, "air_mfp": 8, "blood_mfp": 8, "bone_mfp": 8, "brain_mfp": 8, "breast_mfp": 8, "cartilage_mfp": 8, "connective_mfp": 8, "glands_others_mfp": 8, "liver_mfp": 8, "lung_mfp": 8, "muscle_mfp": 8, "red_marrow_mfp": 8, "skin_mfp": 8, "soft_tissue_mfp": 8, "stomach_intestines_mfp": 8, "titanium_mfp": 8, "water_mfp": 8, "mcgpu_rita_param": 9, "pmma_rita_param": 9, "adipose_rita_param": 9, "air_rita_param": 9, "blood_rita_param": 9, "bone_rita_param": 9, "brain_rita_param": 9, "breast_rita_param": 9, "cartilage_rita_param": 9, "connective_rita_param": 9, "glands_others_rita_param": 9, "liver_rita_param": 9, "lung_rita_param": 9, "muscle_rita_param": 9, "red_marrow_rita_param": 9, "skin_rita_param": 9, "soft_tissue_rita_param": 9, "stomach_intestines_rita_param": 9, "titanium_rita_param": 9, "water_rita_param": 9, "data_util": 10, "dicom_util": 10, "heatmap_util": 10, "image_util": 10, "mesh_util": 10, "test_util": 10, "vol": 11, "kwire": 11, "volum": 11, "annot": 2, "fiduci": 2, "line_annot": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"deepdrr package": [[1, "deepdrr-package"]], "Submodules": [[1, "submodules"], [6, "submodules"]], "deepdrr.downsample_tool module": [[1, "module-deepdrr.downsample_tool"]], "deepdrr.load_dicom module": [[1, "module-deepdrr.load_dicom"]], "deepdrr.load_dicom_tool module": [[1, "module-deepdrr.load_dicom_tool"]], "deepdrr.logging module": [[1, "module-deepdrr.logging"]], "deepdrr.network_segmentation module": [[1, "module-deepdrr.network_segmentation"]], "deepdrr.segmentation module": [[1, "module-deepdrr.segmentation"]], "deepdrr.vis module": [[1, "module-deepdrr.vis"]], "Module contents": [[1, "module-deepdrr"], [2, "module-deepdrr.annotations"], [3, "module-deepdrr.device"], [4, "module-deepdrr.geo"], [5, "module-deepdrr.instruments"], [6, "module-deepdrr.projector"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data"], [9, "module-deepdrr.projector.mcgpu_rita_params"], [10, "module-deepdrr.utils"], [11, "module-deepdrr.vol"]], "deepdrr.annotations package": [[2, "deepdrr-annotations-package"]], "deepdrr.annotations.fiducials": [[2, "module-deepdrr.annotations.fiducials"]], "deepdrr.annotations.line_annotation": [[2, "module-deepdrr.annotations.line_annotation"]], "deepdrr.device package": [[3, "deepdrr-device-package"]], "deepdrr.device.carm": [[3, "module-deepdrr.device.carm"]], "deepdrr.device.device": [[3, "module-deepdrr.device.device"]], "deepdrr.device.mobile_carm": [[3, "module-deepdrr.device.mobile_carm"]], "deepdrr.device.simple_device": [[3, "module-deepdrr.device.simple_device"]], "deepdrr.geo package": [[4, "deepdrr-geo-package"]], "deepdrr.geo.core": [[4, "module-deepdrr.geo.core"]], "deepdrr.geo.exceptions": [[4, "module-deepdrr.geo.exceptions"]], "deepdrr.geo.functional": [[4, "deepdrr-geo-functional"]], "deepdrr.geo.hyperplane": [[4, "module-deepdrr.geo.hyperplane"]], "deepdrr.geo.random": [[4, "module-deepdrr.geo.random"]], "deepdrr.geo.ray": [[4, "module-deepdrr.geo.ray"]], "deepdrr.geo.segment": [[4, "module-deepdrr.geo.segment"]], "deepdrr.geo.typing": [[4, "module-deepdrr.geo.typing"]], "deepdrr.geo.utils": [[4, "module-deepdrr.geo.utils"]], "deepdrr.instruments package": [[5, "deepdrr-instruments-package"]], "deepdrr.instruments.base": [[5, "module-deepdrr.instruments.base"]], "deepdrr.projector package": [[6, "deepdrr-projector-package"]], "deepdrr.projector.analytic_generators module": [[6, "module-deepdrr.projector.analytic_generators"]], "deepdrr.projector.conv_to_mcgpu module": [[6, "module-deepdrr.projector.conv_to_mcgpu"]], "deepdrr.projector.cuda_scatter_structs module": [[6, "module-deepdrr.projector.cuda_scatter_structs"]], "deepdrr.projector.mass_attenuation module": [[6, "module-deepdrr.projector.mass_attenuation"]], "deepdrr.projector.material_coefficients module": [[6, "module-deepdrr.projector.material_coefficients"]], "deepdrr.projector.mcgpu_compton_data module": [[6, "module-deepdrr.projector.mcgpu_compton_data"]], "deepdrr.projector.mcgpu_density module": [[6, "module-deepdrr.projector.mcgpu_density"]], "deepdrr.projector.mcgpu_mfp_data module": [[6, "module-deepdrr.projector.mcgpu_mfp_data"]], "deepdrr.projector.mcgpu_rita_samplers module": [[6, "module-deepdrr.projector.mcgpu_rita_samplers"]], "deepdrr.projector.plane_surface module": [[6, "module-deepdrr.projector.plane_surface"]], "deepdrr.projector.projector module": [[6, "module-deepdrr.projector.projector"]], "deepdrr.projector.rita module": [[6, "module-deepdrr.projector.rita"]], "deepdrr.projector.scatter module": [[6, "module-deepdrr.projector.scatter"]], "deepdrr.projector.spectral_data module": [[6, "module-deepdrr.projector.spectral_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data package": [[7, "deepdrr-projector-mcgpu-incoherent-scatter-data-package"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.PMMA_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.PMMA_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.adipose_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.adipose_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.air_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.air_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.blood_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.blood_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.bone_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.bone_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.brain_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.brain_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.breast_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.breast_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.cartilage_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.cartilage_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.connective_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.connective_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.glands_others_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.glands_others_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.liver_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.liver_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.lung_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.lung_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.muscle_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.muscle_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.red_marrow_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.red_marrow_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.skin_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.skin_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.soft_tissue_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.soft_tissue_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.stomach_intestines_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.stomach_intestines_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.titanium_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.titanium_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.water_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.water_compton_data"]], "deepdrr.projector.mcgpu_mean_free_path_data package": [[8, "deepdrr-projector-mcgpu-mean-free-path-data-package"]], "deepdrr.projector.mcgpu_mean_free_path_data.PMMA_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.PMMA_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.adipose_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.adipose_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.air_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.air_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.blood_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.blood_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.bone_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.bone_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.brain_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.brain_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.breast_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.breast_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.cartilage_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.cartilage_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.connective_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.connective_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.glands_others_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.glands_others_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.liver_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.liver_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.lung_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.lung_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.muscle_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.muscle_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.red_marrow_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.red_marrow_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.skin_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.skin_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.soft_tissue_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.soft_tissue_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.stomach_intestines_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.stomach_intestines_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.titanium_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.titanium_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.water_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.water_mfp"]], "deepdrr.projector.mcgpu_rita_params package": [[9, "deepdrr-projector-mcgpu-rita-params-package"]], "deepdrr.projector.mcgpu_rita_params.PMMA_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.PMMA_rita_params"]], "deepdrr.projector.mcgpu_rita_params.adipose_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.adipose_rita_params"]], "deepdrr.projector.mcgpu_rita_params.air_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.air_rita_params"]], "deepdrr.projector.mcgpu_rita_params.blood_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.blood_rita_params"]], "deepdrr.projector.mcgpu_rita_params.bone_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.bone_rita_params"]], "deepdrr.projector.mcgpu_rita_params.brain_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.brain_rita_params"]], "deepdrr.projector.mcgpu_rita_params.breast_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.breast_rita_params"]], "deepdrr.projector.mcgpu_rita_params.cartilage_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.cartilage_rita_params"]], "deepdrr.projector.mcgpu_rita_params.connective_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.connective_rita_params"]], "deepdrr.projector.mcgpu_rita_params.glands_others_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.glands_others_rita_params"]], "deepdrr.projector.mcgpu_rita_params.liver_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.liver_rita_params"]], "deepdrr.projector.mcgpu_rita_params.lung_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.lung_rita_params"]], "deepdrr.projector.mcgpu_rita_params.muscle_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.muscle_rita_params"]], "deepdrr.projector.mcgpu_rita_params.red_marrow_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.red_marrow_rita_params"]], "deepdrr.projector.mcgpu_rita_params.skin_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.skin_rita_params"]], "deepdrr.projector.mcgpu_rita_params.soft_tissue_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.soft_tissue_rita_params"]], "deepdrr.projector.mcgpu_rita_params.stomach_intestines_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.stomach_intestines_rita_params"]], "deepdrr.projector.mcgpu_rita_params.titanium_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.titanium_rita_params"]], "deepdrr.projector.mcgpu_rita_params.water_rita_params module": [[9, "module-deepdrr.projector.mcgpu_rita_params.water_rita_params"]], "deepdrr.utils package": [[10, "deepdrr-utils-package"]], "deepdrr.utils.data_utils module": [[10, "module-deepdrr.utils.data_utils"]], "deepdrr.utils.dicom_utils module": [[10, "module-deepdrr.utils.dicom_utils"]], "deepdrr.utils.heatmap_utils module": [[10, "module-deepdrr.utils.heatmap_utils"]], "deepdrr.utils.image_utils module": [[10, "module-deepdrr.utils.image_utils"]], "deepdrr.utils.mesh_utils module": [[10, "module-deepdrr.utils.mesh_utils"]], "deepdrr.utils.test_utils module": [[10, "module-deepdrr.utils.test_utils"]], "deepdrr.vol package": [[11, "deepdrr-vol-package"]], "deepdrr.vol.kwire module": [[11, "module-deepdrr.vol.kwire"]], "deepdrr.vol.volume module": [[11, "module-deepdrr.vol.volume"]], "DeepDRR": [[12, "deepdrr"]], "Contents:": [[12, null]], "deepdrr": [[13, "deepdrr"]]}, "indexentries": {"carm (class in deepdrr)": [[1, "deepdrr.CArm"]], "contbatchnorm3d (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d"]], "downtransition (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.DownTransition"]], "elucons() (in module deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.ELUCons"]], "ijk_from_lps (deepdrr.volume property)": [[1, "deepdrr.Volume.IJK_from_LPS"]], "ijk_from_ras (deepdrr.volume property)": [[1, "deepdrr.Volume.IJK_from_RAS"]], "ijk_from_anatomical (deepdrr.volume property)": [[1, "deepdrr.Volume.IJK_from_anatomical"], [1, "deepdrr.Volume.ijk_from_anatomical"]], "ijk_from_world (deepdrr.volume property)": [[1, "deepdrr.Volume.IJK_from_world"], [1, "deepdrr.Volume.ijk_from_world"]], "inputtransition (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.InputTransition"]], "lps_from_ijk (deepdrr.volume property)": [[1, "deepdrr.Volume.LPS_from_IJK"]], "luconv (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.LUConv"]], "mobilecarm (class in deepdrr)": [[1, "deepdrr.MobileCArm"]], "outputtransition (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.OutputTransition"]], "projector (class in deepdrr)": [[1, "deepdrr.Projector"]], "ras_from_ijk (deepdrr.volume property)": [[1, "deepdrr.Volume.RAS_from_IJK"]], "segmentationnet (class in deepdrr.segmentation)": [[1, "deepdrr.segmentation.SegmentationNet"]], "uptransition (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.UpTransition"]], "vnet (class in deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.VNet"]], "volume (class in deepdrr)": [[1, "deepdrr.Volume"]], "affine (deepdrr.network_segmentation.contbatchnorm3d attribute)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.affine"]], "alpha (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.alpha"]], "anatomical_coordinate_system (deepdrr.volume attribute)": [[1, "deepdrr.Volume.anatomical_coordinate_system"]], "anatomical_from_ijk (deepdrr.volume attribute)": [[1, "deepdrr.Volume.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.volume property)": [[1, "deepdrr.Volume.anatomical_from_ijk"]], "anatomical_from_world (deepdrr.volume property)": [[1, "deepdrr.Volume.anatomical_from_world"]], "arm_from_device (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.arm_from_device"]], "arm_width (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.arm_width"]], "beta (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.beta"]], "cache_dir (deepdrr.volume attribute)": [[1, "deepdrr.Volume.cache_dir"]], "camera3d_from_device (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.camera3d_from_device"]], "camera3d_from_world (deepdrr.carm property)": [[1, "deepdrr.CArm.camera3d_from_world"]], "camera3d_from_world (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.camera3d_from_world"]], "camera_intrinsics (deepdrr.projector property)": [[1, "deepdrr.Projector.camera_intrinsics"]], "center_in_world (deepdrr.volume property)": [[1, "deepdrr.Volume.center_in_world"]], "conv_hu_to_density() (in module deepdrr.load_dicom)": [[1, "deepdrr.load_dicom.conv_hu_to_density"]], "conv_hu_to_density() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.conv_hu_to_density"]], "conv_hu_to_materials() (in module deepdrr.load_dicom)": [[1, "deepdrr.load_dicom.conv_hu_to_materials"]], "conv_hu_to_materials() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.conv_hu_to_materials"]], "conv_hu_to_materials_thresholding() (in module deepdrr.load_dicom)": [[1, "deepdrr.load_dicom.conv_hu_to_materials_thresholding"]], "conv_hu_to_materials_thresholding() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.conv_hu_to_materials_thresholding"]], "copy_pose() (deepdrr.volume method)": [[1, "deepdrr.Volume.copy_pose"]], "crop() (deepdrr.volume method)": [[1, "deepdrr.Volume.crop"]], "data (deepdrr.volume attribute)": [[1, "deepdrr.Volume.data"]], "deepdrr": [[1, "module-deepdrr"]], "deepdrr.downsample_tool": [[1, "module-deepdrr.downsample_tool"]], "deepdrr.load_dicom": [[1, "module-deepdrr.load_dicom"]], "deepdrr.load_dicom_tool": [[1, "module-deepdrr.load_dicom_tool"]], "deepdrr.logging": [[1, "module-deepdrr.logging"]], "deepdrr.network_segmentation": [[1, "module-deepdrr.network_segmentation"]], "deepdrr.segmentation": [[1, "module-deepdrr.segmentation"]], "deepdrr.vis": [[1, "module-deepdrr.vis"]], "detector_height (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.detector_height"]], "device_from_arm (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.device_from_arm"]], "device_from_camera3d (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.device_from_camera3d"]], "download() (deepdrr.segmentation.segmentationnet method)": [[1, "deepdrr.segmentation.SegmentationNet.download"]], "downsample_tool() (in module deepdrr.downsample_tool)": [[1, "deepdrr.downsample_tool.downsample_tool"]], "eps (deepdrr.network_segmentation.contbatchnorm3d attribute)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.eps"]], "facedown() (deepdrr.volume method)": [[1, "deepdrr.Volume.facedown"]], "faceup() (deepdrr.volume method)": [[1, "deepdrr.Volume.faceup"]], "filename (deepdrr.segmentation.segmentationnet attribute)": [[1, "deepdrr.segmentation.SegmentationNet.filename"]], "forward() (deepdrr.network_segmentation.contbatchnorm3d method)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.forward"]], "forward() (deepdrr.network_segmentation.downtransition method)": [[1, "deepdrr.network_segmentation.DownTransition.forward"]], "forward() (deepdrr.network_segmentation.inputtransition method)": [[1, "deepdrr.network_segmentation.InputTransition.forward"]], "forward() (deepdrr.network_segmentation.luconv method)": [[1, "deepdrr.network_segmentation.LUConv.forward"]], "forward() (deepdrr.network_segmentation.outputtransition method)": [[1, "deepdrr.network_segmentation.OutputTransition.forward"]], "forward() (deepdrr.network_segmentation.uptransition method)": [[1, "deepdrr.network_segmentation.UpTransition.forward"]], "forward() (deepdrr.network_segmentation.vnet method)": [[1, "deepdrr.network_segmentation.VNet.forward"]], "free() (deepdrr.projector method)": [[1, "deepdrr.Projector.free"]], "from_dicom() (deepdrr.volume class method)": [[1, "deepdrr.Volume.from_dicom"]], "from_hu() (deepdrr.volume class method)": [[1, "deepdrr.Volume.from_hu"]], "from_nifti() (deepdrr.volume class method)": [[1, "deepdrr.Volume.from_nifti"]], "from_nrrd() (deepdrr.volume class method)": [[1, "deepdrr.Volume.from_nrrd"]], "from_parameters() (deepdrr.volume class method)": [[1, "deepdrr.Volume.from_parameters"]], "get_bbox_ijk() (deepdrr.volume method)": [[1, "deepdrr.Volume.get_bbox_IJK"]], "get_bounding_box_in_world() (deepdrr.volume method)": [[1, "deepdrr.Volume.get_bounding_box_in_world"]], "get_camera3d_from_world() (deepdrr.carm method)": [[1, "deepdrr.CArm.get_camera3d_from_world"]], "get_camera3d_from_world() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.get_camera3d_from_world"]], "get_camera_projection() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.get_camera_projection"]], "get_config() (deepdrr.volume method)": [[1, "deepdrr.Volume.get_config"]], "get_frustum_mesh() (in module deepdrr.vis)": [[1, "deepdrr.vis.get_frustum_mesh"]], "get_mesh_in_world() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.volume method)": [[1, "deepdrr.Volume.get_mesh_in_world"]], "get_surface() (deepdrr.volume method)": [[1, "deepdrr.Volume.get_surface"]], "initialize() (deepdrr.projector method)": [[1, "deepdrr.Projector.initialize"]], "initialize_output_arrays() (deepdrr.projector method)": [[1, "deepdrr.Projector.initialize_output_arrays"]], "interpolate() (deepdrr.volume method)": [[1, "deepdrr.Volume.interpolate"]], "isocenter (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.isocenter"]], "isocenter_in_world (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.isocenter_in_world"]], "isosurface() (deepdrr.volume method)": [[1, "deepdrr.Volume.isosurface"]], "jitter() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.jitter"]], "load() (deepdrr.volume class method)": [[1, "deepdrr.Volume.load"]], "load_dicom() (in module deepdrr.load_dicom)": [[1, "deepdrr.load_dicom.load_dicom"]], "load_dicom_ct() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.load_dicom_CT"]], "load_dicom_metal() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.load_dicom_metal"]], "materials (deepdrr.volume attribute)": [[1, "deepdrr.Volume.materials"]], "max_isocenter (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.max_isocenter"]], "min_isocenter (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.min_isocenter"]], "module": [[1, "module-deepdrr"], [1, "module-deepdrr.downsample_tool"], [1, "module-deepdrr.load_dicom"], [1, "module-deepdrr.load_dicom_tool"], [1, "module-deepdrr.logging"], [1, "module-deepdrr.network_segmentation"], [1, "module-deepdrr.segmentation"], [1, "module-deepdrr.vis"], [2, "module-deepdrr.annotations"], [2, "module-deepdrr.annotations.fiducials"], [2, "module-deepdrr.annotations.line_annotation"], [3, "module-deepdrr.device"], [3, "module-deepdrr.device.carm"], [3, "module-deepdrr.device.device"], [3, "module-deepdrr.device.mobile_carm"], [3, "module-deepdrr.device.simple_device"], [4, "module-deepdrr.geo"], [4, "module-deepdrr.geo.core"], [4, "module-deepdrr.geo.exceptions"], [4, "module-deepdrr.geo.hyperplane"], [4, "module-deepdrr.geo.random"], [4, "module-deepdrr.geo.ray"], [4, "module-deepdrr.geo.segment"], [4, "module-deepdrr.geo.typing"], [4, "module-deepdrr.geo.utils"], [5, "module-deepdrr.instruments"], [5, "module-deepdrr.instruments.base"], [6, "module-deepdrr.projector"], [6, "module-deepdrr.projector.analytic_generators"], [6, "module-deepdrr.projector.conv_to_mcgpu"], [6, "module-deepdrr.projector.cuda_scatter_structs"], [6, "module-deepdrr.projector.mass_attenuation"], [6, "module-deepdrr.projector.material_coefficients"], [6, "module-deepdrr.projector.mcgpu_compton_data"], [6, "module-deepdrr.projector.mcgpu_density"], [6, "module-deepdrr.projector.mcgpu_mfp_data"], [6, "module-deepdrr.projector.mcgpu_rita_samplers"], [6, "module-deepdrr.projector.plane_surface"], [6, "module-deepdrr.projector.projector"], [6, "module-deepdrr.projector.rita"], [6, "module-deepdrr.projector.scatter"], [6, "module-deepdrr.projector.spectral_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.PMMA_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.adipose_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.air_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.blood_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.bone_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.brain_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.breast_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.cartilage_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.connective_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.glands_others_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.liver_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.lung_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.muscle_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.red_marrow_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.skin_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.soft_tissue_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.stomach_intestines_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.titanium_compton_data"], [7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.water_compton_data"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.PMMA_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.adipose_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.air_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.blood_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.bone_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.brain_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.breast_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.cartilage_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.connective_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.glands_others_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.liver_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.lung_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.muscle_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.red_marrow_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.skin_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.soft_tissue_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.stomach_intestines_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.titanium_mfp"], [8, "module-deepdrr.projector.mcgpu_mean_free_path_data.water_mfp"], [9, "module-deepdrr.projector.mcgpu_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.PMMA_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.adipose_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.air_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.blood_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.bone_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.brain_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.breast_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.cartilage_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.connective_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.glands_others_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.liver_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.lung_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.muscle_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.red_marrow_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.skin_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.soft_tissue_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.stomach_intestines_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.titanium_rita_params"], [9, "module-deepdrr.projector.mcgpu_rita_params.water_rita_params"], [10, "module-deepdrr.utils"], [10, "module-deepdrr.utils.data_utils"], [10, "module-deepdrr.utils.dicom_utils"], [10, "module-deepdrr.utils.heatmap_utils"], [10, "module-deepdrr.utils.image_utils"], [10, "module-deepdrr.utils.mesh_utils"], [10, "module-deepdrr.utils.test_utils"], [11, "module-deepdrr.vol"], [11, "module-deepdrr.vol.kwire"], [11, "module-deepdrr.vol.volume"]], "momentum (deepdrr.network_segmentation.contbatchnorm3d attribute)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.momentum"]], "move_by() (deepdrr.carm method)": [[1, "deepdrr.CArm.move_by"]], "move_by() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.move_by"]], "move_to() (deepdrr.carm method)": [[1, "deepdrr.CArm.move_to"]], "move_to() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.move_to"]], "num_features (deepdrr.network_segmentation.contbatchnorm3d attribute)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.num_features"]], "orient_patient() (deepdrr.volume method)": [[1, "deepdrr.Volume.orient_patient"]], "origin (deepdrr.volume property)": [[1, "deepdrr.Volume.origin"]], "origin_in_anatomical (deepdrr.volume property)": [[1, "deepdrr.Volume.origin_in_anatomical"]], "origin_in_world (deepdrr.volume property)": [[1, "deepdrr.Volume.origin_in_world"]], "output_size (deepdrr.projector property)": [[1, "deepdrr.Projector.output_size"]], "passthrough() (in module deepdrr.network_segmentation)": [[1, "deepdrr.network_segmentation.passthrough"]], "place() (deepdrr.volume method)": [[1, "deepdrr.Volume.place"]], "place_center() (deepdrr.volume method)": [[1, "deepdrr.Volume.place_center"]], "principle_ray (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.principle_ray"]], "project() (deepdrr.projector method)": [[1, "deepdrr.Projector.project"]], "project_over_carm_range() (deepdrr.projector method)": [[1, "deepdrr.Projector.project_over_carm_range"]], "prone() (deepdrr.volume method)": [[1, "deepdrr.Volume.prone"]], "replace_material() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.replace_material"]], "reposition() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.reposition"]], "rotate() (deepdrr.volume method)": [[1, "deepdrr.Volume.rotate"]], "save() (deepdrr.volume method)": [[1, "deepdrr.Volume.save"]], "segment() (deepdrr.segmentation.segmentationnet method)": [[1, "deepdrr.segmentation.SegmentationNet.segment"]], "segment_materials() (deepdrr.volume class method)": [[1, "deepdrr.Volume.segment_materials"]], "setup_log() (in module deepdrr)": [[1, "deepdrr.setup_log"]], "setup_log() (in module deepdrr.logging)": [[1, "deepdrr.logging.setup_log"]], "shape (deepdrr.volume property)": [[1, "deepdrr.Volume.shape"]], "show() (in module deepdrr.vis)": [[1, "deepdrr.vis.show"]], "shrink() (deepdrr.volume method)": [[1, "deepdrr.Volume.shrink"]], "source_height (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.source_height"]], "source_in_arm (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.source_in_arm"]], "source_in_device (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.source_in_device"]], "source_radius (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.source_radius"]], "source_to_detector_distance (deepdrr.projector property)": [[1, "deepdrr.Projector.source_to_detector_distance"]], "spacing (deepdrr.volume property)": [[1, "deepdrr.Volume.spacing"]], "supine() (deepdrr.volume method)": [[1, "deepdrr.Volume.supine"]], "to_config() (deepdrr.mobilecarm method)": [[1, "deepdrr.MobileCArm.to_config"]], "track_running_stats (deepdrr.network_segmentation.contbatchnorm3d attribute)": [[1, "deepdrr.network_segmentation.ContBatchNorm3d.track_running_stats"]], "training (deepdrr.network_segmentation.downtransition attribute)": [[1, "deepdrr.network_segmentation.DownTransition.training"]], "training (deepdrr.network_segmentation.inputtransition attribute)": [[1, "deepdrr.network_segmentation.InputTransition.training"]], "training (deepdrr.network_segmentation.luconv attribute)": [[1, "deepdrr.network_segmentation.LUConv.training"]], "training (deepdrr.network_segmentation.outputtransition attribute)": [[1, "deepdrr.network_segmentation.OutputTransition.training"]], "training (deepdrr.network_segmentation.uptransition attribute)": [[1, "deepdrr.network_segmentation.UpTransition.training"]], "training (deepdrr.network_segmentation.vnet attribute)": [[1, "deepdrr.network_segmentation.VNet.training"]], "translate() (deepdrr.volume method)": [[1, "deepdrr.Volume.translate"]], "translate_center_to() (deepdrr.volume method)": [[1, "deepdrr.Volume.translate_center_to"]], "upsample() (in module deepdrr.load_dicom)": [[1, "deepdrr.load_dicom.upsample"]], "upsample() (in module deepdrr.load_dicom_tool)": [[1, "deepdrr.load_dicom_tool.upsample"]], "url (deepdrr.segmentation.segmentationnet attribute)": [[1, "deepdrr.segmentation.SegmentationNet.url"]], "viewpoint (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.viewpoint"]], "viewpoint_in_world (deepdrr.mobilecarm property)": [[1, "deepdrr.MobileCArm.viewpoint_in_world"]], "volume (deepdrr.projector property)": [[1, "deepdrr.Projector.volume"]], "volumes (deepdrr.projector attribute)": [[1, "deepdrr.Projector.volumes"]], "world_from_ijk (deepdrr.volume property)": [[1, "deepdrr.Volume.world_from_IJK"], [1, "deepdrr.Volume.world_from_ijk"]], "world_from_anatomical (deepdrr.volume attribute)": [[1, "deepdrr.Volume.world_from_anatomical"]], "world_from_device (deepdrr.mobilecarm attribute)": [[1, "deepdrr.MobileCArm.world_from_device"]], "fiducial (class in deepdrr.annotations)": [[2, "deepdrr.annotations.Fiducial"]], "fiducial (class in deepdrr.annotations.fiducials)": [[2, "deepdrr.annotations.fiducials.Fiducial"]], "fiduciallist (class in deepdrr.annotations)": [[2, "deepdrr.annotations.FiducialList"]], "fiduciallist (class in deepdrr.annotations.fiducials)": [[2, "deepdrr.annotations.fiducials.FiducialList"]], "lineannotation (class in deepdrr.annotations)": [[2, "deepdrr.annotations.LineAnnotation"]], "lineannotation (class in deepdrr.annotations.line_annotation)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation"]], "anatomical_coordinate_system (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.anatomical_coordinate_system"]], "anatomical_coordinate_system (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.anatomical_coordinate_system"]], "anatomical_from_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.anatomical_from_world"]], "anatomical_from_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.anatomical_from_world"]], "data (deepdrr.annotations.fiducial attribute)": [[2, "deepdrr.annotations.Fiducial.data"]], "data (deepdrr.annotations.fiducials.fiducial attribute)": [[2, "deepdrr.annotations.fiducials.Fiducial.data"]], "deepdrr.annotations": [[2, "module-deepdrr.annotations"]], "deepdrr.annotations.fiducials": [[2, "module-deepdrr.annotations.fiducials"]], "deepdrr.annotations.line_annotation": [[2, "module-deepdrr.annotations.line_annotation"]], "direction_in_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.direction_in_world"]], "direction_in_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.direction_in_world"]], "endpoint (deepdrr.annotations.lineannotation attribute)": [[2, "deepdrr.annotations.LineAnnotation.endpoint"]], "endpoint (deepdrr.annotations.line_annotation.lineannotation attribute)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.endpoint"]], "endpoint_in_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.endpoint_in_world"]], "endpoint_in_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.endpoint_in_world"]], "from_fcsv() (deepdrr.annotations.fiducial class method)": [[2, "deepdrr.annotations.Fiducial.from_fcsv"]], "from_fcsv() (deepdrr.annotations.fiduciallist class method)": [[2, "deepdrr.annotations.FiducialList.from_fcsv"]], "from_fcsv() (deepdrr.annotations.lineannotation class method)": [[2, "deepdrr.annotations.LineAnnotation.from_fcsv"]], "from_fcsv() (deepdrr.annotations.fiducials.fiducial class method)": [[2, "deepdrr.annotations.fiducials.Fiducial.from_fcsv"]], "from_fcsv() (deepdrr.annotations.fiducials.fiduciallist class method)": [[2, "deepdrr.annotations.fiducials.FiducialList.from_fcsv"]], "from_fcsv() (deepdrr.annotations.line_annotation.lineannotation class method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.from_fcsv"]], "from_json() (deepdrr.annotations.fiducial class method)": [[2, "deepdrr.annotations.Fiducial.from_json"]], "from_json() (deepdrr.annotations.fiduciallist class method)": [[2, "deepdrr.annotations.FiducialList.from_json"]], "from_json() (deepdrr.annotations.lineannotation class method)": [[2, "deepdrr.annotations.LineAnnotation.from_json"]], "from_json() (deepdrr.annotations.fiducials.fiducial class method)": [[2, "deepdrr.annotations.fiducials.Fiducial.from_json"]], "from_json() (deepdrr.annotations.fiducials.fiduciallist class method)": [[2, "deepdrr.annotations.fiducials.FiducialList.from_json"]], "from_json() (deepdrr.annotations.line_annotation.lineannotation class method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.from_json"]], "from_markup() (deepdrr.annotations.lineannotation class method)": [[2, "deepdrr.annotations.LineAnnotation.from_markup"]], "from_markup() (deepdrr.annotations.line_annotation.lineannotation class method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.from_markup"]], "get_direction() (deepdrr.annotations.lineannotation method)": [[2, "deepdrr.annotations.LineAnnotation.get_direction"]], "get_direction() (deepdrr.annotations.line_annotation.lineannotation method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.get_direction"]], "get_mesh() (deepdrr.annotations.lineannotation method)": [[2, "deepdrr.annotations.LineAnnotation.get_mesh"]], "get_mesh() (deepdrr.annotations.line_annotation.lineannotation method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.get_mesh"]], "get_mesh_in_world() (deepdrr.annotations.lineannotation method)": [[2, "deepdrr.annotations.LineAnnotation.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.annotations.line_annotation.lineannotation method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.get_mesh_in_world"]], "midpoint_in_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.midpoint_in_world"]], "midpoint_in_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.midpoint_in_world"]], "save() (deepdrr.annotations.fiducial method)": [[2, "deepdrr.annotations.Fiducial.save"]], "save() (deepdrr.annotations.fiduciallist method)": [[2, "deepdrr.annotations.FiducialList.save"]], "save() (deepdrr.annotations.lineannotation method)": [[2, "deepdrr.annotations.LineAnnotation.save"]], "save() (deepdrr.annotations.fiducials.fiducial method)": [[2, "deepdrr.annotations.fiducials.Fiducial.save"]], "save() (deepdrr.annotations.fiducials.fiduciallist method)": [[2, "deepdrr.annotations.fiducials.FiducialList.save"]], "save() (deepdrr.annotations.line_annotation.lineannotation method)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.save"]], "startpoint (deepdrr.annotations.lineannotation attribute)": [[2, "deepdrr.annotations.LineAnnotation.startpoint"]], "startpoint (deepdrr.annotations.line_annotation.lineannotation attribute)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.startpoint"]], "startpoint_in_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.startpoint_in_world"]], "startpoint_in_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.startpoint_in_world"]], "to_lps() (deepdrr.annotations.fiduciallist method)": [[2, "deepdrr.annotations.FiducialList.to_LPS"]], "to_lps() (deepdrr.annotations.fiducials.fiduciallist method)": [[2, "deepdrr.annotations.fiducials.FiducialList.to_LPS"]], "to_ras() (deepdrr.annotations.fiduciallist method)": [[2, "deepdrr.annotations.FiducialList.to_RAS"]], "to_ras() (deepdrr.annotations.fiducials.fiduciallist method)": [[2, "deepdrr.annotations.fiducials.FiducialList.to_RAS"]], "trajectory_in_world (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.trajectory_in_world"]], "trajectory_in_world (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.trajectory_in_world"]], "world_from_anatomical (deepdrr.annotations.lineannotation property)": [[2, "deepdrr.annotations.LineAnnotation.world_from_anatomical"]], "world_from_anatomical (deepdrr.annotations.line_annotation.lineannotation property)": [[2, "deepdrr.annotations.line_annotation.LineAnnotation.world_from_anatomical"]], "carm (class in deepdrr.device)": [[3, "deepdrr.device.CArm"]], "carm (class in deepdrr.device.carm)": [[3, "deepdrr.device.carm.CArm"]], "device (class in deepdrr.device)": [[3, "deepdrr.device.Device"]], "device (class in deepdrr.device.device)": [[3, "deepdrr.device.device.Device"]], "mobilecarm (class in deepdrr.device)": [[3, "deepdrr.device.MobileCArm"]], "mobilecarm (class in deepdrr.device.mobile_carm)": [[3, "deepdrr.device.mobile_carm.MobileCArm"]], "simpledevice (class in deepdrr.device)": [[3, "deepdrr.device.SimpleDevice"]], "simpledevice (class in deepdrr.device.simple_device)": [[3, "deepdrr.device.simple_device.SimpleDevice"]], "alpha (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.alpha"]], "alpha (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.alpha"]], "arm_from_device (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.arm_from_device"]], "arm_from_device (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.arm_from_device"]], "arm_width (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.arm_width"]], "arm_width (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.arm_width"]], "beta (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.beta"]], "beta (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.beta"]], "camera3d_from_device (deepdrr.device.device property)": [[3, "deepdrr.device.Device.camera3d_from_device"]], "camera3d_from_device (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.camera3d_from_device"]], "camera3d_from_device (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.camera3d_from_device"]], "camera3d_from_device (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.camera3d_from_device"]], "camera3d_from_index (deepdrr.device.device property)": [[3, "deepdrr.device.Device.camera3d_from_index"]], "camera3d_from_index (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.camera3d_from_index"]], "camera3d_from_world (deepdrr.device.carm property)": [[3, "deepdrr.device.CArm.camera3d_from_world"]], "camera3d_from_world (deepdrr.device.device property)": [[3, "deepdrr.device.Device.camera3d_from_world"]], "camera3d_from_world (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.camera3d_from_world"]], "camera3d_from_world (deepdrr.device.carm.carm property)": [[3, "deepdrr.device.carm.CArm.camera3d_from_world"]], "camera3d_from_world (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.camera3d_from_world"]], "camera3d_from_world (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.camera3d_from_world"]], "camera_intrinsics (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.camera_intrinsics"]], "camera_intrinsics (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.camera_intrinsics"]], "camera_intrinsics (deepdrr.device.simpledevice property)": [[3, "deepdrr.device.SimpleDevice.camera_intrinsics"]], "camera_intrinsics (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.camera_intrinsics"]], "camera_intrinsics (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.camera_intrinsics"]], "camera_intrinsics (deepdrr.device.simple_device.simpledevice property)": [[3, "deepdrr.device.simple_device.SimpleDevice.camera_intrinsics"]], "deepdrr.device": [[3, "module-deepdrr.device"]], "deepdrr.device.carm": [[3, "module-deepdrr.device.carm"]], "deepdrr.device.device": [[3, "module-deepdrr.device.device"]], "deepdrr.device.mobile_carm": [[3, "module-deepdrr.device.mobile_carm"]], "deepdrr.device.simple_device": [[3, "module-deepdrr.device.simple_device"]], "detector_height (deepdrr.device.device property)": [[3, "deepdrr.device.Device.detector_height"]], "detector_height (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.detector_height"]], "detector_height (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.detector_height"]], "detector_height (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.detector_height"]], "detector_width (deepdrr.device.device property)": [[3, "deepdrr.device.Device.detector_width"]], "detector_width (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.detector_width"]], "device_from_arm (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.device_from_arm"]], "device_from_arm (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.device_from_arm"]], "device_from_camera3d (deepdrr.device.device property)": [[3, "deepdrr.device.Device.device_from_camera3d"]], "device_from_camera3d (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.device_from_camera3d"]], "device_from_camera3d (deepdrr.device.simpledevice property)": [[3, "deepdrr.device.SimpleDevice.device_from_camera3d"]], "device_from_camera3d (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.device_from_camera3d"]], "device_from_camera3d (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.device_from_camera3d"]], "device_from_camera3d (deepdrr.device.simple_device.simpledevice property)": [[3, "deepdrr.device.simple_device.SimpleDevice.device_from_camera3d"]], "device_from_world (deepdrr.device.device property)": [[3, "deepdrr.device.Device.device_from_world"]], "device_from_world (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.device_from_world"]], "get_camera3d_from_world() (deepdrr.device.carm method)": [[3, "deepdrr.device.CArm.get_camera3d_from_world"]], "get_camera3d_from_world() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.get_camera3d_from_world"]], "get_camera3d_from_world() (deepdrr.device.carm.carm method)": [[3, "deepdrr.device.carm.CArm.get_camera3d_from_world"]], "get_camera3d_from_world() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.get_camera3d_from_world"]], "get_camera_projection() (deepdrr.device.device method)": [[3, "deepdrr.device.Device.get_camera_projection"]], "get_camera_projection() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.get_camera_projection"]], "get_camera_projection() (deepdrr.device.device.device method)": [[3, "deepdrr.device.device.Device.get_camera_projection"]], "get_camera_projection() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.get_camera_projection"]], "get_mesh_in_world() (deepdrr.device.device method)": [[3, "deepdrr.device.Device.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.device.device.device method)": [[3, "deepdrr.device.device.Device.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.get_mesh_in_world"]], "index_from_camera3d (deepdrr.device.device property)": [[3, "deepdrr.device.Device.index_from_camera3d"]], "index_from_camera3d (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.index_from_camera3d"]], "index_from_world (deepdrr.device.device property)": [[3, "deepdrr.device.Device.index_from_world"]], "index_from_world (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.index_from_world"]], "isocenter (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.isocenter"]], "isocenter (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.isocenter"]], "isocenter_in_world (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.isocenter_in_world"]], "isocenter_in_world (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.isocenter_in_world"]], "jitter() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.jitter"]], "jitter() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.jitter"]], "make_detector_rotation() (in module deepdrr.device.carm)": [[3, "deepdrr.device.carm.make_detector_rotation"]], "max_isocenter (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.max_isocenter"]], "max_isocenter (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.max_isocenter"]], "min_isocenter (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.min_isocenter"]], "min_isocenter (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.min_isocenter"]], "move_by() (deepdrr.device.carm method)": [[3, "deepdrr.device.CArm.move_by"]], "move_by() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.move_by"]], "move_by() (deepdrr.device.carm.carm method)": [[3, "deepdrr.device.carm.CArm.move_by"]], "move_by() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.move_by"]], "move_to() (deepdrr.device.carm method)": [[3, "deepdrr.device.CArm.move_to"]], "move_to() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.move_to"]], "move_to() (deepdrr.device.carm.carm method)": [[3, "deepdrr.device.carm.CArm.move_to"]], "move_to() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.move_to"]], "pixel_size (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.pixel_size"], [3, "id8"]], "pixel_size (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.pixel_size"]], "pixel_size (deepdrr.device.simpledevice attribute)": [[3, "deepdrr.device.SimpleDevice.pixel_size"], [3, "id11"]], "pixel_size (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.pixel_size"], [3, "id0"]], "pixel_size (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.pixel_size"]], "pixel_size (deepdrr.device.simple_device.simpledevice attribute)": [[3, "deepdrr.device.simple_device.SimpleDevice.pixel_size"], [3, "id3"]], "pose_vector_angles() (in module deepdrr.device.mobile_carm)": [[3, "deepdrr.device.mobile_carm.pose_vector_angles"]], "principle_ray (deepdrr.device.device property)": [[3, "deepdrr.device.Device.principle_ray"]], "principle_ray (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.principle_ray"]], "principle_ray (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.principle_ray"]], "principle_ray (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.principle_ray"]], "principle_ray_in_world (deepdrr.device.device property)": [[3, "deepdrr.device.Device.principle_ray_in_world"]], "principle_ray_in_world (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.principle_ray_in_world"]], "reposition() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.reposition"]], "reposition() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.reposition"]], "sensor_height (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.sensor_height"], [3, "id9"]], "sensor_height (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.sensor_height"]], "sensor_height (deepdrr.device.simpledevice attribute)": [[3, "deepdrr.device.SimpleDevice.sensor_height"], [3, "id12"]], "sensor_height (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.sensor_height"], [3, "id1"]], "sensor_height (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.sensor_height"]], "sensor_height (deepdrr.device.simple_device.simpledevice attribute)": [[3, "deepdrr.device.simple_device.SimpleDevice.sensor_height"], [3, "id4"]], "sensor_width (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.sensor_width"], [3, "id10"]], "sensor_width (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.sensor_width"]], "sensor_width (deepdrr.device.simpledevice attribute)": [[3, "deepdrr.device.SimpleDevice.sensor_width"], [3, "id13"]], "sensor_width (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.sensor_width"], [3, "id2"]], "sensor_width (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.sensor_width"]], "sensor_width (deepdrr.device.simple_device.simpledevice attribute)": [[3, "deepdrr.device.simple_device.SimpleDevice.sensor_width"], [3, "id5"]], "set_view() (deepdrr.device.simpledevice method)": [[3, "deepdrr.device.SimpleDevice.set_view"]], "set_view() (deepdrr.device.simple_device.simpledevice method)": [[3, "deepdrr.device.simple_device.SimpleDevice.set_view"]], "source_height (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.source_height"]], "source_height (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.source_height"]], "source_in_arm (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.source_in_arm"]], "source_in_arm (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.source_in_arm"]], "source_in_device (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.source_in_device"]], "source_in_device (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.source_in_device"]], "source_in_world (deepdrr.device.device property)": [[3, "deepdrr.device.Device.source_in_world"]], "source_in_world (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.source_in_world"]], "source_radius (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.source_radius"]], "source_radius (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.source_radius"]], "source_to_detector_distance (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.source_to_detector_distance"]], "source_to_detector_distance (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.source_to_detector_distance"]], "source_to_detector_distance (deepdrr.device.simpledevice attribute)": [[3, "deepdrr.device.SimpleDevice.source_to_detector_distance"], [3, "id14"]], "source_to_detector_distance (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.source_to_detector_distance"]], "source_to_detector_distance (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.source_to_detector_distance"]], "source_to_detector_distance (deepdrr.device.simple_device.simpledevice attribute)": [[3, "deepdrr.device.simple_device.SimpleDevice.source_to_detector_distance"], [3, "id6"]], "to_config() (deepdrr.device.mobilecarm method)": [[3, "deepdrr.device.MobileCArm.to_config"]], "to_config() (deepdrr.device.mobile_carm.mobilecarm method)": [[3, "deepdrr.device.mobile_carm.MobileCArm.to_config"]], "viewpoint (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.viewpoint"]], "viewpoint (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.viewpoint"]], "viewpoint_in_world (deepdrr.device.mobilecarm property)": [[3, "deepdrr.device.MobileCArm.viewpoint_in_world"]], "viewpoint_in_world (deepdrr.device.mobile_carm.mobilecarm property)": [[3, "deepdrr.device.mobile_carm.MobileCArm.viewpoint_in_world"]], "world_from_camera3d (deepdrr.device.device property)": [[3, "deepdrr.device.Device.world_from_camera3d"]], "world_from_camera3d (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.world_from_camera3d"]], "world_from_device (deepdrr.device.device attribute)": [[3, "deepdrr.device.Device.world_from_device"]], "world_from_device (deepdrr.device.mobilecarm attribute)": [[3, "deepdrr.device.MobileCArm.world_from_device"]], "world_from_device (deepdrr.device.simpledevice attribute)": [[3, "deepdrr.device.SimpleDevice.world_from_device"], [3, "id15"]], "world_from_device (deepdrr.device.device.device attribute)": [[3, "deepdrr.device.device.Device.world_from_device"]], "world_from_device (deepdrr.device.mobile_carm.mobilecarm attribute)": [[3, "deepdrr.device.mobile_carm.MobileCArm.world_from_device"]], "world_from_device (deepdrr.device.simple_device.simpledevice attribute)": [[3, "deepdrr.device.simple_device.SimpleDevice.world_from_device"], [3, "id7"]], "world_from_index (deepdrr.device.device property)": [[3, "deepdrr.device.Device.world_from_index"]], "world_from_index (deepdrr.device.device.device property)": [[3, "deepdrr.device.device.Device.world_from_index"]], "cameraintrinsictransform (class in deepdrr.geo)": [[4, "deepdrr.geo.CameraIntrinsicTransform"]], "cameraintrinsictransform (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform"]], "cameraprojection (class in deepdrr.geo)": [[4, "deepdrr.geo.CameraProjection"]], "cameraprojection (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.CameraProjection"]], "f (class in deepdrr.geo)": [[4, "deepdrr.geo.F"]], "f (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.F"]], "frametransform (class in deepdrr.geo)": [[4, "deepdrr.geo.FrameTransform"]], "frametransform (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.FrameTransform"]], "hasdirection (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.HasDirection"]], "haslocation (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.HasLocation"]], "haslocationanddirection (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.HasLocationAndDirection"]], "hasprojection (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.HasProjection"]], "homogeneousobject (class in deepdrr.geo)": [[4, "deepdrr.geo.HomogeneousObject"]], "homogeneousobject (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.HomogeneousObject"]], "hyperplane (class in deepdrr.geo)": [[4, "deepdrr.geo.HyperPlane"]], "hyperplane (class in deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.HyperPlane"]], "joinerror": [[4, "deepdrr.geo.JoinError"], [4, "deepdrr.geo.exceptions.JoinError"]], "joinable (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Joinable"]], "k (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.K"]], "k (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.K"]], "k (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.K"]], "k (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.K"]], "l (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.L"]], "l (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.L"]], "line (class in deepdrr.geo)": [[4, "deepdrr.geo.Line"]], "line (class in deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.Line"]], "line2d (class in deepdrr.geo)": [[4, "deepdrr.geo.Line2D"]], "line2d (class in deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.Line2D"]], "line3d (class in deepdrr.geo)": [[4, "deepdrr.geo.Line3D"]], "line3d (class in deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.Line3D"]], "meeterror": [[4, "deepdrr.geo.MeetError"], [4, "deepdrr.geo.exceptions.MeetError"]], "meetable (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Meetable"]], "plane (class in deepdrr.geo)": [[4, "deepdrr.geo.Plane"]], "plane (class in deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.Plane"]], "point (class in deepdrr.geo)": [[4, "deepdrr.geo.Point"]], "point (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Point"]], "point2d (class in deepdrr.geo)": [[4, "deepdrr.geo.Point2D"]], "point2d (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Point2D"]], "point3d (class in deepdrr.geo)": [[4, "deepdrr.geo.Point3D"]], "point3d (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Point3D"]], "pointorvector (class in deepdrr.geo)": [[4, "deepdrr.geo.PointOrVector"]], "pointorvector (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.PointOrVector"]], "primitive (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Primitive"]], "r (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.R"]], "r (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.R"]], "r (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.R"]], "r (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.R"]], "ray (class in deepdrr.geo)": [[4, "deepdrr.geo.Ray"]], "ray (class in deepdrr.geo.ray)": [[4, "deepdrr.geo.ray.Ray"]], "ray2d (class in deepdrr.geo.ray)": [[4, "deepdrr.geo.ray.Ray2D"]], "ray3d (class in deepdrr.geo)": [[4, "deepdrr.geo.Ray3D"]], "ray3d (class in deepdrr.geo.ray)": [[4, "deepdrr.geo.ray.Ray3D"]], "rotation (class in deepdrr.geo)": [[4, "deepdrr.geo.Rotation"]], "segment (class in deepdrr.geo)": [[4, "deepdrr.geo.Segment"]], "segment (class in deepdrr.geo.segment)": [[4, "deepdrr.geo.segment.Segment"]], "segment2d (class in deepdrr.geo)": [[4, "deepdrr.geo.Segment2D"]], "segment2d (class in deepdrr.geo.segment)": [[4, "deepdrr.geo.segment.Segment2D"]], "segment3d (class in deepdrr.geo)": [[4, "deepdrr.geo.Segment3D"]], "segment3d (class in deepdrr.geo.segment)": [[4, "deepdrr.geo.segment.Segment3D"]], "transform (class in deepdrr.geo)": [[4, "deepdrr.geo.Transform"]], "transform (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Transform"]], "vector (class in deepdrr.geo)": [[4, "deepdrr.geo.Vector"]], "vector (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Vector"]], "vector2d (class in deepdrr.geo)": [[4, "deepdrr.geo.Vector2D"]], "vector2d (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Vector2D"]], "vector3d (class in deepdrr.geo)": [[4, "deepdrr.geo.Vector3D"]], "vector3d (class in deepdrr.geo.core)": [[4, "deepdrr.geo.core.Vector3D"]], "__getitem__() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.__getitem__"]], "__len__() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.__len__"]], "__mul__() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.__mul__"]], "a (deepdrr.geo.hyperplane property)": [[4, "deepdrr.geo.HyperPlane.a"]], "a (deepdrr.geo.hyperplane.hyperplane property)": [[4, "deepdrr.geo.hyperplane.HyperPlane.a"]], "align_vectors() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.align_vectors"], [4, "id0"]], "angle() (deepdrr.geo.line method)": [[4, "deepdrr.geo.Line.angle"]], "angle() (deepdrr.geo.core.hasdirection method)": [[4, "deepdrr.geo.core.HasDirection.angle"]], "angle() (deepdrr.geo.hyperplane.line method)": [[4, "deepdrr.geo.hyperplane.Line.angle"]], "apply() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.apply"], [4, "id7"]], "as_euler() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.as_euler"], [4, "id8"]], "as_matrix() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.as_matrix"], [4, "id16"]], "as_mrp() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.as_mrp"], [4, "id19"]], "as_plane() (deepdrr.geo.vector3d method)": [[4, "deepdrr.geo.Vector3D.as_plane"]], "as_plane() (deepdrr.geo.core.vector3d method)": [[4, "deepdrr.geo.core.Vector3D.as_plane"]], "as_point() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.as_point"]], "as_point() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.as_point"]], "as_points() (deepdrr.geo.line method)": [[4, "deepdrr.geo.Line.as_points"]], "as_points() (deepdrr.geo.hyperplane.line method)": [[4, "deepdrr.geo.hyperplane.Line.as_points"]], "as_quat() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.as_quat"], [4, "id22"]], "as_quatpos() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.as_quatpos"]], "as_quatpos() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.as_quatpos"]], "as_rotvec() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.as_rotvec"], [4, "id25"]], "as_vector() (deepdrr.geo.point method)": [[4, "deepdrr.geo.Point.as_vector"]], "as_vector() (deepdrr.geo.core.point method)": [[4, "deepdrr.geo.core.Point.as_vector"]], "aspect_ratio (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.aspect_ratio"]], "aspect_ratio (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.aspect_ratio"]], "b (deepdrr.geo.hyperplane property)": [[4, "deepdrr.geo.HyperPlane.b"]], "b (deepdrr.geo.hyperplane.hyperplane property)": [[4, "deepdrr.geo.hyperplane.HyperPlane.b"]], "backproject() (deepdrr.geo.line2d method)": [[4, "deepdrr.geo.Line2D.backproject"]], "backproject() (deepdrr.geo.point2d method)": [[4, "deepdrr.geo.Point2D.backproject"]], "backproject() (deepdrr.geo.core.point2d method)": [[4, "deepdrr.geo.core.Point2D.backproject"]], "backproject() (deepdrr.geo.hyperplane.line2d method)": [[4, "deepdrr.geo.hyperplane.Line2D.backproject"]], "c (deepdrr.geo.hyperplane property)": [[4, "deepdrr.geo.HyperPlane.c"]], "c (deepdrr.geo.hyperplane.hyperplane property)": [[4, "deepdrr.geo.hyperplane.HyperPlane.c"]], "camera3d_from_index (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.camera3d_from_index"]], "camera3d_from_index (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.camera3d_from_index"]], "camera3d_from_world (deepdrr.geo.cameraprojection attribute)": [[4, "deepdrr.geo.CameraProjection.camera3d_from_world"]], "camera3d_from_world (deepdrr.geo.core.cameraprojection attribute)": [[4, "deepdrr.geo.core.CameraProjection.camera3d_from_world"]], "center_in_world (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.center_in_world"]], "center_in_world (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.center_in_world"]], "concatenate() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.concatenate"], [4, "id28"]], "copy() (deepdrr.geo.homogeneousobject method)": [[4, "deepdrr.geo.HomogeneousObject.copy"]], "copy() (deepdrr.geo.core.homogeneousobject method)": [[4, "deepdrr.geo.core.HomogeneousObject.copy"]], "cosine_distance() (deepdrr.geo.core.hasdirection method)": [[4, "deepdrr.geo.core.HasDirection.cosine_distance"]], "create_group() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.create_group"], [4, "id29"]], "cross() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.cross"]], "cross() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.cross"]], "cx (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.cx"]], "cx (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.cx"]], "cy (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.cy"]], "cy (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.cy"]], "d (deepdrr.geo.hyperplane property)": [[4, "deepdrr.geo.HyperPlane.d"]], "d (deepdrr.geo.hyperplane.hyperplane property)": [[4, "deepdrr.geo.hyperplane.HyperPlane.d"]], "data (deepdrr.geo.cameraintrinsictransform attribute)": [[4, "deepdrr.geo.CameraIntrinsicTransform.data"]], "data (deepdrr.geo.cameraprojection attribute)": [[4, "deepdrr.geo.CameraProjection.data"]], "data (deepdrr.geo.f attribute)": [[4, "deepdrr.geo.F.data"]], "data (deepdrr.geo.frametransform attribute)": [[4, "deepdrr.geo.FrameTransform.data"]], "data (deepdrr.geo.homogeneousobject attribute)": [[4, "deepdrr.geo.HomogeneousObject.data"]], "data (deepdrr.geo.hyperplane attribute)": [[4, "deepdrr.geo.HyperPlane.data"]], "data (deepdrr.geo.line attribute)": [[4, "deepdrr.geo.Line.data"]], "data (deepdrr.geo.line2d attribute)": [[4, "deepdrr.geo.Line2D.data"]], "data (deepdrr.geo.line3d attribute)": [[4, "deepdrr.geo.Line3D.data"]], "data (deepdrr.geo.plane attribute)": [[4, "deepdrr.geo.Plane.data"]], "data (deepdrr.geo.point attribute)": [[4, "deepdrr.geo.Point.data"]], "data (deepdrr.geo.point2d attribute)": [[4, "deepdrr.geo.Point2D.data"]], "data (deepdrr.geo.point3d attribute)": [[4, "deepdrr.geo.Point3D.data"]], "data (deepdrr.geo.pointorvector attribute)": [[4, "deepdrr.geo.PointOrVector.data"]], "data (deepdrr.geo.ray attribute)": [[4, "deepdrr.geo.Ray.data"]], "data (deepdrr.geo.ray3d attribute)": [[4, "deepdrr.geo.Ray3D.data"]], "data (deepdrr.geo.segment attribute)": [[4, "deepdrr.geo.Segment.data"]], "data (deepdrr.geo.segment2d attribute)": [[4, "deepdrr.geo.Segment2D.data"]], "data (deepdrr.geo.segment3d attribute)": [[4, "deepdrr.geo.Segment3D.data"]], "data (deepdrr.geo.transform attribute)": [[4, "deepdrr.geo.Transform.data"]], "data (deepdrr.geo.vector attribute)": [[4, "deepdrr.geo.Vector.data"]], "data (deepdrr.geo.vector2d attribute)": [[4, "deepdrr.geo.Vector2D.data"]], "data (deepdrr.geo.vector3d attribute)": [[4, "deepdrr.geo.Vector3D.data"]], "data (deepdrr.geo.core.f attribute)": [[4, "deepdrr.geo.core.F.data"]], "data (deepdrr.geo.core.frametransform attribute)": [[4, "deepdrr.geo.core.FrameTransform.data"]], "data (deepdrr.geo.core.hasdirection attribute)": [[4, "deepdrr.geo.core.HasDirection.data"]], "data (deepdrr.geo.core.haslocation attribute)": [[4, "deepdrr.geo.core.HasLocation.data"]], "data (deepdrr.geo.core.haslocationanddirection attribute)": [[4, "deepdrr.geo.core.HasLocationAndDirection.data"]], "data (deepdrr.geo.core.homogeneousobject attribute)": [[4, "deepdrr.geo.core.HomogeneousObject.data"]], "data (deepdrr.geo.core.point attribute)": [[4, "deepdrr.geo.core.Point.data"]], "data (deepdrr.geo.core.point2d attribute)": [[4, "deepdrr.geo.core.Point2D.data"]], "data (deepdrr.geo.core.point3d attribute)": [[4, "deepdrr.geo.core.Point3D.data"]], "data (deepdrr.geo.core.pointorvector attribute)": [[4, "deepdrr.geo.core.PointOrVector.data"]], "data (deepdrr.geo.core.primitive attribute)": [[4, "deepdrr.geo.core.Primitive.data"]], "data (deepdrr.geo.core.transform attribute)": [[4, "deepdrr.geo.core.Transform.data"]], "data (deepdrr.geo.core.vector attribute)": [[4, "deepdrr.geo.core.Vector.data"]], "data (deepdrr.geo.core.vector2d attribute)": [[4, "deepdrr.geo.core.Vector2D.data"]], "data (deepdrr.geo.core.vector3d attribute)": [[4, "deepdrr.geo.core.Vector3D.data"]], "data (deepdrr.geo.hyperplane.hyperplane attribute)": [[4, "deepdrr.geo.hyperplane.HyperPlane.data"]], "data (deepdrr.geo.hyperplane.line attribute)": [[4, "deepdrr.geo.hyperplane.Line.data"]], "data (deepdrr.geo.hyperplane.line2d attribute)": [[4, "deepdrr.geo.hyperplane.Line2D.data"]], "data (deepdrr.geo.hyperplane.line3d attribute)": [[4, "deepdrr.geo.hyperplane.Line3D.data"]], "data (deepdrr.geo.hyperplane.plane attribute)": [[4, "deepdrr.geo.hyperplane.Plane.data"]], "data (deepdrr.geo.ray.ray attribute)": [[4, "deepdrr.geo.ray.Ray.data"]], "data (deepdrr.geo.ray.ray2d attribute)": [[4, "deepdrr.geo.ray.Ray2D.data"]], "data (deepdrr.geo.ray.ray3d attribute)": [[4, "deepdrr.geo.ray.Ray3D.data"]], "data (deepdrr.geo.segment.segment attribute)": [[4, "deepdrr.geo.segment.Segment.data"]], "data (deepdrr.geo.segment.segment2d attribute)": [[4, "deepdrr.geo.segment.Segment2D.data"]], "data (deepdrr.geo.segment.segment3d attribute)": [[4, "deepdrr.geo.segment.Segment3D.data"]], "deepdrr.geo": [[4, "module-deepdrr.geo"]], "deepdrr.geo.core": [[4, "module-deepdrr.geo.core"]], "deepdrr.geo.exceptions": [[4, "module-deepdrr.geo.exceptions"]], "deepdrr.geo.hyperplane": [[4, "module-deepdrr.geo.hyperplane"]], "deepdrr.geo.random": [[4, "module-deepdrr.geo.random"]], "deepdrr.geo.ray": [[4, "module-deepdrr.geo.ray"]], "deepdrr.geo.segment": [[4, "module-deepdrr.geo.segment"]], "deepdrr.geo.typing": [[4, "module-deepdrr.geo.typing"]], "deepdrr.geo.utils": [[4, "module-deepdrr.geo.utils"]], "dim (deepdrr.geo.cameraintrinsictransform attribute)": [[4, "deepdrr.geo.CameraIntrinsicTransform.dim"]], "dim (deepdrr.geo.cameraprojection attribute)": [[4, "deepdrr.geo.CameraProjection.dim"]], "dim (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.dim"]], "dim (deepdrr.geo.homogeneousobject property)": [[4, "deepdrr.geo.HomogeneousObject.dim"]], "dim (deepdrr.geo.line2d attribute)": [[4, "deepdrr.geo.Line2D.dim"]], "dim (deepdrr.geo.line3d attribute)": [[4, "deepdrr.geo.Line3D.dim"]], "dim (deepdrr.geo.plane attribute)": [[4, "deepdrr.geo.Plane.dim"]], "dim (deepdrr.geo.point2d attribute)": [[4, "deepdrr.geo.Point2D.dim"]], "dim (deepdrr.geo.point3d attribute)": [[4, "deepdrr.geo.Point3D.dim"]], "dim (deepdrr.geo.ray3d attribute)": [[4, "deepdrr.geo.Ray3D.dim"]], "dim (deepdrr.geo.segment2d attribute)": [[4, "deepdrr.geo.Segment2D.dim"]], "dim (deepdrr.geo.segment3d attribute)": [[4, "deepdrr.geo.Segment3D.dim"]], "dim (deepdrr.geo.transform property)": [[4, "deepdrr.geo.Transform.dim"]], "dim (deepdrr.geo.vector2d attribute)": [[4, "deepdrr.geo.Vector2D.dim"]], "dim (deepdrr.geo.vector3d attribute)": [[4, "deepdrr.geo.Vector3D.dim"]], "dim (deepdrr.geo.core.cameraintrinsictransform attribute)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.dim"]], "dim (deepdrr.geo.core.cameraprojection attribute)": [[4, "deepdrr.geo.core.CameraProjection.dim"]], "dim (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.dim"]], "dim (deepdrr.geo.core.homogeneousobject property)": [[4, "deepdrr.geo.core.HomogeneousObject.dim"]], "dim (deepdrr.geo.core.point2d attribute)": [[4, "deepdrr.geo.core.Point2D.dim"]], "dim (deepdrr.geo.core.point3d attribute)": [[4, "deepdrr.geo.core.Point3D.dim"]], "dim (deepdrr.geo.core.transform property)": [[4, "deepdrr.geo.core.Transform.dim"]], "dim (deepdrr.geo.core.vector2d attribute)": [[4, "deepdrr.geo.core.Vector2D.dim"]], "dim (deepdrr.geo.core.vector3d attribute)": [[4, "deepdrr.geo.core.Vector3D.dim"]], "dim (deepdrr.geo.hyperplane.line2d attribute)": [[4, "deepdrr.geo.hyperplane.Line2D.dim"]], "dim (deepdrr.geo.hyperplane.line3d attribute)": [[4, "deepdrr.geo.hyperplane.Line3D.dim"]], "dim (deepdrr.geo.hyperplane.plane attribute)": [[4, "deepdrr.geo.hyperplane.Plane.dim"]], "dim (deepdrr.geo.ray.ray2d attribute)": [[4, "deepdrr.geo.ray.Ray2D.dim"]], "dim (deepdrr.geo.ray.ray3d attribute)": [[4, "deepdrr.geo.ray.Ray3D.dim"]], "dim (deepdrr.geo.segment.segment2d attribute)": [[4, "deepdrr.geo.segment.Segment2D.dim"]], "dim (deepdrr.geo.segment.segment3d attribute)": [[4, "deepdrr.geo.segment.Segment3D.dim"]], "distance() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.distance"]], "distance() (deepdrr.geo.line method)": [[4, "deepdrr.geo.Line.distance"]], "distance() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.distance"]], "distance() (deepdrr.geo.hyperplane.line method)": [[4, "deepdrr.geo.hyperplane.Line.distance"]], "dot() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.dot"]], "dot() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.dot"]], "dtype (deepdrr.geo.homogeneousobject attribute)": [[4, "deepdrr.geo.HomogeneousObject.dtype"]], "dtype (deepdrr.geo.core.homogeneousobject attribute)": [[4, "deepdrr.geo.core.HomogeneousObject.dtype"]], "dual() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.dual"]], "dual() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.dual"]], "evaluate() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.evaluate"]], "evaluate() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.evaluate"]], "extrinsic (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.extrinsic"]], "extrinsic (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.extrinsic"]], "f() (in module deepdrr.geo)": [[4, "deepdrr.geo.f"]], "f() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.f"]], "focal_length (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.focal_length"]], "focal_length (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.focal_length"]], "frame_transform() (in module deepdrr.geo)": [[4, "deepdrr.geo.frame_transform"]], "frame_transform() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.frame_transform"]], "from_any() (deepdrr.geo.point class method)": [[4, "deepdrr.geo.Point.from_any"]], "from_any() (deepdrr.geo.vector class method)": [[4, "deepdrr.geo.Vector.from_any"]], "from_any() (deepdrr.geo.core.point class method)": [[4, "deepdrr.geo.core.Point.from_any"]], "from_any() (deepdrr.geo.core.vector class method)": [[4, "deepdrr.geo.core.Vector.from_any"]], "from_array() (deepdrr.geo.homogeneousobject class method)": [[4, "deepdrr.geo.HomogeneousObject.from_array"]], "from_array() (deepdrr.geo.point class method)": [[4, "deepdrr.geo.Point.from_array"]], "from_array() (deepdrr.geo.transform class method)": [[4, "deepdrr.geo.Transform.from_array"]], "from_array() (deepdrr.geo.vector class method)": [[4, "deepdrr.geo.Vector.from_array"]], "from_array() (deepdrr.geo.core.homogeneousobject class method)": [[4, "deepdrr.geo.core.HomogeneousObject.from_array"]], "from_array() (deepdrr.geo.core.point class method)": [[4, "deepdrr.geo.core.Point.from_array"]], "from_array() (deepdrr.geo.core.transform class method)": [[4, "deepdrr.geo.core.Transform.from_array"]], "from_array() (deepdrr.geo.core.vector class method)": [[4, "deepdrr.geo.core.Vector.from_array"]], "from_dual() (deepdrr.geo.line3d class method)": [[4, "deepdrr.geo.Line3D.from_dual"]], "from_dual() (deepdrr.geo.hyperplane.line3d class method)": [[4, "deepdrr.geo.hyperplane.Line3D.from_dual"]], "from_euler() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.from_euler"], [4, "id31"]], "from_krt() (deepdrr.geo.cameraprojection class method)": [[4, "deepdrr.geo.CameraProjection.from_krt"]], "from_krt() (deepdrr.geo.core.cameraprojection class method)": [[4, "deepdrr.geo.core.CameraProjection.from_krt"]], "from_line_segments() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_line_segments"]], "from_line_segments() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_line_segments"]], "from_matrix() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.from_matrix"], [4, "id34"]], "from_mrp() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.from_mrp"], [4, "id39"]], "from_origin() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_origin"]], "from_origin() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_origin"]], "from_parameters() (deepdrr.geo.cameraintrinsictransform class method)": [[4, "deepdrr.geo.CameraIntrinsicTransform.from_parameters"]], "from_parameters() (deepdrr.geo.core.cameraintrinsictransform class method)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.from_parameters"]], "from_pd() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_pd"]], "from_pd() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_pd"]], "from_pn() (deepdrr.geo.ray class method)": [[4, "deepdrr.geo.Ray.from_pn"]], "from_pn() (deepdrr.geo.segment class method)": [[4, "deepdrr.geo.Segment.from_pn"]], "from_pn() (deepdrr.geo.ray.ray class method)": [[4, "deepdrr.geo.ray.Ray.from_pn"]], "from_pn() (deepdrr.geo.segment.segment class method)": [[4, "deepdrr.geo.segment.Segment.from_pn"]], "from_point_correspondence() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_point_correspondence"]], "from_point_correspondence() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_point_correspondence"]], "from_point_direction() (deepdrr.geo.line class method)": [[4, "deepdrr.geo.Line.from_point_direction"]], "from_point_direction() (deepdrr.geo.plane class method)": [[4, "deepdrr.geo.Plane.from_point_direction"]], "from_point_direction() (deepdrr.geo.ray class method)": [[4, "deepdrr.geo.Ray.from_point_direction"]], "from_point_direction() (deepdrr.geo.segment class method)": [[4, "deepdrr.geo.Segment.from_point_direction"]], "from_point_direction() (deepdrr.geo.core.haslocationanddirection class method)": [[4, "deepdrr.geo.core.HasLocationAndDirection.from_point_direction"]], "from_point_direction() (deepdrr.geo.hyperplane.line class method)": [[4, "deepdrr.geo.hyperplane.Line.from_point_direction"]], "from_point_direction() (deepdrr.geo.hyperplane.plane class method)": [[4, "deepdrr.geo.hyperplane.Plane.from_point_direction"]], "from_point_direction() (deepdrr.geo.ray.ray class method)": [[4, "deepdrr.geo.ray.Ray.from_point_direction"]], "from_point_direction() (deepdrr.geo.segment.segment class method)": [[4, "deepdrr.geo.segment.Segment.from_point_direction"]], "from_point_normal() (deepdrr.geo.plane class method)": [[4, "deepdrr.geo.Plane.from_point_normal"]], "from_point_normal() (deepdrr.geo.hyperplane.plane class method)": [[4, "deepdrr.geo.hyperplane.Plane.from_point_normal"]], "from_pointdir() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_pointdir"]], "from_pointdir() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_pointdir"]], "from_points() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_points"]], "from_points() (deepdrr.geo.plane class method)": [[4, "deepdrr.geo.Plane.from_points"]], "from_points() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_points"]], "from_points() (deepdrr.geo.hyperplane.plane class method)": [[4, "deepdrr.geo.hyperplane.Plane.from_points"]], "from_pq() (deepdrr.geo.ray class method)": [[4, "deepdrr.geo.Ray.from_pq"]], "from_pq() (deepdrr.geo.segment class method)": [[4, "deepdrr.geo.Segment.from_pq"]], "from_pq() (deepdrr.geo.ray.ray class method)": [[4, "deepdrr.geo.ray.Ray.from_pq"]], "from_pq() (deepdrr.geo.segment.segment class method)": [[4, "deepdrr.geo.segment.Segment.from_pq"]], "from_primal() (deepdrr.geo.line3d class method)": [[4, "deepdrr.geo.Line3D.from_primal"]], "from_primal() (deepdrr.geo.hyperplane.line3d class method)": [[4, "deepdrr.geo.hyperplane.Line3D.from_primal"]], "from_quat() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.from_quat"], [4, "id42"]], "from_quatpos() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_quatpos"]], "from_quatpos() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_quatpos"]], "from_rotation() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_rotation"]], "from_rotation() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_rotation"]], "from_rotvec() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.from_rotvec"], [4, "id45"]], "from_rt() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_rt"]], "from_rt() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_rt"]], "from_rtk() (deepdrr.geo.cameraprojection class method)": [[4, "deepdrr.geo.CameraProjection.from_rtk"]], "from_rtk() (deepdrr.geo.core.cameraprojection class method)": [[4, "deepdrr.geo.core.CameraProjection.from_rtk"]], "from_scaling() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_scaling"]], "from_scaling() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_scaling"]], "from_sizes() (deepdrr.geo.cameraintrinsictransform class method)": [[4, "deepdrr.geo.CameraIntrinsicTransform.from_sizes"]], "from_sizes() (deepdrr.geo.core.cameraintrinsictransform class method)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.from_sizes"]], "from_translation() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.from_translation"]], "from_translation() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.from_translation"]], "fx (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.fx"]], "fx (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.fx"]], "fy (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.fy"]], "fy (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.fy"]], "get_center() (deepdrr.geo.transform method)": [[4, "deepdrr.geo.Transform.get_center"]], "get_center() (deepdrr.geo.core.transform method)": [[4, "deepdrr.geo.core.Transform.get_center"]], "get_center_in_volume() (deepdrr.geo.cameraprojection method)": [[4, "deepdrr.geo.CameraProjection.get_center_in_volume"]], "get_center_in_volume() (deepdrr.geo.core.cameraprojection method)": [[4, "deepdrr.geo.core.CameraProjection.get_center_in_volume"]], "get_center_in_world() (deepdrr.geo.cameraprojection method)": [[4, "deepdrr.geo.CameraProjection.get_center_in_world"]], "get_center_in_world() (deepdrr.geo.core.cameraprojection method)": [[4, "deepdrr.geo.core.CameraProjection.get_center_in_world"]], "get_config() (deepdrr.geo.cameraintrinsictransform method)": [[4, "deepdrr.geo.CameraIntrinsicTransform.get_config"]], "get_config() (deepdrr.geo.cameraprojection method)": [[4, "deepdrr.geo.CameraProjection.get_config"]], "get_config() (deepdrr.geo.homogeneousobject method)": [[4, "deepdrr.geo.HomogeneousObject.get_config"]], "get_config() (deepdrr.geo.core.cameraintrinsictransform method)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.get_config"]], "get_config() (deepdrr.geo.core.cameraprojection method)": [[4, "deepdrr.geo.core.CameraProjection.get_config"]], "get_config() (deepdrr.geo.core.homogeneousobject method)": [[4, "deepdrr.geo.core.HomogeneousObject.get_config"]], "get_data() (deepdrr.geo.homogeneousobject method)": [[4, "deepdrr.geo.HomogeneousObject.get_data"]], "get_data() (deepdrr.geo.core.homogeneousobject method)": [[4, "deepdrr.geo.core.HomogeneousObject.get_data"]], "get_data() (in module deepdrr.geo)": [[4, "deepdrr.geo.get_data"]], "get_data() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.get_data"]], "get_direction() (deepdrr.geo.line2d method)": [[4, "deepdrr.geo.Line2D.get_direction"]], "get_direction() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.get_direction"]], "get_direction() (deepdrr.geo.plane method)": [[4, "deepdrr.geo.Plane.get_direction"]], "get_direction() (deepdrr.geo.ray method)": [[4, "deepdrr.geo.Ray.get_direction"]], "get_direction() (deepdrr.geo.segment method)": [[4, "deepdrr.geo.Segment.get_direction"]], "get_direction() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.get_direction"]], "get_direction() (deepdrr.geo.core.hasdirection method)": [[4, "deepdrr.geo.core.HasDirection.get_direction"]], "get_direction() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.get_direction"]], "get_direction() (deepdrr.geo.hyperplane.line2d method)": [[4, "deepdrr.geo.hyperplane.Line2D.get_direction"]], "get_direction() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.get_direction"]], "get_direction() (deepdrr.geo.hyperplane.plane method)": [[4, "deepdrr.geo.hyperplane.Plane.get_direction"]], "get_direction() (deepdrr.geo.ray.ray method)": [[4, "deepdrr.geo.ray.Ray.get_direction"]], "get_direction() (deepdrr.geo.segment.segment method)": [[4, "deepdrr.geo.segment.Segment.get_direction"]], "get_normal() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.get_normal"]], "get_normal() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.get_normal"]], "get_point() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.get_point"]], "get_point() (deepdrr.geo.line2d method)": [[4, "deepdrr.geo.Line2D.get_point"]], "get_point() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.get_point"]], "get_point() (deepdrr.geo.plane method)": [[4, "deepdrr.geo.Plane.get_point"]], "get_point() (deepdrr.geo.point method)": [[4, "deepdrr.geo.Point.get_point"]], "get_point() (deepdrr.geo.ray method)": [[4, "deepdrr.geo.Ray.get_point"]], "get_point() (deepdrr.geo.segment method)": [[4, "deepdrr.geo.Segment.get_point"]], "get_point() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.get_point"]], "get_point() (deepdrr.geo.core.haslocation method)": [[4, "deepdrr.geo.core.HasLocation.get_point"]], "get_point() (deepdrr.geo.core.point method)": [[4, "deepdrr.geo.core.Point.get_point"]], "get_point() (deepdrr.geo.hyperplane.line2d method)": [[4, "deepdrr.geo.hyperplane.Line2D.get_point"]], "get_point() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.get_point"]], "get_point() (deepdrr.geo.hyperplane.plane method)": [[4, "deepdrr.geo.hyperplane.Plane.get_point"]], "get_point() (deepdrr.geo.ray.ray method)": [[4, "deepdrr.geo.ray.Ray.get_point"]], "get_point() (deepdrr.geo.segment.segment method)": [[4, "deepdrr.geo.segment.Segment.get_point"]], "get_ray_transform() (deepdrr.geo.cameraprojection method)": [[4, "deepdrr.geo.CameraProjection.get_ray_transform"]], "get_ray_transform() (deepdrr.geo.core.cameraprojection method)": [[4, "deepdrr.geo.core.CameraProjection.get_ray_transform"]], "hat() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.hat"]], "hat() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.hat"]], "i (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.i"]], "i (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.i"]], "identity() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.identity"]], "identity() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.identity"], [4, "id48"]], "identity() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.identity"]], "index_from_camera2d (deepdrr.geo.cameraprojection attribute)": [[4, "deepdrr.geo.CameraProjection.index_from_camera2d"]], "index_from_camera2d (deepdrr.geo.core.cameraprojection attribute)": [[4, "deepdrr.geo.core.CameraProjection.index_from_camera2d"]], "index_from_camera3d (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.index_from_camera3d"]], "index_from_camera3d (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.index_from_camera3d"]], "index_from_world (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.index_from_world"]], "index_from_world (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.index_from_world"]], "input_dim (deepdrr.geo.cameraintrinsictransform attribute)": [[4, "deepdrr.geo.CameraIntrinsicTransform.input_dim"]], "input_dim (deepdrr.geo.transform property)": [[4, "deepdrr.geo.Transform.input_dim"]], "input_dim (deepdrr.geo.core.cameraintrinsictransform attribute)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.input_dim"]], "input_dim (deepdrr.geo.core.transform property)": [[4, "deepdrr.geo.core.Transform.input_dim"]], "intersects() (deepdrr.geo.core.meetable method)": [[4, "deepdrr.geo.core.Meetable.intersects"]], "intrinsic (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.intrinsic"]], "intrinsic (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.intrinsic"]], "inv (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.inv"]], "inv (deepdrr.geo.transform property)": [[4, "deepdrr.geo.Transform.inv"]], "inv (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.inv"]], "inv (deepdrr.geo.core.transform property)": [[4, "deepdrr.geo.core.Transform.inv"]], "inv() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.inv"], [4, "id49"]], "inverse() (deepdrr.geo.transform method)": [[4, "deepdrr.geo.Transform.inverse"]], "inverse() (deepdrr.geo.core.transform method)": [[4, "deepdrr.geo.core.Transform.inverse"]], "j (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.j"]], "j (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.j"]], "join() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.join"]], "join() (deepdrr.geo.point2d method)": [[4, "deepdrr.geo.Point2D.join"]], "join() (deepdrr.geo.point3d method)": [[4, "deepdrr.geo.Point3D.join"]], "join() (deepdrr.geo.ray3d method)": [[4, "deepdrr.geo.Ray3D.join"]], "join() (deepdrr.geo.segment3d method)": [[4, "deepdrr.geo.Segment3D.join"]], "join() (deepdrr.geo.core.joinable method)": [[4, "deepdrr.geo.core.Joinable.join"]], "join() (deepdrr.geo.core.point2d method)": [[4, "deepdrr.geo.core.Point2D.join"]], "join() (deepdrr.geo.core.point3d method)": [[4, "deepdrr.geo.core.Point3D.join"]], "join() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.join"]], "join() (deepdrr.geo.ray.ray3d method)": [[4, "deepdrr.geo.ray.Ray3D.join"]], "join() (deepdrr.geo.segment.segment3d method)": [[4, "deepdrr.geo.segment.Segment3D.join"]], "k (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.k"]], "k (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.k"]], "l() (in module deepdrr.geo)": [[4, "deepdrr.geo.l"]], "l() (in module deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.l"]], "length() (deepdrr.geo.segment method)": [[4, "deepdrr.geo.Segment.length"]], "length() (deepdrr.geo.segment.segment method)": [[4, "deepdrr.geo.segment.Segment.length"]], "lerp() (deepdrr.geo.point method)": [[4, "deepdrr.geo.Point.lerp"]], "lerp() (deepdrr.geo.core.point method)": [[4, "deepdrr.geo.core.Point.lerp"]], "line() (deepdrr.geo.segment method)": [[4, "deepdrr.geo.Segment.line"]], "line() (deepdrr.geo.segment.segment method)": [[4, "deepdrr.geo.segment.Segment.line"]], "line() (in module deepdrr.geo)": [[4, "deepdrr.geo.line"]], "line() (in module deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.line"]], "load() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.load"]], "load() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.load"]], "load_txt() (deepdrr.geo.frametransform class method)": [[4, "deepdrr.geo.FrameTransform.load_txt"]], "load_txt() (deepdrr.geo.core.frametransform class method)": [[4, "deepdrr.geo.core.FrameTransform.load_txt"]], "magnitude() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.magnitude"], [4, "id50"]], "mean() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.mean"], [4, "id51"]], "meet() (deepdrr.geo.line2d method)": [[4, "deepdrr.geo.Line2D.meet"]], "meet() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.meet"]], "meet() (deepdrr.geo.plane method)": [[4, "deepdrr.geo.Plane.meet"]], "meet() (deepdrr.geo.ray3d method)": [[4, "deepdrr.geo.Ray3D.meet"]], "meet() (deepdrr.geo.segment2d method)": [[4, "deepdrr.geo.Segment2D.meet"]], "meet() (deepdrr.geo.segment3d method)": [[4, "deepdrr.geo.Segment3D.meet"]], "meet() (deepdrr.geo.core.meetable method)": [[4, "deepdrr.geo.core.Meetable.meet"]], "meet() (deepdrr.geo.hyperplane.line2d method)": [[4, "deepdrr.geo.hyperplane.Line2D.meet"]], "meet() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.meet"]], "meet() (deepdrr.geo.hyperplane.plane method)": [[4, "deepdrr.geo.hyperplane.Plane.meet"]], "meet() (deepdrr.geo.ray.ray2d method)": [[4, "deepdrr.geo.ray.Ray2D.meet"]], "meet() (deepdrr.geo.ray.ray3d method)": [[4, "deepdrr.geo.ray.Ray3D.meet"]], "meet() (deepdrr.geo.segment.segment2d method)": [[4, "deepdrr.geo.segment.Segment2D.meet"]], "meet() (deepdrr.geo.segment.segment3d method)": [[4, "deepdrr.geo.segment.Segment3D.meet"]], "midpoint() (deepdrr.geo.segment method)": [[4, "deepdrr.geo.Segment.midpoint"]], "midpoint() (deepdrr.geo.segment.segment method)": [[4, "deepdrr.geo.segment.Segment.midpoint"]], "n (deepdrr.geo.hyperplane property)": [[4, "deepdrr.geo.HyperPlane.n"]], "n (deepdrr.geo.ray property)": [[4, "deepdrr.geo.Ray.n"]], "n (deepdrr.geo.hyperplane.hyperplane property)": [[4, "deepdrr.geo.hyperplane.HyperPlane.n"]], "n (deepdrr.geo.ray.ray property)": [[4, "deepdrr.geo.ray.Ray.n"]], "norm() (deepdrr.geo.pointorvector method)": [[4, "deepdrr.geo.PointOrVector.norm"]], "norm() (deepdrr.geo.core.pointorvector method)": [[4, "deepdrr.geo.core.PointOrVector.norm"]], "normal() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.normal"]], "normal() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.normal"]], "normal() (in module deepdrr.geo.random)": [[4, "deepdrr.geo.random.normal"]], "normalized() (deepdrr.geo.vector method)": [[4, "deepdrr.geo.Vector.normalized"]], "normalized() (deepdrr.geo.core.vector method)": [[4, "deepdrr.geo.core.Vector.normalized"]], "normsqr() (deepdrr.geo.pointorvector method)": [[4, "deepdrr.geo.PointOrVector.normsqr"]], "normsqr() (deepdrr.geo.core.pointorvector method)": [[4, "deepdrr.geo.core.PointOrVector.normsqr"]], "o (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.o"]], "o (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.o"]], "optical_center (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.optical_center"]], "optical_center (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.optical_center"]], "p (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.p"]], "p (deepdrr.geo.ray property)": [[4, "deepdrr.geo.Ray.p"]], "p (deepdrr.geo.segment property)": [[4, "deepdrr.geo.Segment.p"]], "p (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.p"]], "p (deepdrr.geo.ray.ray property)": [[4, "deepdrr.geo.ray.Ray.p"]], "p (deepdrr.geo.segment.segment property)": [[4, "deepdrr.geo.segment.Segment.p"]], "p() (in module deepdrr.geo)": [[4, "deepdrr.geo.p"]], "p() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.p"]], "perpendicular() (deepdrr.geo.vector2d method)": [[4, "deepdrr.geo.Vector2D.perpendicular"]], "perpendicular() (deepdrr.geo.vector3d method)": [[4, "deepdrr.geo.Vector3D.perpendicular"]], "perpendicular() (deepdrr.geo.core.vector2d method)": [[4, "deepdrr.geo.core.Vector2D.perpendicular"]], "perpendicular() (deepdrr.geo.core.vector3d method)": [[4, "deepdrr.geo.core.Vector3D.perpendicular"]], "pl() (in module deepdrr.geo)": [[4, "deepdrr.geo.pl"]], "pl() (in module deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.pl"]], "plane() (in module deepdrr.geo)": [[4, "deepdrr.geo.plane"]], "plane() (in module deepdrr.geo.hyperplane)": [[4, "deepdrr.geo.hyperplane.plane"]], "point() (in module deepdrr.geo)": [[4, "deepdrr.geo.point"]], "point() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.point"]], "primal() (deepdrr.geo.line3d method)": [[4, "deepdrr.geo.Line3D.primal"]], "primal() (deepdrr.geo.hyperplane.line3d method)": [[4, "deepdrr.geo.hyperplane.Line3D.primal"]], "principle_ray_in_world (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.principle_ray_in_world"]], "principle_ray_in_world (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.principle_ray_in_world"]], "project() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.project"]], "project() (deepdrr.geo.line method)": [[4, "deepdrr.geo.Line.project"]], "project() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.project"]], "project() (deepdrr.geo.hyperplane.line method)": [[4, "deepdrr.geo.hyperplane.Line.project"]], "projection_type() (deepdrr.geo.line3d class method)": [[4, "deepdrr.geo.Line3D.projection_type"]], "projection_type() (deepdrr.geo.point3d class method)": [[4, "deepdrr.geo.Point3D.projection_type"]], "projection_type() (deepdrr.geo.ray3d class method)": [[4, "deepdrr.geo.Ray3D.projection_type"]], "projection_type() (deepdrr.geo.segment3d class method)": [[4, "deepdrr.geo.Segment3D.projection_type"]], "projection_type() (deepdrr.geo.core.hasprojection class method)": [[4, "deepdrr.geo.core.HasProjection.projection_type"]], "projection_type() (deepdrr.geo.core.point3d class method)": [[4, "deepdrr.geo.core.Point3D.projection_type"]], "projection_type() (deepdrr.geo.hyperplane.line3d class method)": [[4, "deepdrr.geo.hyperplane.Line3D.projection_type"]], "projection_type() (deepdrr.geo.ray.ray3d class method)": [[4, "deepdrr.geo.ray.Ray3D.projection_type"]], "projection_type() (deepdrr.geo.segment.segment3d class method)": [[4, "deepdrr.geo.segment.Segment3D.projection_type"]], "q (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.q"]], "q (deepdrr.geo.segment property)": [[4, "deepdrr.geo.Segment.q"]], "q (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.q"]], "q (deepdrr.geo.segment.segment property)": [[4, "deepdrr.geo.segment.Segment.q"]], "r (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.r"]], "r (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.r"]], "random() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.random"], [4, "id52"]], "ray() (in module deepdrr.geo)": [[4, "deepdrr.geo.ray"]], "ray() (in module deepdrr.geo.ray)": [[4, "deepdrr.geo.ray.ray"]], "reduce() (deepdrr.geo.rotation method)": [[4, "deepdrr.geo.Rotation.reduce"], [4, "id53"]], "rotate() (deepdrr.geo.vector3d method)": [[4, "deepdrr.geo.Vector3D.rotate"]], "rotate() (deepdrr.geo.core.vector3d method)": [[4, "deepdrr.geo.core.Vector3D.rotate"]], "rotfrom() (deepdrr.geo.core.hasdirection method)": [[4, "deepdrr.geo.core.HasDirection.rotfrom"]], "rotvec_to() (deepdrr.geo.vector3d method)": [[4, "deepdrr.geo.Vector3D.rotvec_to"]], "rotvec_to() (deepdrr.geo.core.vector3d method)": [[4, "deepdrr.geo.core.Vector3D.rotvec_to"]], "s (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.s"]], "s (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.s"]], "save() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.save"]], "save() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.save"]], "save_txt() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.save_txt"]], "save_txt() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.save_txt"]], "segment() (in module deepdrr.geo)": [[4, "deepdrr.geo.segment"]], "segment() (in module deepdrr.geo.segment)": [[4, "deepdrr.geo.segment.segment"]], "sensor_height (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.sensor_height"]], "sensor_height (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.sensor_height"]], "sensor_height (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.sensor_height"]], "sensor_height (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.sensor_height"]], "sensor_size (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.sensor_size"]], "sensor_size (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.sensor_size"]], "sensor_width (deepdrr.geo.cameraintrinsictransform property)": [[4, "deepdrr.geo.CameraIntrinsicTransform.sensor_width"]], "sensor_width (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.sensor_width"]], "sensor_width (deepdrr.geo.core.cameraintrinsictransform property)": [[4, "deepdrr.geo.core.CameraIntrinsicTransform.sensor_width"]], "sensor_width (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.sensor_width"]], "shape (deepdrr.geo.homogeneousobject property)": [[4, "deepdrr.geo.HomogeneousObject.shape"]], "shape (deepdrr.geo.core.homogeneousobject property)": [[4, "deepdrr.geo.core.HomogeneousObject.shape"]], "signed_distance() (deepdrr.geo.hyperplane method)": [[4, "deepdrr.geo.HyperPlane.signed_distance"]], "signed_distance() (deepdrr.geo.hyperplane.hyperplane method)": [[4, "deepdrr.geo.hyperplane.HyperPlane.signed_distance"]], "single (deepdrr.geo.rotation attribute)": [[4, "deepdrr.geo.Rotation.single"], [4, "id54"]], "spherical_uniform() (in module deepdrr.geo)": [[4, "deepdrr.geo.spherical_uniform"]], "spherical_uniform() (in module deepdrr.geo.random)": [[4, "deepdrr.geo.random.spherical_uniform"]], "t (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.t"]], "t (deepdrr.geo.frametransform property)": [[4, "deepdrr.geo.FrameTransform.t"]], "t (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.t"]], "t (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.t"]], "t (deepdrr.geo.core.frametransform property)": [[4, "deepdrr.geo.core.FrameTransform.t"]], "t (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.t"]], "toarray() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.toarray"]], "toarray() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.toarray"]], "tolist() (deepdrr.geo.homogeneousobject method)": [[4, "deepdrr.geo.HomogeneousObject.tolist"]], "tolist() (deepdrr.geo.core.homogeneousobject method)": [[4, "deepdrr.geo.core.HomogeneousObject.tolist"]], "tostring() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.tostring"]], "tostring() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.tostring"]], "transform_points() (deepdrr.geo.frametransform method)": [[4, "deepdrr.geo.FrameTransform.transform_points"]], "transform_points() (deepdrr.geo.core.frametransform method)": [[4, "deepdrr.geo.core.FrameTransform.transform_points"]], "u (deepdrr.geo.line3d property)": [[4, "deepdrr.geo.Line3D.u"]], "u (deepdrr.geo.hyperplane.line3d property)": [[4, "deepdrr.geo.hyperplane.Line3D.u"]], "uniform() (in module deepdrr.geo.random)": [[4, "deepdrr.geo.random.uniform"]], "v() (in module deepdrr.geo)": [[4, "deepdrr.geo.v"]], "v() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.v"]], "vector() (in module deepdrr.geo)": [[4, "deepdrr.geo.vector"]], "vector() (in module deepdrr.geo.core)": [[4, "deepdrr.geo.core.vector"]], "w (deepdrr.geo.pointorvector property)": [[4, "deepdrr.geo.PointOrVector.w"]], "w (deepdrr.geo.core.pointorvector property)": [[4, "deepdrr.geo.core.PointOrVector.w"]], "world_from_camera3d (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.world_from_camera3d"]], "world_from_camera3d (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.world_from_camera3d"]], "world_from_index (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.world_from_index"]], "world_from_index (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.world_from_index"]], "world_from_index_on_image_plane (deepdrr.geo.cameraprojection property)": [[4, "deepdrr.geo.CameraProjection.world_from_index_on_image_plane"]], "world_from_index_on_image_plane (deepdrr.geo.core.cameraprojection property)": [[4, "deepdrr.geo.core.CameraProjection.world_from_index_on_image_plane"]], "x (deepdrr.geo.pointorvector property)": [[4, "deepdrr.geo.PointOrVector.x"]], "x (deepdrr.geo.core.pointorvector property)": [[4, "deepdrr.geo.core.PointOrVector.x"]], "y (deepdrr.geo.pointorvector property)": [[4, "deepdrr.geo.PointOrVector.y"]], "y (deepdrr.geo.core.pointorvector property)": [[4, "deepdrr.geo.core.PointOrVector.y"]], "z (deepdrr.geo.pointorvector property)": [[4, "deepdrr.geo.PointOrVector.z"]], "z (deepdrr.geo.core.pointorvector property)": [[4, "deepdrr.geo.core.PointOrVector.z"]], "instrument (class in deepdrr.instruments)": [[5, "deepdrr.instruments.Instrument"]], "instrument (class in deepdrr.instruments.base)": [[5, "deepdrr.instruments.base.Instrument"]], "num_points (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.NUM_POINTS"]], "num_points (deepdrr.instruments.base.instrument attribute)": [[5, "deepdrr.instruments.base.Instrument.NUM_POINTS"]], "advance() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.advance"]], "advance() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.advance"]], "align() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.align"]], "align() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.align"]], "anatomical_coordinate_system (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.anatomical_coordinate_system"]], "anatomical_from_ijk (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.anatomical_from_IJK"]], "base (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.base"]], "base (deepdrr.instruments.base.instrument attribute)": [[5, "deepdrr.instruments.base.Instrument.base"]], "base_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.base_in_world"]], "base_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.base_in_world"]], "center (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.center"]], "center (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.center"]], "center_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.center_in_world"]], "center_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.center_in_world"]], "centerline_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.centerline_in_world"]], "centerline_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.centerline_in_world"]], "data (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.data"]], "deepdrr.instruments": [[5, "module-deepdrr.instruments"]], "deepdrr.instruments.base": [[5, "module-deepdrr.instruments.base"]], "get_cache_dir() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.get_cache_dir"]], "get_cache_dir() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.get_cache_dir"]], "get_mesh_in_world() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.get_mesh_in_world"]], "get_model_paths() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.get_model_paths"]], "get_model_paths() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.get_model_paths"]], "length_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.length_in_world"]], "length_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.length_in_world"]], "materials (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.materials"]], "orient() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.orient"]], "orient() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.orient"]], "radius (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.radius"]], "radius (deepdrr.instruments.base.instrument attribute)": [[5, "deepdrr.instruments.base.Instrument.radius"]], "tip (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.tip"]], "tip (deepdrr.instruments.base.instrument attribute)": [[5, "deepdrr.instruments.base.Instrument.tip"]], "tip_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.tip_in_world"]], "tip_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.tip_in_world"]], "trajectory_in_world (deepdrr.instruments.instrument property)": [[5, "deepdrr.instruments.Instrument.trajectory_in_world"]], "trajectory_in_world (deepdrr.instruments.base.instrument property)": [[5, "deepdrr.instruments.base.Instrument.trajectory_in_world"]], "twist() (deepdrr.instruments.instrument method)": [[5, "deepdrr.instruments.Instrument.twist"]], "twist() (deepdrr.instruments.base.instrument method)": [[5, "deepdrr.instruments.base.Instrument.twist"]], "world_from_anatomical (deepdrr.instruments.instrument attribute)": [[5, "deepdrr.instruments.Instrument.world_from_anatomical"]], "cudacomptonstruct (class in deepdrr.projector.cuda_scatter_structs)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaComptonStruct"]], "cudamatmfpstruct (class in deepdrr.projector.cuda_scatter_structs)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaMatMfpStruct"]], "cudaplanesurfacestruct (class in deepdrr.projector.cuda_scatter_structs)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaPlaneSurfaceStruct"]], "cudarayleighstruct (class in deepdrr.projector.cuda_scatter_structs)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaRayleighStruct"]], "cudawoodcockstruct (class in deepdrr.projector.cuda_scatter_structs)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaWoodcockStruct"]], "memsize (deepdrr.projector.cuda_scatter_structs.cudacomptonstruct attribute)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaComptonStruct.MEMSIZE"]], "memsize (deepdrr.projector.cuda_scatter_structs.cudamatmfpstruct attribute)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaMatMfpStruct.MEMSIZE"]], "memsize (deepdrr.projector.cuda_scatter_structs.cudaplanesurfacestruct attribute)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaPlaneSurfaceStruct.MEMSIZE"]], "memsize (deepdrr.projector.cuda_scatter_structs.cudarayleighstruct attribute)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaRayleighStruct.MEMSIZE"]], "memsize (deepdrr.projector.cuda_scatter_structs.cudawoodcockstruct attribute)": [[6, "deepdrr.projector.cuda_scatter_structs.CudaWoodcockStruct.MEMSIZE"]], "planesurface (class in deepdrr.projector.plane_surface)": [[6, "deepdrr.projector.plane_surface.PlaneSurface"]], "projector (class in deepdrr.projector)": [[6, "deepdrr.projector.Projector"]], "projector (class in deepdrr.projector.projector)": [[6, "deepdrr.projector.projector.Projector"]], "rita (class in deepdrr.projector.rita)": [[6, "deepdrr.projector.rita.RITA"]], "add_noise() (in module deepdrr.projector.analytic_generators)": [[6, "deepdrr.projector.analytic_generators.add_noise"]], "basis_1 (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.basis_1"]], "basis_2 (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.basis_2"]], "bounds (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.bounds"]], "calculate_attenuation_gpu() (in module deepdrr.projector.mass_attenuation)": [[6, "deepdrr.projector.mass_attenuation.calculate_attenuation_gpu"]], "calculate_intensity_from_spectrum() (in module deepdrr.projector.mass_attenuation)": [[6, "deepdrr.projector.mass_attenuation.calculate_intensity_from_spectrum"]], "camera_intrinsics (deepdrr.projector.projector property)": [[6, "deepdrr.projector.Projector.camera_intrinsics"]], "camera_intrinsics (deepdrr.projector.projector.projector property)": [[6, "deepdrr.projector.projector.Projector.camera_intrinsics"]], "check_ray_intersection() (deepdrr.projector.plane_surface.planesurface method)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.check_ray_intersection"]], "deepdrr.projector": [[6, "module-deepdrr.projector"]], "deepdrr.projector.analytic_generators": [[6, "module-deepdrr.projector.analytic_generators"]], "deepdrr.projector.conv_to_mcgpu": [[6, "module-deepdrr.projector.conv_to_mcgpu"]], "deepdrr.projector.cuda_scatter_structs": [[6, "module-deepdrr.projector.cuda_scatter_structs"]], "deepdrr.projector.mass_attenuation": [[6, "module-deepdrr.projector.mass_attenuation"]], "deepdrr.projector.material_coefficients": [[6, "module-deepdrr.projector.material_coefficients"]], "deepdrr.projector.mcgpu_compton_data": [[6, "module-deepdrr.projector.mcgpu_compton_data"]], "deepdrr.projector.mcgpu_density": [[6, "module-deepdrr.projector.mcgpu_density"]], "deepdrr.projector.mcgpu_mfp_data": [[6, "module-deepdrr.projector.mcgpu_mfp_data"]], "deepdrr.projector.mcgpu_rita_samplers": [[6, "module-deepdrr.projector.mcgpu_rita_samplers"]], "deepdrr.projector.plane_surface": [[6, "module-deepdrr.projector.plane_surface"]], "deepdrr.projector.projector": [[6, "module-deepdrr.projector.projector"]], "deepdrr.projector.rita": [[6, "module-deepdrr.projector.rita"]], "deepdrr.projector.scatter": [[6, "module-deepdrr.projector.scatter"]], "deepdrr.projector.spectral_data": [[6, "module-deepdrr.projector.spectral_data"]], "dtype (deepdrr.projector.rita.rita attribute)": [[6, "deepdrr.projector.rita.RITA.dtype"]], "free() (deepdrr.projector.projector method)": [[6, "deepdrr.projector.Projector.free"]], "free() (deepdrr.projector.projector.projector method)": [[6, "deepdrr.projector.projector.Projector.free"]], "from_pdf() (deepdrr.projector.rita.rita class method)": [[6, "deepdrr.projector.rita.RITA.from_pdf"]], "from_saved_params() (deepdrr.projector.rita.rita class method)": [[6, "deepdrr.projector.rita.RITA.from_saved_params"]], "get_absorption_coefs() (in module deepdrr.projector.mass_attenuation)": [[6, "deepdrr.projector.mass_attenuation.get_absorption_coefs"]], "get_detector_plane() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.get_detector_plane"]], "get_lin_comb_coefs() (deepdrr.projector.plane_surface.planesurface method)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.get_lin_comb_coefs"]], "get_mat_filename() (in module deepdrr.projector.conv_to_mcgpu)": [[6, "deepdrr.projector.conv_to_mcgpu.get_mat_filename"]], "get_mfp_data() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.get_mfp_data"]], "get_scattered_dir() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.get_scattered_dir"]], "get_woodcock_mfp() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.get_woodcock_mfp"]], "import_pycuda() (in module deepdrr.projector.projector)": [[6, "deepdrr.projector.projector.import_pycuda"]], "initialize() (deepdrr.projector.projector method)": [[6, "deepdrr.projector.Projector.initialize"]], "initialize() (deepdrr.projector.projector.projector method)": [[6, "deepdrr.projector.projector.Projector.initialize"]], "initialize_output_arrays() (deepdrr.projector.projector method)": [[6, "deepdrr.projector.Projector.initialize_output_arrays"]], "initialize_output_arrays() (deepdrr.projector.projector.projector method)": [[6, "deepdrr.projector.projector.Projector.initialize_output_arrays"]], "log_interp() (in module deepdrr.projector.mass_attenuation)": [[6, "deepdrr.projector.mass_attenuation.log_interp"]], "make_mcgpu_inputs() (in module deepdrr.projector.conv_to_mcgpu)": [[6, "deepdrr.projector.conv_to_mcgpu.make_mcgpu_inputs"]], "make_woodcock_mfp() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.make_woodcock_mfp"]], "move_photon_to_volume() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.move_photon_to_volume"]], "numerically_integrate() (in module deepdrr.projector.rita)": [[6, "deepdrr.projector.rita.numerically_integrate"]], "orthogonal (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.orthogonal"]], "output_size (deepdrr.projector.projector property)": [[6, "deepdrr.projector.Projector.output_size"]], "output_size (deepdrr.projector.projector.projector property)": [[6, "deepdrr.projector.projector.Projector.output_size"]], "plane_vector (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.plane_vector"]], "point_on_surface() (deepdrr.projector.plane_surface.planesurface method)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.point_on_surface"]], "point_on_surface_checking() (deepdrr.projector.plane_surface.planesurface method)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.point_on_surface_checking"]], "project() (deepdrr.projector.projector method)": [[6, "deepdrr.projector.Projector.project"]], "project() (deepdrr.projector.projector.projector method)": [[6, "deepdrr.projector.projector.Projector.project"]], "project_over_carm_range() (deepdrr.projector.projector method)": [[6, "deepdrr.projector.Projector.project_over_carm_range"]], "project_over_carm_range() (deepdrr.projector.projector.projector method)": [[6, "deepdrr.projector.projector.Projector.project_over_carm_range"]], "sample_compton_theta_e_prime() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.sample_Compton_theta_E_prime"]], "sample_rayleigh_theta() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.sample_Rayleigh_theta"]], "sample_u01() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.sample_U01"]], "sample_initial_direction() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.sample_initial_direction"]], "sample_initial_energy() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.sample_initial_energy"]], "sample_rita() (deepdrr.projector.rita.rita method)": [[6, "deepdrr.projector.rita.RITA.sample_rita"]], "sanity_check_compton_data() (in module deepdrr.projector.mcgpu_compton_data)": [[6, "deepdrr.projector.mcgpu_compton_data.sanity_check_compton_data"]], "sanity_check_mfps() (in module deepdrr.projector.mcgpu_mfp_data)": [[6, "deepdrr.projector.mcgpu_mfp_data.sanity_check_mfps"]], "sanity_check_saved_rita_params() (in module deepdrr.projector.mcgpu_rita_samplers)": [[6, "deepdrr.projector.mcgpu_rita_samplers.sanity_check_saved_rita_params"]], "simulate_scatter_no_vr() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.simulate_scatter_no_vr"]], "source_to_detector_distance (deepdrr.projector.projector property)": [[6, "deepdrr.projector.Projector.source_to_detector_distance"]], "source_to_detector_distance (deepdrr.projector.projector.projector property)": [[6, "deepdrr.projector.projector.Projector.source_to_detector_distance"]], "surface_origin (deepdrr.projector.plane_surface.planesurface attribute)": [[6, "deepdrr.projector.plane_surface.PlaneSurface.surface_origin"]], "track_single_photon_no_vr() (in module deepdrr.projector.scatter)": [[6, "deepdrr.projector.scatter.track_single_photon_no_vr"]], "volume (deepdrr.projector.projector property)": [[6, "deepdrr.projector.Projector.volume"]], "volume (deepdrr.projector.projector.projector property)": [[6, "deepdrr.projector.projector.Projector.volume"]], "volumes (deepdrr.projector.projector attribute)": [[6, "deepdrr.projector.Projector.volumes"]], "volumes (deepdrr.projector.projector.projector attribute)": [[6, "deepdrr.projector.projector.Projector.volumes"]], "deepdrr.projector.mcgpu_incoherent_scatter_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.pmma_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.PMMA_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.adipose_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.adipose_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.air_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.air_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.blood_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.blood_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.bone_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.bone_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.brain_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.brain_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.breast_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.breast_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.cartilage_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.cartilage_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.connective_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.connective_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.glands_others_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.glands_others_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.liver_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.liver_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.lung_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.lung_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.muscle_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.muscle_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.red_marrow_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.red_marrow_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.skin_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.skin_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.soft_tissue_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.soft_tissue_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.stomach_intestines_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.stomach_intestines_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.titanium_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.titanium_compton_data"]], "deepdrr.projector.mcgpu_incoherent_scatter_data.water_compton_data": [[7, "module-deepdrr.projector.mcgpu_incoherent_scatter_data.water_compton_data"]], "deepdrr.projector.mcgpu_mean_free_path_data": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data"]], "deepdrr.projector.mcgpu_mean_free_path_data.pmma_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.PMMA_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.adipose_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.adipose_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.air_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.air_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.blood_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.blood_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.bone_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.bone_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.brain_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.brain_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.breast_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.breast_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.cartilage_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.cartilage_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.connective_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.connective_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.glands_others_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.glands_others_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.liver_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.liver_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.lung_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.lung_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.muscle_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.muscle_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.red_marrow_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.red_marrow_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.skin_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.skin_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.soft_tissue_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.soft_tissue_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.stomach_intestines_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.stomach_intestines_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.titanium_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.titanium_mfp"]], "deepdrr.projector.mcgpu_mean_free_path_data.water_mfp": [[8, "module-deepdrr.projector.mcgpu_mean_free_path_data.water_mfp"]], "deepdrr.projector.mcgpu_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params"]], "deepdrr.projector.mcgpu_rita_params.pmma_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.PMMA_rita_params"]], "deepdrr.projector.mcgpu_rita_params.adipose_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.adipose_rita_params"]], "deepdrr.projector.mcgpu_rita_params.air_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.air_rita_params"]], "deepdrr.projector.mcgpu_rita_params.blood_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.blood_rita_params"]], "deepdrr.projector.mcgpu_rita_params.bone_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.bone_rita_params"]], "deepdrr.projector.mcgpu_rita_params.brain_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.brain_rita_params"]], "deepdrr.projector.mcgpu_rita_params.breast_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.breast_rita_params"]], "deepdrr.projector.mcgpu_rita_params.cartilage_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.cartilage_rita_params"]], "deepdrr.projector.mcgpu_rita_params.connective_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.connective_rita_params"]], "deepdrr.projector.mcgpu_rita_params.glands_others_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.glands_others_rita_params"]], "deepdrr.projector.mcgpu_rita_params.liver_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.liver_rita_params"]], "deepdrr.projector.mcgpu_rita_params.lung_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.lung_rita_params"]], "deepdrr.projector.mcgpu_rita_params.muscle_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.muscle_rita_params"]], "deepdrr.projector.mcgpu_rita_params.red_marrow_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.red_marrow_rita_params"]], "deepdrr.projector.mcgpu_rita_params.skin_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.skin_rita_params"]], "deepdrr.projector.mcgpu_rita_params.soft_tissue_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.soft_tissue_rita_params"]], "deepdrr.projector.mcgpu_rita_params.stomach_intestines_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.stomach_intestines_rita_params"]], "deepdrr.projector.mcgpu_rita_params.titanium_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.titanium_rita_params"]], "deepdrr.projector.mcgpu_rita_params.water_rita_params": [[9, "module-deepdrr.projector.mcgpu_rita_params.water_rita_params"]], "as_float32() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.as_float32"]], "as_uint8() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.as_uint8"]], "blend_heatmaps() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.blend_heatmaps"]], "deepdrr.utils": [[10, "module-deepdrr.utils"]], "deepdrr.utils.data_utils": [[10, "module-deepdrr.utils.data_utils"]], "deepdrr.utils.dicom_utils": [[10, "module-deepdrr.utils.dicom_utils"]], "deepdrr.utils.heatmap_utils": [[10, "module-deepdrr.utils.heatmap_utils"]], "deepdrr.utils.image_utils": [[10, "module-deepdrr.utils.image_utils"]], "deepdrr.utils.mesh_utils": [[10, "module-deepdrr.utils.mesh_utils"]], "deepdrr.utils.test_utils": [[10, "module-deepdrr.utils.test_utils"]], "deepdrr_data_dir() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.deepdrr_data_dir"]], "download() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.download"]], "download_sampledata() (in module deepdrr.utils.test_utils)": [[10, "deepdrr.utils.test_utils.download_sampledata"]], "draw_circles() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.draw_circles"]], "draw_line() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.draw_line"]], "draw_masks() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.draw_masks"]], "draw_segment() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.draw_segment"]], "ensure_cdim() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.ensure_cdim"]], "find_dicom() (in module deepdrr.utils.dicom_utils)": [[10, "deepdrr.utils.dicom_utils.find_dicom"]], "generate_uniform_angles() (in module deepdrr.utils)": [[10, "deepdrr.utils.generate_uniform_angles"]], "get_output_dir() (in module deepdrr.utils.test_utils)": [[10, "deepdrr.utils.test_utils.get_output_dir"]], "get_threshold() (in module deepdrr.utils.heatmap_utils)": [[10, "deepdrr.utils.heatmap_utils.get_threshold"]], "get_time() (in module deepdrr.utils.dicom_utils)": [[10, "deepdrr.utils.dicom_utils.get_time"]], "image_saver() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.image_saver"]], "isosurface() (in module deepdrr.utils.mesh_utils)": [[10, "deepdrr.utils.mesh_utils.isosurface"]], "jsonable() (in module deepdrr.utils)": [[10, "deepdrr.utils.jsonable"]], "jsonable() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.jsonable"]], "listify() (in module deepdrr.utils)": [[10, "deepdrr.utils.listify"]], "load_fcsv() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.load_fcsv"]], "load_json() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.load_json"]], "mappable() (in module deepdrr.utils)": [[10, "deepdrr.utils.mappable"]], "neglog() (in module deepdrr.utils)": [[10, "deepdrr.utils.neglog"]], "one_hot() (in module deepdrr.utils)": [[10, "deepdrr.utils.one_hot"]], "param_saver() (in module deepdrr.utils)": [[10, "deepdrr.utils.param_saver"]], "radians() (in module deepdrr.utils)": [[10, "deepdrr.utils.radians"]], "read_image() (in module deepdrr.utils.dicom_utils)": [[10, "deepdrr.utils.dicom_utils.read_image"]], "save() (in module deepdrr.utils.image_utils)": [[10, "deepdrr.utils.image_utils.save"]], "save_fcsv() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.save_fcsv"]], "save_json() (in module deepdrr.utils.data_utils)": [[10, "deepdrr.utils.data_utils.save_json"]], "try_import_pyvista() (in module deepdrr.utils)": [[10, "deepdrr.utils.try_import_pyvista"]], "try_import_vtk() (in module deepdrr.utils)": [[10, "deepdrr.utils.try_import_vtk"]], "tuplify() (in module deepdrr.utils)": [[10, "deepdrr.utils.tuplify"]], "voxelize() (in module deepdrr.utils.mesh_utils)": [[10, "deepdrr.utils.mesh_utils.voxelize"]], "voxelize_dir() (in module deepdrr.utils.mesh_utils)": [[10, "deepdrr.utils.mesh_utils.voxelize_dir"]], "voxelize_file() (in module deepdrr.utils.mesh_utils)": [[10, "deepdrr.utils.mesh_utils.voxelize_file"]], "ijk_from_lps (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.IJK_from_LPS"]], "ijk_from_lps (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.IJK_from_LPS"]], "ijk_from_ras (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.IJK_from_RAS"]], "ijk_from_ras (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.IJK_from_RAS"]], "ijk_from_anatomical (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.IJK_from_anatomical"], [11, "deepdrr.vol.Volume.ijk_from_anatomical"]], "ijk_from_anatomical (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.IJK_from_anatomical"], [11, "deepdrr.vol.volume.Volume.ijk_from_anatomical"]], "ijk_from_world (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.IJK_from_world"], [11, "deepdrr.vol.Volume.ijk_from_world"]], "ijk_from_world (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.IJK_from_world"], [11, "deepdrr.vol.volume.Volume.ijk_from_world"]], "kwire (class in deepdrr.vol)": [[11, "deepdrr.vol.KWire"]], "kwire (class in deepdrr.vol.kwire)": [[11, "deepdrr.vol.kwire.KWire"]], "lps_from_ijk (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.LPS_from_IJK"]], "lps_from_ijk (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.LPS_from_IJK"]], "metalvolume (class in deepdrr.vol)": [[11, "deepdrr.vol.MetalVolume"]], "metalvolume (class in deepdrr.vol.volume)": [[11, "deepdrr.vol.volume.MetalVolume"]], "ras_from_ijk (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.RAS_from_IJK"]], "ras_from_ijk (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.RAS_from_IJK"]], "volume (class in deepdrr.vol)": [[11, "deepdrr.vol.Volume"]], "volume (class in deepdrr.vol.volume)": [[11, "deepdrr.vol.volume.Volume"]], "advance() (deepdrr.vol.kwire method)": [[11, "deepdrr.vol.KWire.advance"]], "advance() (deepdrr.vol.kwire.kwire method)": [[11, "deepdrr.vol.kwire.KWire.advance"]], "align() (deepdrr.vol.kwire method)": [[11, "deepdrr.vol.KWire.align"]], "align() (deepdrr.vol.kwire.kwire method)": [[11, "deepdrr.vol.kwire.KWire.align"]], "anatomical_coordinate_system (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.anatomical_coordinate_system"]], "anatomical_coordinate_system (deepdrr.vol.metalvolume attribute)": [[11, "deepdrr.vol.MetalVolume.anatomical_coordinate_system"]], "anatomical_coordinate_system (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.anatomical_coordinate_system"]], "anatomical_coordinate_system (deepdrr.vol.volume.metalvolume attribute)": [[11, "deepdrr.vol.volume.MetalVolume.anatomical_coordinate_system"]], "anatomical_coordinate_system (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.anatomical_coordinate_system"]], "anatomical_from_ijk (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.vol.metalvolume attribute)": [[11, "deepdrr.vol.MetalVolume.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.vol.volume.metalvolume attribute)": [[11, "deepdrr.vol.volume.MetalVolume.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.anatomical_from_IJK"]], "anatomical_from_ijk (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.anatomical_from_ijk"]], "anatomical_from_ijk (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.anatomical_from_ijk"]], "anatomical_from_world (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.anatomical_from_world"]], "anatomical_from_world (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.anatomical_from_world"]], "base (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.base"]], "base (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.base"]], "base_in_ijk (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.base_in_IJK"]], "base_in_ijk (deepdrr.vol.kwire.kwire attribute)": [[11, "deepdrr.vol.kwire.KWire.base_in_IJK"]], "base_in_anatomical (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.base_in_anatomical"]], "base_in_anatomical (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.base_in_anatomical"]], "base_in_ijk (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.base_in_ijk"]], "base_in_ijk (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.base_in_ijk"]], "base_in_world (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.base_in_world"]], "base_in_world (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.base_in_world"]], "cache_dir (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.cache_dir"]], "cache_dir (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.cache_dir"]], "center_in_world (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.center_in_world"]], "center_in_world (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.center_in_world"]], "centerline_in_world (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.centerline_in_world"]], "centerline_in_world (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.centerline_in_world"]], "copy_pose() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.copy_pose"]], "copy_pose() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.copy_pose"]], "crop() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.crop"]], "crop() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.crop"]], "data (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.data"]], "data (deepdrr.vol.metalvolume attribute)": [[11, "deepdrr.vol.MetalVolume.data"]], "data (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.data"]], "data (deepdrr.vol.volume.metalvolume attribute)": [[11, "deepdrr.vol.volume.MetalVolume.data"]], "data (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.data"]], "deepdrr.vol": [[11, "module-deepdrr.vol"]], "deepdrr.vol.kwire": [[11, "module-deepdrr.vol.kwire"]], "deepdrr.vol.volume": [[11, "module-deepdrr.vol.volume"]], "diameter (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.diameter"]], "diameter (deepdrr.vol.kwire.kwire attribute)": [[11, "deepdrr.vol.kwire.KWire.diameter"]], "facedown() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.facedown"]], "facedown() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.facedown"]], "faceup() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.faceup"]], "faceup() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.faceup"]], "from_dicom() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.from_dicom"]], "from_dicom() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.from_dicom"]], "from_example() (deepdrr.vol.kwire class method)": [[11, "deepdrr.vol.KWire.from_example"]], "from_example() (deepdrr.vol.kwire.kwire class method)": [[11, "deepdrr.vol.kwire.KWire.from_example"]], "from_hu() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.from_hu"]], "from_hu() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.from_hu"]], "from_nifti() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.from_nifti"]], "from_nifti() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.from_nifti"]], "from_nrrd() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.from_nrrd"]], "from_nrrd() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.from_nrrd"]], "from_parameters() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.from_parameters"]], "from_parameters() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.from_parameters"]], "get_bbox_ijk() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.get_bbox_IJK"]], "get_bbox_ijk() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.get_bbox_IJK"]], "get_bounding_box_in_world() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.get_bounding_box_in_world"]], "get_bounding_box_in_world() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.get_bounding_box_in_world"]], "get_config() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.get_config"]], "get_config() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.get_config"]], "get_mesh_in_world() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.get_mesh_in_world"]], "get_mesh_in_world() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.get_mesh_in_world"]], "get_surface() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.get_surface"]], "get_surface() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.get_surface"]], "interpolate() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.interpolate"]], "interpolate() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.interpolate"]], "isosurface() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.isosurface"]], "isosurface() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.isosurface"]], "length_in_world (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.length_in_world"]], "length_in_world (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.length_in_world"]], "load() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.load"]], "load() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.load"]], "materials (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.materials"]], "materials (deepdrr.vol.metalvolume attribute)": [[11, "deepdrr.vol.MetalVolume.materials"]], "materials (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.materials"]], "materials (deepdrr.vol.volume.metalvolume attribute)": [[11, "deepdrr.vol.volume.MetalVolume.materials"]], "materials (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.materials"]], "orient() (deepdrr.vol.kwire method)": [[11, "deepdrr.vol.KWire.orient"]], "orient() (deepdrr.vol.kwire.kwire method)": [[11, "deepdrr.vol.kwire.KWire.orient"]], "orient_patient() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.orient_patient"]], "orient_patient() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.orient_patient"]], "origin (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.origin"]], "origin (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.origin"]], "origin_in_anatomical (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.origin_in_anatomical"]], "origin_in_anatomical (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.origin_in_anatomical"]], "origin_in_world (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.origin_in_world"]], "origin_in_world (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.origin_in_world"]], "place() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.place"]], "place() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.place"]], "place_center() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.place_center"]], "place_center() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.place_center"]], "prone() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.prone"]], "prone() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.prone"]], "radius (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.radius"]], "radius (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.radius"]], "rotate() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.rotate"]], "rotate() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.rotate"]], "save() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.save"]], "save() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.save"]], "scale() (deepdrr.vol.kwire method)": [[11, "deepdrr.vol.KWire.scale"]], "scale() (deepdrr.vol.kwire.kwire method)": [[11, "deepdrr.vol.kwire.KWire.scale"]], "segment_materials() (deepdrr.vol.volume class method)": [[11, "deepdrr.vol.Volume.segment_materials"]], "segment_materials() (deepdrr.vol.volume.volume class method)": [[11, "deepdrr.vol.volume.Volume.segment_materials"]], "shape (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.shape"]], "shape (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.shape"]], "shrink() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.shrink"]], "shrink() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.shrink"]], "spacing (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.spacing"]], "spacing (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.spacing"]], "supine() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.supine"]], "supine() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.supine"]], "tip (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.tip"]], "tip (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.tip"]], "tip_in_ijk (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.tip_in_IJK"]], "tip_in_ijk (deepdrr.vol.kwire.kwire attribute)": [[11, "deepdrr.vol.kwire.KWire.tip_in_IJK"]], "tip_in_anatomical (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.tip_in_anatomical"]], "tip_in_anatomical (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.tip_in_anatomical"]], "tip_in_ijk (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.tip_in_ijk"]], "tip_in_ijk (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.tip_in_ijk"]], "tip_in_world (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.tip_in_world"]], "tip_in_world (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.tip_in_world"]], "trajectory_in_world (deepdrr.vol.kwire property)": [[11, "deepdrr.vol.KWire.trajectory_in_world"]], "trajectory_in_world (deepdrr.vol.kwire.kwire property)": [[11, "deepdrr.vol.kwire.KWire.trajectory_in_world"]], "translate() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.translate"]], "translate() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.translate"]], "translate_center_to() (deepdrr.vol.volume method)": [[11, "deepdrr.vol.Volume.translate_center_to"]], "translate_center_to() (deepdrr.vol.volume.volume method)": [[11, "deepdrr.vol.volume.Volume.translate_center_to"]], "twist() (deepdrr.vol.kwire method)": [[11, "deepdrr.vol.KWire.twist"]], "twist() (deepdrr.vol.kwire.kwire method)": [[11, "deepdrr.vol.kwire.KWire.twist"]], "world_from_ijk (deepdrr.vol.volume property)": [[11, "deepdrr.vol.Volume.world_from_IJK"], [11, "deepdrr.vol.Volume.world_from_ijk"]], "world_from_ijk (deepdrr.vol.volume.volume property)": [[11, "deepdrr.vol.volume.Volume.world_from_IJK"], [11, "deepdrr.vol.volume.Volume.world_from_ijk"]], "world_from_anatomical (deepdrr.vol.kwire attribute)": [[11, "deepdrr.vol.KWire.world_from_anatomical"]], "world_from_anatomical (deepdrr.vol.metalvolume attribute)": [[11, "deepdrr.vol.MetalVolume.world_from_anatomical"]], "world_from_anatomical (deepdrr.vol.volume attribute)": [[11, "deepdrr.vol.Volume.world_from_anatomical"]], "world_from_anatomical (deepdrr.vol.volume.metalvolume attribute)": [[11, "deepdrr.vol.volume.MetalVolume.world_from_anatomical"]], "world_from_anatomical (deepdrr.vol.volume.volume attribute)": [[11, "deepdrr.vol.volume.Volume.world_from_anatomical"]]}})